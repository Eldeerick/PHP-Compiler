Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT_MULTI
    COMMENT_SINGLE
    DOLAR
    ELSE
    ELSEIF
    IDENTATION
    LEFT_LOGICAL
    RIGHT_LOGICAL

Grammar

Rule 0     S' -> main
Rule 1     main -> BEGIN_PROGRAM main_program END_PROGRAM
Rule 2     main -> BEGIN_PROGRAM END_PROGRAM
Rule 3     main_program -> inner_statement main_program
Rule 4     main_program -> inner_statement
Rule 5     inner_statement -> function_declaration_statement
Rule 6     inner_statement -> statement
Rule 7     inner_statement_MUL -> inner_statement inner_statement_MUL
Rule 8     inner_statement_MUL -> inner_statement
Rule 9     expr -> expr PLUS expr
Rule 10    expr -> expr MINUS expr
Rule 11    expr -> MINUS expr
Rule 12    expr -> expr DIVIDE expr
Rule 13    expr -> expr PERCENT expr
Rule 14    expr -> expr TIMES expr
Rule 15    expr -> expr EQUALS expr
Rule 16    expr -> expr NOT_EQUAL expr
Rule 17    expr -> expr GREAT_THAN expr
Rule 18    expr -> expr GREAT_EQUAL expr
Rule 19    expr -> expr LESS_THAN expr
Rule 20    expr -> expr LESS_EQUAL expr
Rule 21    expr -> expr AND expr
Rule 22    expr -> expr OR expr
Rule 23    expr -> EXC_DOT expr
Rule 24    expr -> INCREMENT variable
Rule 25    expr -> variable INCREMENT
Rule 26    expr -> DECREMENT variable
Rule 27    expr -> variable DECREMENT
Rule 28    expr -> variable
Rule 29    expr -> LPAREN expr RPAREN
Rule 30    expr -> ARRAY_TYPE array_declaration
Rule 31    expr -> LPAREN typecast_operator RPAREN expr
Rule 32    expr -> function_call
Rule 33    expr -> expr INTE_DOT expr DDOT expr
Rule 34    expr -> variable ADD_ASSIGN expr
Rule 35    expr -> variable SUB_ASSIGN expr
Rule 36    expr -> variable MOD_ASSIGN expr
Rule 37    expr -> variable TIMES_ASSIGN expr
Rule 38    expr -> variable DIVIDE_ASSIGN expr
Rule 39    expr -> variable ASSIGN expr
Rule 40    expr -> NUMBER_INTEGER
Rule 41    expr -> NUMBER_REAL
Rule 42    expr -> CONSTANT_ENCAPSED_STRING
Rule 43    expr -> TRUE
Rule 44    expr -> FALSE
Rule 45    typecast_operator -> INT_TYPE
Rule 46    typecast_operator -> FLOAT_TYPE
Rule 47    typecast_operator -> ARRAY_TYPE
Rule 48    typecast_operator -> STRING_TYPE
Rule 49    typecast_operator -> BOOL_TYPE
Rule 50    exit_statement -> EXIT exit_expr
Rule 51    exit_statement -> EXIT
Rule 52    die_statement -> DIE exit_expr
Rule 53    die_statement -> DIE
Rule 54    exit_expr -> LPAREN expr RPAREN
Rule 55    exit_expr -> LPAREN RPAREN
Rule 56    array_declaration -> LPAREN array_pair_list RPAREN
Rule 57    array_declaration -> LPAREN RPAREN
Rule 58    statement -> expr SEMICOLON
Rule 59    statement -> while_statement
Rule 60    statement -> if_statement
Rule 61    statement -> do_statement
Rule 62    statement -> for_statement
Rule 63    statement -> foreach_statement
Rule 64    statement -> break_statement
Rule 65    statement -> continue_statement
Rule 66    statement -> return_statement
Rule 67    statement -> exit_statement SEMICOLON
Rule 68    statement -> die_statement SEMICOLON
Rule 69    statement -> global_statement SEMICOLON
Rule 70    if_statement -> IF expr_parentheses statement_block_optional
Rule 71    global_statement -> GLOBAL global_var statement_COLON_GLOBAL
Rule 72    global_statement -> GLOBAL global_var
Rule 73    while_statement -> WHILE expr_parentheses statement_block_optional
Rule 74    do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON
Rule 75    break_statement -> BREAK expr SEMICOLON
Rule 76    break_statement -> BREAK SEMICOLON
Rule 77    continue_statement -> CONTINUE expr SEMICOLON
Rule 78    continue_statement -> CONTINUE SEMICOLON
Rule 79    return_statement -> RETURN expr SEMICOLON
Rule 80    return_statement -> RETURN SEMICOLON
Rule 81    for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional
Rule 82    for_parameters -> SEMICOLON SEMICOLON
Rule 83    for_parameters -> for_expr_OPT SEMICOLON SEMICOLON
Rule 84    for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON
Rule 85    for_parameters -> for_expr_OPT SEMICOLON SEMICOLON for_expr_OPT
Rule 86    for_parameters -> SEMICOLON for_expr_OPT SEMICOLON
Rule 87    for_parameters -> SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT
Rule 88    for_parameters -> SEMICOLON SEMICOLON for_expr_OPT
Rule 89    for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT
Rule 90    global_var -> VARIABLE
Rule 91    statement_COLON_GLOBAL -> COLON global_var statement_COLON_GLOBAL
Rule 92    statement_COLON_GLOBAL -> COLON global_var
Rule 93    ampersand_variable -> AMPERSAND VARIABLE
Rule 94    ampersand_variable -> VARIABLE
Rule 95    expr_parentheses -> LPAREN expr RPAREN
Rule 96    foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
Rule 97    foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
Rule 98    for_expr_OPT -> expr for_expr_COLON_EXPR
Rule 99    for_expr_OPT -> expr
Rule 100   for_expr_COLON_EXPR -> COLON expr for_expr_COLON_EXPR
Rule 101   for_expr_COLON_EXPR -> COLON expr
Rule 102   function_call -> ID LPAREN function_call_parameter_list RPAREN
Rule 103   function_call -> ID LPAREN RPAREN
Rule 104   function_call_parameter_list -> function_call_parameter fc_parameter_list_COLON_PARAMETER
Rule 105   function_call_parameter_list -> function_call_parameter
Rule 106   fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter fc_parameter_list_COLON_PARAMETER
Rule 107   fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter
Rule 108   function_call_parameter -> expr
Rule 109   function_call_parameter -> AMPERSAND VARIABLE
Rule 110   variable -> VARIABLE variable_array_selector
Rule 111   variable -> VARIABLE
Rule 112   selector -> LBRACKET expr RBRACKET
Rule 113   selector -> LBRACKET RBRACKET
Rule 114   function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements
Rule 115   fds_statements -> LKEY inner_statement_MUL RKEY
Rule 116   fds_statements -> LKEY RKEY
Rule 117   fds_id -> AMPERSAND ID
Rule 118   fds_id -> ID
Rule 119   fds_parameter -> LPAREN parameter_list RPAREN
Rule 120   fds_parameter -> LPAREN RPAREN
Rule 121   parameter_list -> parameter parameter_list_colon_parameter
Rule 122   parameter_list -> parameter
Rule 123   parameter -> VARIABLE
Rule 124   parameter -> parameter_prefix VARIABLE
Rule 125   parameter -> VARIABLE ASSIGN static_scalar
Rule 126   parameter -> parameter_prefix VARIABLE ASSIGN static_scalar
Rule 127   parameter_prefix -> parameter_type AMPERSAND
Rule 128   parameter_prefix -> AMPERSAND
Rule 129   parameter_prefix -> parameter_type
Rule 130   parameter_type -> INT_TYPE
Rule 131   parameter_type -> STRING_TYPE
Rule 132   parameter_type -> FLOAT_TYPE
Rule 133   parameter_type -> ARRAY_TYPE
Rule 134   parameter_type -> BOOL_TYPE
Rule 135   static_scalar -> common_scalar
Rule 136   static_scalar -> PLUS static_scalar
Rule 137   static_scalar -> MINUS static_scalar
Rule 138   common_scalar -> NUMBER_REAL
Rule 139   common_scalar -> NUMBER_INTEGER
Rule 140   common_scalar -> CONSTANT_ENCAPSED_STRING
Rule 141   array_pair_list -> array_pair array_pair_list_ARR_PAIR
Rule 142   array_pair_list -> array_pair
Rule 143   array_pair -> expr
Rule 144   array_pair -> AMPERSAND variable
Rule 145   array_pair -> expr ATTR_ASSOC expr
Rule 146   array_pair -> expr ATTR_ASSOC AMPERSAND variable
Rule 147   statement_MUL -> statement statement_MUL
Rule 148   statement_MUL -> statement
Rule 149   statement_block_optional -> statement
Rule 150   statement_block_optional -> LKEY statement_MUL RKEY
Rule 151   statement_block_optional -> LKEY RKEY
Rule 152   parameter_list_colon_parameter -> COLON parameter parameter_list_colon_parameter
Rule 153   parameter_list_colon_parameter -> COLON parameter
Rule 154   variable_array_selector -> selector variable_array_selector
Rule 155   variable_array_selector -> selector
Rule 156   array_pair_list_ARR_PAIR -> COLON array_pair array_pair_list_ARR_PAIR
Rule 157   array_pair_list_ARR_PAIR -> COLON array_pair

Terminals, with rules where they appear

ADD_ASSIGN           : 34
AMPERSAND            : 93 109 117 127 128 144 146
AND                  : 21
ARRAY_TYPE           : 30 47 133
AS                   : 96 97
ASSIGN               : 39 125 126
ATTR_ASSOC           : 97 145 146
BEGIN_PROGRAM        : 1 2
BOOL_TYPE            : 49 134
BREAK                : 75 76
COLON                : 91 92 100 101 106 107 152 153 156 157
COMMENT_MULTI        : 
COMMENT_SINGLE       : 
CONSTANT_ENCAPSED_STRING : 42 140
CONTINUE             : 77 78
DDOT                 : 33
DECREMENT            : 26 27
DIE                  : 52 53
DIVIDE               : 12
DIVIDE_ASSIGN        : 38
DO                   : 74
DOLAR                : 
ELSE                 : 
ELSEIF               : 
END_PROGRAM          : 1 2
EQUALS               : 15
EXC_DOT              : 23
EXIT                 : 50 51
FALSE                : 44
FLOAT_TYPE           : 46 132
FOR                  : 81
FOREACH              : 96 97
FUNCTION             : 114
GLOBAL               : 71 72
GREAT_EQUAL          : 18
GREAT_THAN           : 17
ID                   : 102 103 117 118
IDENTATION           : 
IF                   : 70
INCREMENT            : 24 25
INTE_DOT             : 33
INT_TYPE             : 45 130
LBRACKET             : 112 113
LEFT_LOGICAL         : 
LESS_EQUAL           : 20
LESS_THAN            : 19
LKEY                 : 115 116 150 151
LPAREN               : 29 31 54 55 56 57 81 95 96 97 102 103 119 120
MINUS                : 10 11 137
MOD_ASSIGN           : 36
NOT_EQUAL            : 16
NUMBER_INTEGER       : 40 139
NUMBER_REAL          : 41 138
OR                   : 22
PERCENT              : 13
PLUS                 : 9 136
RBRACKET             : 112 113
RETURN               : 79 80
RIGHT_LOGICAL        : 
RKEY                 : 115 116 150 151
RPAREN               : 29 31 54 55 56 57 81 95 96 97 102 103 119 120
SEMICOLON            : 58 67 68 69 74 75 76 77 78 79 80 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89
STRING_TYPE          : 48 131
SUB_ASSIGN           : 35
TIMES                : 14
TIMES_ASSIGN         : 37
TRUE                 : 43
VARIABLE             : 90 93 94 109 110 111 123 124 125 126
WHILE                : 73 74
error                : 

Nonterminals, with rules where they appear

ampersand_variable   : 96 97 97
array_declaration    : 30
array_pair           : 141 142 156 157
array_pair_list      : 56
array_pair_list_ARR_PAIR : 141 156
break_statement      : 64
common_scalar        : 135
continue_statement   : 65
die_statement        : 68
do_statement         : 61
exit_expr            : 50 52
exit_statement       : 67
expr                 : 9 9 10 10 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 29 31 33 33 33 34 35 36 37 38 39 54 58 75 77 79 95 96 97 98 99 100 101 108 112 143 145 145 146
expr_parentheses     : 70 73 74
fc_parameter_list_COLON_PARAMETER : 104 106
fds_id               : 114
fds_parameter        : 114
fds_statements       : 114
for_expr_COLON_EXPR  : 98 100
for_expr_OPT         : 83 84 84 85 85 86 87 87 88 89 89 89
for_parameters       : 81
for_statement        : 62
foreach_statement    : 63
function_call        : 32
function_call_parameter : 104 105 106 107
function_call_parameter_list : 102
function_declaration_statement : 5
global_statement     : 69
global_var           : 71 72 91 92
if_statement         : 60
inner_statement      : 3 4 7 8
inner_statement_MUL  : 7 115
main                 : 0
main_program         : 1 3
parameter            : 121 122 152 153
parameter_list       : 119
parameter_list_colon_parameter : 121 152
parameter_prefix     : 124 126
parameter_type       : 127 129
return_statement     : 66
selector             : 154 155
statement            : 6 147 148 149
statement_COLON_GLOBAL : 71 91
statement_MUL        : 147 150
statement_block_optional : 70 73 74 81 96 97
static_scalar        : 125 126 136 137
typecast_operator    : 31
variable             : 24 25 26 27 28 34 35 36 37 38 39 144 146
variable_array_selector : 110 154
while_statement      : 59

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . BEGIN_PROGRAM main_program END_PROGRAM
    (2) main -> . BEGIN_PROGRAM END_PROGRAM

    BEGIN_PROGRAM   shift and go to state 2

    main                           shift and go to state 1

state 1

    (0) S' -> main .



state 2

    (1) main -> BEGIN_PROGRAM . main_program END_PROGRAM
    (2) main -> BEGIN_PROGRAM . END_PROGRAM
    (3) main_program -> . inner_statement main_program
    (4) main_program -> . inner_statement
    (5) inner_statement -> . function_declaration_statement
    (6) inner_statement -> . statement
    (114) function_declaration_statement -> . FUNCTION fds_id fds_parameter fds_statements
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    END_PROGRAM     shift and go to state 4
    FUNCTION        shift and go to state 8
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    main_program                   shift and go to state 3
    inner_statement                shift and go to state 5
    function_declaration_statement shift and go to state 6
    statement                      shift and go to state 7
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 3

    (1) main -> BEGIN_PROGRAM main_program . END_PROGRAM

    END_PROGRAM     shift and go to state 47


state 4

    (2) main -> BEGIN_PROGRAM END_PROGRAM .

    $end            reduce using rule 2 (main -> BEGIN_PROGRAM END_PROGRAM .)


state 5

    (3) main_program -> inner_statement . main_program
    (4) main_program -> inner_statement .
    (3) main_program -> . inner_statement main_program
    (4) main_program -> . inner_statement
    (5) inner_statement -> . function_declaration_statement
    (6) inner_statement -> . statement
    (114) function_declaration_statement -> . FUNCTION fds_id fds_parameter fds_statements
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    END_PROGRAM     reduce using rule 4 (main_program -> inner_statement .)
    FUNCTION        shift and go to state 8
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    inner_statement                shift and go to state 5
    main_program                   shift and go to state 48
    function_declaration_statement shift and go to state 6
    statement                      shift and go to state 7
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 6

    (5) inner_statement -> function_declaration_statement .

    FUNCTION        reduce using rule 5 (inner_statement -> function_declaration_statement .)
    MINUS           reduce using rule 5 (inner_statement -> function_declaration_statement .)
    EXC_DOT         reduce using rule 5 (inner_statement -> function_declaration_statement .)
    INCREMENT       reduce using rule 5 (inner_statement -> function_declaration_statement .)
    DECREMENT       reduce using rule 5 (inner_statement -> function_declaration_statement .)
    LPAREN          reduce using rule 5 (inner_statement -> function_declaration_statement .)
    ARRAY_TYPE      reduce using rule 5 (inner_statement -> function_declaration_statement .)
    NUMBER_INTEGER  reduce using rule 5 (inner_statement -> function_declaration_statement .)
    NUMBER_REAL     reduce using rule 5 (inner_statement -> function_declaration_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 5 (inner_statement -> function_declaration_statement .)
    TRUE            reduce using rule 5 (inner_statement -> function_declaration_statement .)
    FALSE           reduce using rule 5 (inner_statement -> function_declaration_statement .)
    WHILE           reduce using rule 5 (inner_statement -> function_declaration_statement .)
    IF              reduce using rule 5 (inner_statement -> function_declaration_statement .)
    DO              reduce using rule 5 (inner_statement -> function_declaration_statement .)
    FOR             reduce using rule 5 (inner_statement -> function_declaration_statement .)
    FOREACH         reduce using rule 5 (inner_statement -> function_declaration_statement .)
    BREAK           reduce using rule 5 (inner_statement -> function_declaration_statement .)
    CONTINUE        reduce using rule 5 (inner_statement -> function_declaration_statement .)
    RETURN          reduce using rule 5 (inner_statement -> function_declaration_statement .)
    EXIT            reduce using rule 5 (inner_statement -> function_declaration_statement .)
    DIE             reduce using rule 5 (inner_statement -> function_declaration_statement .)
    GLOBAL          reduce using rule 5 (inner_statement -> function_declaration_statement .)
    VARIABLE        reduce using rule 5 (inner_statement -> function_declaration_statement .)
    ID              reduce using rule 5 (inner_statement -> function_declaration_statement .)
    END_PROGRAM     reduce using rule 5 (inner_statement -> function_declaration_statement .)
    RKEY            reduce using rule 5 (inner_statement -> function_declaration_statement .)


state 7

    (6) inner_statement -> statement .

    FUNCTION        reduce using rule 6 (inner_statement -> statement .)
    MINUS           reduce using rule 6 (inner_statement -> statement .)
    EXC_DOT         reduce using rule 6 (inner_statement -> statement .)
    INCREMENT       reduce using rule 6 (inner_statement -> statement .)
    DECREMENT       reduce using rule 6 (inner_statement -> statement .)
    LPAREN          reduce using rule 6 (inner_statement -> statement .)
    ARRAY_TYPE      reduce using rule 6 (inner_statement -> statement .)
    NUMBER_INTEGER  reduce using rule 6 (inner_statement -> statement .)
    NUMBER_REAL     reduce using rule 6 (inner_statement -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 6 (inner_statement -> statement .)
    TRUE            reduce using rule 6 (inner_statement -> statement .)
    FALSE           reduce using rule 6 (inner_statement -> statement .)
    WHILE           reduce using rule 6 (inner_statement -> statement .)
    IF              reduce using rule 6 (inner_statement -> statement .)
    DO              reduce using rule 6 (inner_statement -> statement .)
    FOR             reduce using rule 6 (inner_statement -> statement .)
    FOREACH         reduce using rule 6 (inner_statement -> statement .)
    BREAK           reduce using rule 6 (inner_statement -> statement .)
    CONTINUE        reduce using rule 6 (inner_statement -> statement .)
    RETURN          reduce using rule 6 (inner_statement -> statement .)
    EXIT            reduce using rule 6 (inner_statement -> statement .)
    DIE             reduce using rule 6 (inner_statement -> statement .)
    GLOBAL          reduce using rule 6 (inner_statement -> statement .)
    VARIABLE        reduce using rule 6 (inner_statement -> statement .)
    ID              reduce using rule 6 (inner_statement -> statement .)
    END_PROGRAM     reduce using rule 6 (inner_statement -> statement .)
    RKEY            reduce using rule 6 (inner_statement -> statement .)


state 8

    (114) function_declaration_statement -> FUNCTION . fds_id fds_parameter fds_statements
    (117) fds_id -> . AMPERSAND ID
    (118) fds_id -> . ID

    AMPERSAND       shift and go to state 50
    ID              shift and go to state 51

    fds_id                         shift and go to state 49

state 9

    (58) statement -> expr . SEMICOLON
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       shift and go to state 52
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 10

    (59) statement -> while_statement .

    FUNCTION        reduce using rule 59 (statement -> while_statement .)
    MINUS           reduce using rule 59 (statement -> while_statement .)
    EXC_DOT         reduce using rule 59 (statement -> while_statement .)
    INCREMENT       reduce using rule 59 (statement -> while_statement .)
    DECREMENT       reduce using rule 59 (statement -> while_statement .)
    LPAREN          reduce using rule 59 (statement -> while_statement .)
    ARRAY_TYPE      reduce using rule 59 (statement -> while_statement .)
    NUMBER_INTEGER  reduce using rule 59 (statement -> while_statement .)
    NUMBER_REAL     reduce using rule 59 (statement -> while_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 59 (statement -> while_statement .)
    TRUE            reduce using rule 59 (statement -> while_statement .)
    FALSE           reduce using rule 59 (statement -> while_statement .)
    WHILE           reduce using rule 59 (statement -> while_statement .)
    IF              reduce using rule 59 (statement -> while_statement .)
    DO              reduce using rule 59 (statement -> while_statement .)
    FOR             reduce using rule 59 (statement -> while_statement .)
    FOREACH         reduce using rule 59 (statement -> while_statement .)
    BREAK           reduce using rule 59 (statement -> while_statement .)
    CONTINUE        reduce using rule 59 (statement -> while_statement .)
    RETURN          reduce using rule 59 (statement -> while_statement .)
    EXIT            reduce using rule 59 (statement -> while_statement .)
    DIE             reduce using rule 59 (statement -> while_statement .)
    GLOBAL          reduce using rule 59 (statement -> while_statement .)
    VARIABLE        reduce using rule 59 (statement -> while_statement .)
    ID              reduce using rule 59 (statement -> while_statement .)
    END_PROGRAM     reduce using rule 59 (statement -> while_statement .)
    RKEY            reduce using rule 59 (statement -> while_statement .)


state 11

    (60) statement -> if_statement .

    FUNCTION        reduce using rule 60 (statement -> if_statement .)
    MINUS           reduce using rule 60 (statement -> if_statement .)
    EXC_DOT         reduce using rule 60 (statement -> if_statement .)
    INCREMENT       reduce using rule 60 (statement -> if_statement .)
    DECREMENT       reduce using rule 60 (statement -> if_statement .)
    LPAREN          reduce using rule 60 (statement -> if_statement .)
    ARRAY_TYPE      reduce using rule 60 (statement -> if_statement .)
    NUMBER_INTEGER  reduce using rule 60 (statement -> if_statement .)
    NUMBER_REAL     reduce using rule 60 (statement -> if_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 60 (statement -> if_statement .)
    TRUE            reduce using rule 60 (statement -> if_statement .)
    FALSE           reduce using rule 60 (statement -> if_statement .)
    WHILE           reduce using rule 60 (statement -> if_statement .)
    IF              reduce using rule 60 (statement -> if_statement .)
    DO              reduce using rule 60 (statement -> if_statement .)
    FOR             reduce using rule 60 (statement -> if_statement .)
    FOREACH         reduce using rule 60 (statement -> if_statement .)
    BREAK           reduce using rule 60 (statement -> if_statement .)
    CONTINUE        reduce using rule 60 (statement -> if_statement .)
    RETURN          reduce using rule 60 (statement -> if_statement .)
    EXIT            reduce using rule 60 (statement -> if_statement .)
    DIE             reduce using rule 60 (statement -> if_statement .)
    GLOBAL          reduce using rule 60 (statement -> if_statement .)
    VARIABLE        reduce using rule 60 (statement -> if_statement .)
    ID              reduce using rule 60 (statement -> if_statement .)
    END_PROGRAM     reduce using rule 60 (statement -> if_statement .)
    RKEY            reduce using rule 60 (statement -> if_statement .)


state 12

    (61) statement -> do_statement .

    FUNCTION        reduce using rule 61 (statement -> do_statement .)
    MINUS           reduce using rule 61 (statement -> do_statement .)
    EXC_DOT         reduce using rule 61 (statement -> do_statement .)
    INCREMENT       reduce using rule 61 (statement -> do_statement .)
    DECREMENT       reduce using rule 61 (statement -> do_statement .)
    LPAREN          reduce using rule 61 (statement -> do_statement .)
    ARRAY_TYPE      reduce using rule 61 (statement -> do_statement .)
    NUMBER_INTEGER  reduce using rule 61 (statement -> do_statement .)
    NUMBER_REAL     reduce using rule 61 (statement -> do_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 61 (statement -> do_statement .)
    TRUE            reduce using rule 61 (statement -> do_statement .)
    FALSE           reduce using rule 61 (statement -> do_statement .)
    WHILE           reduce using rule 61 (statement -> do_statement .)
    IF              reduce using rule 61 (statement -> do_statement .)
    DO              reduce using rule 61 (statement -> do_statement .)
    FOR             reduce using rule 61 (statement -> do_statement .)
    FOREACH         reduce using rule 61 (statement -> do_statement .)
    BREAK           reduce using rule 61 (statement -> do_statement .)
    CONTINUE        reduce using rule 61 (statement -> do_statement .)
    RETURN          reduce using rule 61 (statement -> do_statement .)
    EXIT            reduce using rule 61 (statement -> do_statement .)
    DIE             reduce using rule 61 (statement -> do_statement .)
    GLOBAL          reduce using rule 61 (statement -> do_statement .)
    VARIABLE        reduce using rule 61 (statement -> do_statement .)
    ID              reduce using rule 61 (statement -> do_statement .)
    END_PROGRAM     reduce using rule 61 (statement -> do_statement .)
    RKEY            reduce using rule 61 (statement -> do_statement .)


state 13

    (62) statement -> for_statement .

    FUNCTION        reduce using rule 62 (statement -> for_statement .)
    MINUS           reduce using rule 62 (statement -> for_statement .)
    EXC_DOT         reduce using rule 62 (statement -> for_statement .)
    INCREMENT       reduce using rule 62 (statement -> for_statement .)
    DECREMENT       reduce using rule 62 (statement -> for_statement .)
    LPAREN          reduce using rule 62 (statement -> for_statement .)
    ARRAY_TYPE      reduce using rule 62 (statement -> for_statement .)
    NUMBER_INTEGER  reduce using rule 62 (statement -> for_statement .)
    NUMBER_REAL     reduce using rule 62 (statement -> for_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 62 (statement -> for_statement .)
    TRUE            reduce using rule 62 (statement -> for_statement .)
    FALSE           reduce using rule 62 (statement -> for_statement .)
    WHILE           reduce using rule 62 (statement -> for_statement .)
    IF              reduce using rule 62 (statement -> for_statement .)
    DO              reduce using rule 62 (statement -> for_statement .)
    FOR             reduce using rule 62 (statement -> for_statement .)
    FOREACH         reduce using rule 62 (statement -> for_statement .)
    BREAK           reduce using rule 62 (statement -> for_statement .)
    CONTINUE        reduce using rule 62 (statement -> for_statement .)
    RETURN          reduce using rule 62 (statement -> for_statement .)
    EXIT            reduce using rule 62 (statement -> for_statement .)
    DIE             reduce using rule 62 (statement -> for_statement .)
    GLOBAL          reduce using rule 62 (statement -> for_statement .)
    VARIABLE        reduce using rule 62 (statement -> for_statement .)
    ID              reduce using rule 62 (statement -> for_statement .)
    END_PROGRAM     reduce using rule 62 (statement -> for_statement .)
    RKEY            reduce using rule 62 (statement -> for_statement .)


state 14

    (63) statement -> foreach_statement .

    FUNCTION        reduce using rule 63 (statement -> foreach_statement .)
    MINUS           reduce using rule 63 (statement -> foreach_statement .)
    EXC_DOT         reduce using rule 63 (statement -> foreach_statement .)
    INCREMENT       reduce using rule 63 (statement -> foreach_statement .)
    DECREMENT       reduce using rule 63 (statement -> foreach_statement .)
    LPAREN          reduce using rule 63 (statement -> foreach_statement .)
    ARRAY_TYPE      reduce using rule 63 (statement -> foreach_statement .)
    NUMBER_INTEGER  reduce using rule 63 (statement -> foreach_statement .)
    NUMBER_REAL     reduce using rule 63 (statement -> foreach_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 63 (statement -> foreach_statement .)
    TRUE            reduce using rule 63 (statement -> foreach_statement .)
    FALSE           reduce using rule 63 (statement -> foreach_statement .)
    WHILE           reduce using rule 63 (statement -> foreach_statement .)
    IF              reduce using rule 63 (statement -> foreach_statement .)
    DO              reduce using rule 63 (statement -> foreach_statement .)
    FOR             reduce using rule 63 (statement -> foreach_statement .)
    FOREACH         reduce using rule 63 (statement -> foreach_statement .)
    BREAK           reduce using rule 63 (statement -> foreach_statement .)
    CONTINUE        reduce using rule 63 (statement -> foreach_statement .)
    RETURN          reduce using rule 63 (statement -> foreach_statement .)
    EXIT            reduce using rule 63 (statement -> foreach_statement .)
    DIE             reduce using rule 63 (statement -> foreach_statement .)
    GLOBAL          reduce using rule 63 (statement -> foreach_statement .)
    VARIABLE        reduce using rule 63 (statement -> foreach_statement .)
    ID              reduce using rule 63 (statement -> foreach_statement .)
    END_PROGRAM     reduce using rule 63 (statement -> foreach_statement .)
    RKEY            reduce using rule 63 (statement -> foreach_statement .)


state 15

    (64) statement -> break_statement .

    FUNCTION        reduce using rule 64 (statement -> break_statement .)
    MINUS           reduce using rule 64 (statement -> break_statement .)
    EXC_DOT         reduce using rule 64 (statement -> break_statement .)
    INCREMENT       reduce using rule 64 (statement -> break_statement .)
    DECREMENT       reduce using rule 64 (statement -> break_statement .)
    LPAREN          reduce using rule 64 (statement -> break_statement .)
    ARRAY_TYPE      reduce using rule 64 (statement -> break_statement .)
    NUMBER_INTEGER  reduce using rule 64 (statement -> break_statement .)
    NUMBER_REAL     reduce using rule 64 (statement -> break_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 64 (statement -> break_statement .)
    TRUE            reduce using rule 64 (statement -> break_statement .)
    FALSE           reduce using rule 64 (statement -> break_statement .)
    WHILE           reduce using rule 64 (statement -> break_statement .)
    IF              reduce using rule 64 (statement -> break_statement .)
    DO              reduce using rule 64 (statement -> break_statement .)
    FOR             reduce using rule 64 (statement -> break_statement .)
    FOREACH         reduce using rule 64 (statement -> break_statement .)
    BREAK           reduce using rule 64 (statement -> break_statement .)
    CONTINUE        reduce using rule 64 (statement -> break_statement .)
    RETURN          reduce using rule 64 (statement -> break_statement .)
    EXIT            reduce using rule 64 (statement -> break_statement .)
    DIE             reduce using rule 64 (statement -> break_statement .)
    GLOBAL          reduce using rule 64 (statement -> break_statement .)
    VARIABLE        reduce using rule 64 (statement -> break_statement .)
    ID              reduce using rule 64 (statement -> break_statement .)
    END_PROGRAM     reduce using rule 64 (statement -> break_statement .)
    RKEY            reduce using rule 64 (statement -> break_statement .)


state 16

    (65) statement -> continue_statement .

    FUNCTION        reduce using rule 65 (statement -> continue_statement .)
    MINUS           reduce using rule 65 (statement -> continue_statement .)
    EXC_DOT         reduce using rule 65 (statement -> continue_statement .)
    INCREMENT       reduce using rule 65 (statement -> continue_statement .)
    DECREMENT       reduce using rule 65 (statement -> continue_statement .)
    LPAREN          reduce using rule 65 (statement -> continue_statement .)
    ARRAY_TYPE      reduce using rule 65 (statement -> continue_statement .)
    NUMBER_INTEGER  reduce using rule 65 (statement -> continue_statement .)
    NUMBER_REAL     reduce using rule 65 (statement -> continue_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 65 (statement -> continue_statement .)
    TRUE            reduce using rule 65 (statement -> continue_statement .)
    FALSE           reduce using rule 65 (statement -> continue_statement .)
    WHILE           reduce using rule 65 (statement -> continue_statement .)
    IF              reduce using rule 65 (statement -> continue_statement .)
    DO              reduce using rule 65 (statement -> continue_statement .)
    FOR             reduce using rule 65 (statement -> continue_statement .)
    FOREACH         reduce using rule 65 (statement -> continue_statement .)
    BREAK           reduce using rule 65 (statement -> continue_statement .)
    CONTINUE        reduce using rule 65 (statement -> continue_statement .)
    RETURN          reduce using rule 65 (statement -> continue_statement .)
    EXIT            reduce using rule 65 (statement -> continue_statement .)
    DIE             reduce using rule 65 (statement -> continue_statement .)
    GLOBAL          reduce using rule 65 (statement -> continue_statement .)
    VARIABLE        reduce using rule 65 (statement -> continue_statement .)
    ID              reduce using rule 65 (statement -> continue_statement .)
    END_PROGRAM     reduce using rule 65 (statement -> continue_statement .)
    RKEY            reduce using rule 65 (statement -> continue_statement .)


state 17

    (66) statement -> return_statement .

    FUNCTION        reduce using rule 66 (statement -> return_statement .)
    MINUS           reduce using rule 66 (statement -> return_statement .)
    EXC_DOT         reduce using rule 66 (statement -> return_statement .)
    INCREMENT       reduce using rule 66 (statement -> return_statement .)
    DECREMENT       reduce using rule 66 (statement -> return_statement .)
    LPAREN          reduce using rule 66 (statement -> return_statement .)
    ARRAY_TYPE      reduce using rule 66 (statement -> return_statement .)
    NUMBER_INTEGER  reduce using rule 66 (statement -> return_statement .)
    NUMBER_REAL     reduce using rule 66 (statement -> return_statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 66 (statement -> return_statement .)
    TRUE            reduce using rule 66 (statement -> return_statement .)
    FALSE           reduce using rule 66 (statement -> return_statement .)
    WHILE           reduce using rule 66 (statement -> return_statement .)
    IF              reduce using rule 66 (statement -> return_statement .)
    DO              reduce using rule 66 (statement -> return_statement .)
    FOR             reduce using rule 66 (statement -> return_statement .)
    FOREACH         reduce using rule 66 (statement -> return_statement .)
    BREAK           reduce using rule 66 (statement -> return_statement .)
    CONTINUE        reduce using rule 66 (statement -> return_statement .)
    RETURN          reduce using rule 66 (statement -> return_statement .)
    EXIT            reduce using rule 66 (statement -> return_statement .)
    DIE             reduce using rule 66 (statement -> return_statement .)
    GLOBAL          reduce using rule 66 (statement -> return_statement .)
    VARIABLE        reduce using rule 66 (statement -> return_statement .)
    ID              reduce using rule 66 (statement -> return_statement .)
    END_PROGRAM     reduce using rule 66 (statement -> return_statement .)
    RKEY            reduce using rule 66 (statement -> return_statement .)


state 18

    (67) statement -> exit_statement . SEMICOLON

    SEMICOLON       shift and go to state 67


state 19

    (68) statement -> die_statement . SEMICOLON

    SEMICOLON       shift and go to state 68


state 20

    (69) statement -> global_statement . SEMICOLON

    SEMICOLON       shift and go to state 69


state 21

    (11) expr -> MINUS . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 70
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 22

    (23) expr -> EXC_DOT . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 71
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 23

    (24) expr -> INCREMENT . variable
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE

    VARIABLE        shift and go to state 45

    variable                       shift and go to state 72

state 24

    (25) expr -> variable . INCREMENT
    (27) expr -> variable . DECREMENT
    (28) expr -> variable .
    (34) expr -> variable . ADD_ASSIGN expr
    (35) expr -> variable . SUB_ASSIGN expr
    (36) expr -> variable . MOD_ASSIGN expr
    (37) expr -> variable . TIMES_ASSIGN expr
    (38) expr -> variable . DIVIDE_ASSIGN expr
    (39) expr -> variable . ASSIGN expr

    INCREMENT       shift and go to state 73
    DECREMENT       shift and go to state 74
    SEMICOLON       reduce using rule 28 (expr -> variable .)
    PLUS            reduce using rule 28 (expr -> variable .)
    MINUS           reduce using rule 28 (expr -> variable .)
    DIVIDE          reduce using rule 28 (expr -> variable .)
    PERCENT         reduce using rule 28 (expr -> variable .)
    TIMES           reduce using rule 28 (expr -> variable .)
    EQUALS          reduce using rule 28 (expr -> variable .)
    NOT_EQUAL       reduce using rule 28 (expr -> variable .)
    GREAT_THAN      reduce using rule 28 (expr -> variable .)
    GREAT_EQUAL     reduce using rule 28 (expr -> variable .)
    LESS_THAN       reduce using rule 28 (expr -> variable .)
    LESS_EQUAL      reduce using rule 28 (expr -> variable .)
    AND             reduce using rule 28 (expr -> variable .)
    OR              reduce using rule 28 (expr -> variable .)
    INTE_DOT        reduce using rule 28 (expr -> variable .)
    RPAREN          reduce using rule 28 (expr -> variable .)
    DDOT            reduce using rule 28 (expr -> variable .)
    ATTR_ASSOC      reduce using rule 28 (expr -> variable .)
    COLON           reduce using rule 28 (expr -> variable .)
    AS              reduce using rule 28 (expr -> variable .)
    RBRACKET        reduce using rule 28 (expr -> variable .)
    ADD_ASSIGN      shift and go to state 75
    SUB_ASSIGN      shift and go to state 76
    MOD_ASSIGN      shift and go to state 77
    TIMES_ASSIGN    shift and go to state 78
    DIVIDE_ASSIGN   shift and go to state 79
    ASSIGN          shift and go to state 80


state 25

    (26) expr -> DECREMENT . variable
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE

    VARIABLE        shift and go to state 45

    variable                       shift and go to state 81

state 26

    (29) expr -> LPAREN . expr RPAREN
    (31) expr -> LPAREN . typecast_operator RPAREN expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (45) typecast_operator -> . INT_TYPE
    (46) typecast_operator -> . FLOAT_TYPE
    (47) typecast_operator -> . ARRAY_TYPE
    (48) typecast_operator -> . STRING_TYPE
    (49) typecast_operator -> . BOOL_TYPE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 84
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    INT_TYPE        shift and go to state 85
    FLOAT_TYPE      shift and go to state 86
    STRING_TYPE     shift and go to state 87
    BOOL_TYPE       shift and go to state 88
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 82
    typecast_operator              shift and go to state 83
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 27

    (30) expr -> ARRAY_TYPE . array_declaration
    (56) array_declaration -> . LPAREN array_pair_list RPAREN
    (57) array_declaration -> . LPAREN RPAREN

    LPAREN          shift and go to state 90

    array_declaration              shift and go to state 89

state 28

    (32) expr -> function_call .

    SEMICOLON       reduce using rule 32 (expr -> function_call .)
    PLUS            reduce using rule 32 (expr -> function_call .)
    MINUS           reduce using rule 32 (expr -> function_call .)
    DIVIDE          reduce using rule 32 (expr -> function_call .)
    PERCENT         reduce using rule 32 (expr -> function_call .)
    TIMES           reduce using rule 32 (expr -> function_call .)
    EQUALS          reduce using rule 32 (expr -> function_call .)
    NOT_EQUAL       reduce using rule 32 (expr -> function_call .)
    GREAT_THAN      reduce using rule 32 (expr -> function_call .)
    GREAT_EQUAL     reduce using rule 32 (expr -> function_call .)
    LESS_THAN       reduce using rule 32 (expr -> function_call .)
    LESS_EQUAL      reduce using rule 32 (expr -> function_call .)
    AND             reduce using rule 32 (expr -> function_call .)
    OR              reduce using rule 32 (expr -> function_call .)
    INTE_DOT        reduce using rule 32 (expr -> function_call .)
    RPAREN          reduce using rule 32 (expr -> function_call .)
    DDOT            reduce using rule 32 (expr -> function_call .)
    ATTR_ASSOC      reduce using rule 32 (expr -> function_call .)
    COLON           reduce using rule 32 (expr -> function_call .)
    AS              reduce using rule 32 (expr -> function_call .)
    RBRACKET        reduce using rule 32 (expr -> function_call .)


state 29

    (40) expr -> NUMBER_INTEGER .

    SEMICOLON       reduce using rule 40 (expr -> NUMBER_INTEGER .)
    PLUS            reduce using rule 40 (expr -> NUMBER_INTEGER .)
    MINUS           reduce using rule 40 (expr -> NUMBER_INTEGER .)
    DIVIDE          reduce using rule 40 (expr -> NUMBER_INTEGER .)
    PERCENT         reduce using rule 40 (expr -> NUMBER_INTEGER .)
    TIMES           reduce using rule 40 (expr -> NUMBER_INTEGER .)
    EQUALS          reduce using rule 40 (expr -> NUMBER_INTEGER .)
    NOT_EQUAL       reduce using rule 40 (expr -> NUMBER_INTEGER .)
    GREAT_THAN      reduce using rule 40 (expr -> NUMBER_INTEGER .)
    GREAT_EQUAL     reduce using rule 40 (expr -> NUMBER_INTEGER .)
    LESS_THAN       reduce using rule 40 (expr -> NUMBER_INTEGER .)
    LESS_EQUAL      reduce using rule 40 (expr -> NUMBER_INTEGER .)
    AND             reduce using rule 40 (expr -> NUMBER_INTEGER .)
    OR              reduce using rule 40 (expr -> NUMBER_INTEGER .)
    INTE_DOT        reduce using rule 40 (expr -> NUMBER_INTEGER .)
    RPAREN          reduce using rule 40 (expr -> NUMBER_INTEGER .)
    DDOT            reduce using rule 40 (expr -> NUMBER_INTEGER .)
    ATTR_ASSOC      reduce using rule 40 (expr -> NUMBER_INTEGER .)
    COLON           reduce using rule 40 (expr -> NUMBER_INTEGER .)
    AS              reduce using rule 40 (expr -> NUMBER_INTEGER .)
    RBRACKET        reduce using rule 40 (expr -> NUMBER_INTEGER .)


state 30

    (41) expr -> NUMBER_REAL .

    SEMICOLON       reduce using rule 41 (expr -> NUMBER_REAL .)
    PLUS            reduce using rule 41 (expr -> NUMBER_REAL .)
    MINUS           reduce using rule 41 (expr -> NUMBER_REAL .)
    DIVIDE          reduce using rule 41 (expr -> NUMBER_REAL .)
    PERCENT         reduce using rule 41 (expr -> NUMBER_REAL .)
    TIMES           reduce using rule 41 (expr -> NUMBER_REAL .)
    EQUALS          reduce using rule 41 (expr -> NUMBER_REAL .)
    NOT_EQUAL       reduce using rule 41 (expr -> NUMBER_REAL .)
    GREAT_THAN      reduce using rule 41 (expr -> NUMBER_REAL .)
    GREAT_EQUAL     reduce using rule 41 (expr -> NUMBER_REAL .)
    LESS_THAN       reduce using rule 41 (expr -> NUMBER_REAL .)
    LESS_EQUAL      reduce using rule 41 (expr -> NUMBER_REAL .)
    AND             reduce using rule 41 (expr -> NUMBER_REAL .)
    OR              reduce using rule 41 (expr -> NUMBER_REAL .)
    INTE_DOT        reduce using rule 41 (expr -> NUMBER_REAL .)
    RPAREN          reduce using rule 41 (expr -> NUMBER_REAL .)
    DDOT            reduce using rule 41 (expr -> NUMBER_REAL .)
    ATTR_ASSOC      reduce using rule 41 (expr -> NUMBER_REAL .)
    COLON           reduce using rule 41 (expr -> NUMBER_REAL .)
    AS              reduce using rule 41 (expr -> NUMBER_REAL .)
    RBRACKET        reduce using rule 41 (expr -> NUMBER_REAL .)


state 31

    (42) expr -> CONSTANT_ENCAPSED_STRING .

    SEMICOLON       reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    PLUS            reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    MINUS           reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    DIVIDE          reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    PERCENT         reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    TIMES           reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    EQUALS          reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    NOT_EQUAL       reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    GREAT_THAN      reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    GREAT_EQUAL     reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    LESS_THAN       reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    LESS_EQUAL      reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    AND             reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    OR              reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    INTE_DOT        reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    RPAREN          reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    DDOT            reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    ATTR_ASSOC      reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    COLON           reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    AS              reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)
    RBRACKET        reduce using rule 42 (expr -> CONSTANT_ENCAPSED_STRING .)


state 32

    (43) expr -> TRUE .

    SEMICOLON       reduce using rule 43 (expr -> TRUE .)
    PLUS            reduce using rule 43 (expr -> TRUE .)
    MINUS           reduce using rule 43 (expr -> TRUE .)
    DIVIDE          reduce using rule 43 (expr -> TRUE .)
    PERCENT         reduce using rule 43 (expr -> TRUE .)
    TIMES           reduce using rule 43 (expr -> TRUE .)
    EQUALS          reduce using rule 43 (expr -> TRUE .)
    NOT_EQUAL       reduce using rule 43 (expr -> TRUE .)
    GREAT_THAN      reduce using rule 43 (expr -> TRUE .)
    GREAT_EQUAL     reduce using rule 43 (expr -> TRUE .)
    LESS_THAN       reduce using rule 43 (expr -> TRUE .)
    LESS_EQUAL      reduce using rule 43 (expr -> TRUE .)
    AND             reduce using rule 43 (expr -> TRUE .)
    OR              reduce using rule 43 (expr -> TRUE .)
    INTE_DOT        reduce using rule 43 (expr -> TRUE .)
    RPAREN          reduce using rule 43 (expr -> TRUE .)
    DDOT            reduce using rule 43 (expr -> TRUE .)
    ATTR_ASSOC      reduce using rule 43 (expr -> TRUE .)
    COLON           reduce using rule 43 (expr -> TRUE .)
    AS              reduce using rule 43 (expr -> TRUE .)
    RBRACKET        reduce using rule 43 (expr -> TRUE .)


state 33

    (44) expr -> FALSE .

    SEMICOLON       reduce using rule 44 (expr -> FALSE .)
    PLUS            reduce using rule 44 (expr -> FALSE .)
    MINUS           reduce using rule 44 (expr -> FALSE .)
    DIVIDE          reduce using rule 44 (expr -> FALSE .)
    PERCENT         reduce using rule 44 (expr -> FALSE .)
    TIMES           reduce using rule 44 (expr -> FALSE .)
    EQUALS          reduce using rule 44 (expr -> FALSE .)
    NOT_EQUAL       reduce using rule 44 (expr -> FALSE .)
    GREAT_THAN      reduce using rule 44 (expr -> FALSE .)
    GREAT_EQUAL     reduce using rule 44 (expr -> FALSE .)
    LESS_THAN       reduce using rule 44 (expr -> FALSE .)
    LESS_EQUAL      reduce using rule 44 (expr -> FALSE .)
    AND             reduce using rule 44 (expr -> FALSE .)
    OR              reduce using rule 44 (expr -> FALSE .)
    INTE_DOT        reduce using rule 44 (expr -> FALSE .)
    RPAREN          reduce using rule 44 (expr -> FALSE .)
    DDOT            reduce using rule 44 (expr -> FALSE .)
    ATTR_ASSOC      reduce using rule 44 (expr -> FALSE .)
    COLON           reduce using rule 44 (expr -> FALSE .)
    AS              reduce using rule 44 (expr -> FALSE .)
    RBRACKET        reduce using rule 44 (expr -> FALSE .)


state 34

    (73) while_statement -> WHILE . expr_parentheses statement_block_optional
    (95) expr_parentheses -> . LPAREN expr RPAREN

    LPAREN          shift and go to state 92

    expr_parentheses               shift and go to state 91

state 35

    (70) if_statement -> IF . expr_parentheses statement_block_optional
    (95) expr_parentheses -> . LPAREN expr RPAREN

    LPAREN          shift and go to state 92

    expr_parentheses               shift and go to state 93

state 36

    (74) do_statement -> DO . statement_block_optional WHILE expr_parentheses SEMICOLON
    (149) statement_block_optional -> . statement
    (150) statement_block_optional -> . LKEY statement_MUL RKEY
    (151) statement_block_optional -> . LKEY RKEY
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    LKEY            shift and go to state 96
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    statement_block_optional       shift and go to state 94
    statement                      shift and go to state 95
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 37

    (81) for_statement -> FOR . LPAREN for_parameters RPAREN statement_block_optional

    LPAREN          shift and go to state 97


state 38

    (96) foreach_statement -> FOREACH . LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> FOREACH . LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional

    LPAREN          shift and go to state 98


state 39

    (75) break_statement -> BREAK . expr SEMICOLON
    (76) break_statement -> BREAK . SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 100
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 99
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 40

    (77) continue_statement -> CONTINUE . expr SEMICOLON
    (78) continue_statement -> CONTINUE . SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 102
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 101
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 41

    (79) return_statement -> RETURN . expr SEMICOLON
    (80) return_statement -> RETURN . SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 104
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 103
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 42

    (50) exit_statement -> EXIT . exit_expr
    (51) exit_statement -> EXIT .
    (54) exit_expr -> . LPAREN expr RPAREN
    (55) exit_expr -> . LPAREN RPAREN

    SEMICOLON       reduce using rule 51 (exit_statement -> EXIT .)
    LPAREN          shift and go to state 106

    exit_expr                      shift and go to state 105

state 43

    (52) die_statement -> DIE . exit_expr
    (53) die_statement -> DIE .
    (54) exit_expr -> . LPAREN expr RPAREN
    (55) exit_expr -> . LPAREN RPAREN

    SEMICOLON       reduce using rule 53 (die_statement -> DIE .)
    LPAREN          shift and go to state 106

    exit_expr                      shift and go to state 107

state 44

    (71) global_statement -> GLOBAL . global_var statement_COLON_GLOBAL
    (72) global_statement -> GLOBAL . global_var
    (90) global_var -> . VARIABLE

    VARIABLE        shift and go to state 109

    global_var                     shift and go to state 108

state 45

    (110) variable -> VARIABLE . variable_array_selector
    (111) variable -> VARIABLE .
    (154) variable_array_selector -> . selector variable_array_selector
    (155) variable_array_selector -> . selector
    (112) selector -> . LBRACKET expr RBRACKET
    (113) selector -> . LBRACKET RBRACKET

    INCREMENT       reduce using rule 111 (variable -> VARIABLE .)
    DECREMENT       reduce using rule 111 (variable -> VARIABLE .)
    ADD_ASSIGN      reduce using rule 111 (variable -> VARIABLE .)
    SUB_ASSIGN      reduce using rule 111 (variable -> VARIABLE .)
    MOD_ASSIGN      reduce using rule 111 (variable -> VARIABLE .)
    TIMES_ASSIGN    reduce using rule 111 (variable -> VARIABLE .)
    DIVIDE_ASSIGN   reduce using rule 111 (variable -> VARIABLE .)
    ASSIGN          reduce using rule 111 (variable -> VARIABLE .)
    SEMICOLON       reduce using rule 111 (variable -> VARIABLE .)
    PLUS            reduce using rule 111 (variable -> VARIABLE .)
    MINUS           reduce using rule 111 (variable -> VARIABLE .)
    DIVIDE          reduce using rule 111 (variable -> VARIABLE .)
    PERCENT         reduce using rule 111 (variable -> VARIABLE .)
    TIMES           reduce using rule 111 (variable -> VARIABLE .)
    EQUALS          reduce using rule 111 (variable -> VARIABLE .)
    NOT_EQUAL       reduce using rule 111 (variable -> VARIABLE .)
    GREAT_THAN      reduce using rule 111 (variable -> VARIABLE .)
    GREAT_EQUAL     reduce using rule 111 (variable -> VARIABLE .)
    LESS_THAN       reduce using rule 111 (variable -> VARIABLE .)
    LESS_EQUAL      reduce using rule 111 (variable -> VARIABLE .)
    AND             reduce using rule 111 (variable -> VARIABLE .)
    OR              reduce using rule 111 (variable -> VARIABLE .)
    INTE_DOT        reduce using rule 111 (variable -> VARIABLE .)
    RPAREN          reduce using rule 111 (variable -> VARIABLE .)
    DDOT            reduce using rule 111 (variable -> VARIABLE .)
    ATTR_ASSOC      reduce using rule 111 (variable -> VARIABLE .)
    COLON           reduce using rule 111 (variable -> VARIABLE .)
    AS              reduce using rule 111 (variable -> VARIABLE .)
    RBRACKET        reduce using rule 111 (variable -> VARIABLE .)
    LBRACKET        shift and go to state 112

    variable_array_selector        shift and go to state 110
    selector                       shift and go to state 111

state 46

    (102) function_call -> ID . LPAREN function_call_parameter_list RPAREN
    (103) function_call -> ID . LPAREN RPAREN

    LPAREN          shift and go to state 113


state 47

    (1) main -> BEGIN_PROGRAM main_program END_PROGRAM .

    $end            reduce using rule 1 (main -> BEGIN_PROGRAM main_program END_PROGRAM .)


state 48

    (3) main_program -> inner_statement main_program .

    END_PROGRAM     reduce using rule 3 (main_program -> inner_statement main_program .)


state 49

    (114) function_declaration_statement -> FUNCTION fds_id . fds_parameter fds_statements
    (119) fds_parameter -> . LPAREN parameter_list RPAREN
    (120) fds_parameter -> . LPAREN RPAREN

    LPAREN          shift and go to state 115

    fds_parameter                  shift and go to state 114

state 50

    (117) fds_id -> AMPERSAND . ID

    ID              shift and go to state 116


state 51

    (118) fds_id -> ID .

    LPAREN          reduce using rule 118 (fds_id -> ID .)


state 52

    (58) statement -> expr SEMICOLON .

    FUNCTION        reduce using rule 58 (statement -> expr SEMICOLON .)
    MINUS           reduce using rule 58 (statement -> expr SEMICOLON .)
    EXC_DOT         reduce using rule 58 (statement -> expr SEMICOLON .)
    INCREMENT       reduce using rule 58 (statement -> expr SEMICOLON .)
    DECREMENT       reduce using rule 58 (statement -> expr SEMICOLON .)
    LPAREN          reduce using rule 58 (statement -> expr SEMICOLON .)
    ARRAY_TYPE      reduce using rule 58 (statement -> expr SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 58 (statement -> expr SEMICOLON .)
    NUMBER_REAL     reduce using rule 58 (statement -> expr SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 58 (statement -> expr SEMICOLON .)
    TRUE            reduce using rule 58 (statement -> expr SEMICOLON .)
    FALSE           reduce using rule 58 (statement -> expr SEMICOLON .)
    WHILE           reduce using rule 58 (statement -> expr SEMICOLON .)
    IF              reduce using rule 58 (statement -> expr SEMICOLON .)
    DO              reduce using rule 58 (statement -> expr SEMICOLON .)
    FOR             reduce using rule 58 (statement -> expr SEMICOLON .)
    FOREACH         reduce using rule 58 (statement -> expr SEMICOLON .)
    BREAK           reduce using rule 58 (statement -> expr SEMICOLON .)
    CONTINUE        reduce using rule 58 (statement -> expr SEMICOLON .)
    RETURN          reduce using rule 58 (statement -> expr SEMICOLON .)
    EXIT            reduce using rule 58 (statement -> expr SEMICOLON .)
    DIE             reduce using rule 58 (statement -> expr SEMICOLON .)
    GLOBAL          reduce using rule 58 (statement -> expr SEMICOLON .)
    VARIABLE        reduce using rule 58 (statement -> expr SEMICOLON .)
    ID              reduce using rule 58 (statement -> expr SEMICOLON .)
    END_PROGRAM     reduce using rule 58 (statement -> expr SEMICOLON .)
    RKEY            reduce using rule 58 (statement -> expr SEMICOLON .)


state 53

    (9) expr -> expr PLUS . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 117
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 54

    (10) expr -> expr MINUS . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 118
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 55

    (12) expr -> expr DIVIDE . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 119
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 56

    (13) expr -> expr PERCENT . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 120
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 57

    (14) expr -> expr TIMES . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 121
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 58

    (15) expr -> expr EQUALS . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 122
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 59

    (16) expr -> expr NOT_EQUAL . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 123
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 60

    (17) expr -> expr GREAT_THAN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 124
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 61

    (18) expr -> expr GREAT_EQUAL . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 125
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 62

    (19) expr -> expr LESS_THAN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 126
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 63

    (20) expr -> expr LESS_EQUAL . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 127
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 64

    (21) expr -> expr AND . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 128
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 65

    (22) expr -> expr OR . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 129
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 66

    (33) expr -> expr INTE_DOT . expr DDOT expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 130
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 67

    (67) statement -> exit_statement SEMICOLON .

    FUNCTION        reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    MINUS           reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    EXC_DOT         reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    INCREMENT       reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    DECREMENT       reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    LPAREN          reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    ARRAY_TYPE      reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    NUMBER_REAL     reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    TRUE            reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    FALSE           reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    WHILE           reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    IF              reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    DO              reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    FOR             reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    FOREACH         reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    BREAK           reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    CONTINUE        reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    RETURN          reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    EXIT            reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    DIE             reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    GLOBAL          reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    VARIABLE        reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    ID              reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    END_PROGRAM     reduce using rule 67 (statement -> exit_statement SEMICOLON .)
    RKEY            reduce using rule 67 (statement -> exit_statement SEMICOLON .)


state 68

    (68) statement -> die_statement SEMICOLON .

    FUNCTION        reduce using rule 68 (statement -> die_statement SEMICOLON .)
    MINUS           reduce using rule 68 (statement -> die_statement SEMICOLON .)
    EXC_DOT         reduce using rule 68 (statement -> die_statement SEMICOLON .)
    INCREMENT       reduce using rule 68 (statement -> die_statement SEMICOLON .)
    DECREMENT       reduce using rule 68 (statement -> die_statement SEMICOLON .)
    LPAREN          reduce using rule 68 (statement -> die_statement SEMICOLON .)
    ARRAY_TYPE      reduce using rule 68 (statement -> die_statement SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 68 (statement -> die_statement SEMICOLON .)
    NUMBER_REAL     reduce using rule 68 (statement -> die_statement SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 68 (statement -> die_statement SEMICOLON .)
    TRUE            reduce using rule 68 (statement -> die_statement SEMICOLON .)
    FALSE           reduce using rule 68 (statement -> die_statement SEMICOLON .)
    WHILE           reduce using rule 68 (statement -> die_statement SEMICOLON .)
    IF              reduce using rule 68 (statement -> die_statement SEMICOLON .)
    DO              reduce using rule 68 (statement -> die_statement SEMICOLON .)
    FOR             reduce using rule 68 (statement -> die_statement SEMICOLON .)
    FOREACH         reduce using rule 68 (statement -> die_statement SEMICOLON .)
    BREAK           reduce using rule 68 (statement -> die_statement SEMICOLON .)
    CONTINUE        reduce using rule 68 (statement -> die_statement SEMICOLON .)
    RETURN          reduce using rule 68 (statement -> die_statement SEMICOLON .)
    EXIT            reduce using rule 68 (statement -> die_statement SEMICOLON .)
    DIE             reduce using rule 68 (statement -> die_statement SEMICOLON .)
    GLOBAL          reduce using rule 68 (statement -> die_statement SEMICOLON .)
    VARIABLE        reduce using rule 68 (statement -> die_statement SEMICOLON .)
    ID              reduce using rule 68 (statement -> die_statement SEMICOLON .)
    END_PROGRAM     reduce using rule 68 (statement -> die_statement SEMICOLON .)
    RKEY            reduce using rule 68 (statement -> die_statement SEMICOLON .)


state 69

    (69) statement -> global_statement SEMICOLON .

    FUNCTION        reduce using rule 69 (statement -> global_statement SEMICOLON .)
    MINUS           reduce using rule 69 (statement -> global_statement SEMICOLON .)
    EXC_DOT         reduce using rule 69 (statement -> global_statement SEMICOLON .)
    INCREMENT       reduce using rule 69 (statement -> global_statement SEMICOLON .)
    DECREMENT       reduce using rule 69 (statement -> global_statement SEMICOLON .)
    LPAREN          reduce using rule 69 (statement -> global_statement SEMICOLON .)
    ARRAY_TYPE      reduce using rule 69 (statement -> global_statement SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 69 (statement -> global_statement SEMICOLON .)
    NUMBER_REAL     reduce using rule 69 (statement -> global_statement SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 69 (statement -> global_statement SEMICOLON .)
    TRUE            reduce using rule 69 (statement -> global_statement SEMICOLON .)
    FALSE           reduce using rule 69 (statement -> global_statement SEMICOLON .)
    WHILE           reduce using rule 69 (statement -> global_statement SEMICOLON .)
    IF              reduce using rule 69 (statement -> global_statement SEMICOLON .)
    DO              reduce using rule 69 (statement -> global_statement SEMICOLON .)
    FOR             reduce using rule 69 (statement -> global_statement SEMICOLON .)
    FOREACH         reduce using rule 69 (statement -> global_statement SEMICOLON .)
    BREAK           reduce using rule 69 (statement -> global_statement SEMICOLON .)
    CONTINUE        reduce using rule 69 (statement -> global_statement SEMICOLON .)
    RETURN          reduce using rule 69 (statement -> global_statement SEMICOLON .)
    EXIT            reduce using rule 69 (statement -> global_statement SEMICOLON .)
    DIE             reduce using rule 69 (statement -> global_statement SEMICOLON .)
    GLOBAL          reduce using rule 69 (statement -> global_statement SEMICOLON .)
    VARIABLE        reduce using rule 69 (statement -> global_statement SEMICOLON .)
    ID              reduce using rule 69 (statement -> global_statement SEMICOLON .)
    END_PROGRAM     reduce using rule 69 (statement -> global_statement SEMICOLON .)
    RKEY            reduce using rule 69 (statement -> global_statement SEMICOLON .)


state 70

    (11) expr -> MINUS expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 11 (expr -> MINUS expr .)
    PLUS            reduce using rule 11 (expr -> MINUS expr .)
    MINUS           reduce using rule 11 (expr -> MINUS expr .)
    DIVIDE          reduce using rule 11 (expr -> MINUS expr .)
    PERCENT         reduce using rule 11 (expr -> MINUS expr .)
    TIMES           reduce using rule 11 (expr -> MINUS expr .)
    EQUALS          reduce using rule 11 (expr -> MINUS expr .)
    NOT_EQUAL       reduce using rule 11 (expr -> MINUS expr .)
    GREAT_THAN      reduce using rule 11 (expr -> MINUS expr .)
    GREAT_EQUAL     reduce using rule 11 (expr -> MINUS expr .)
    LESS_THAN       reduce using rule 11 (expr -> MINUS expr .)
    LESS_EQUAL      reduce using rule 11 (expr -> MINUS expr .)
    AND             reduce using rule 11 (expr -> MINUS expr .)
    OR              reduce using rule 11 (expr -> MINUS expr .)
    INTE_DOT        reduce using rule 11 (expr -> MINUS expr .)
    RPAREN          reduce using rule 11 (expr -> MINUS expr .)
    DDOT            reduce using rule 11 (expr -> MINUS expr .)
    ATTR_ASSOC      reduce using rule 11 (expr -> MINUS expr .)
    COLON           reduce using rule 11 (expr -> MINUS expr .)
    AS              reduce using rule 11 (expr -> MINUS expr .)
    RBRACKET        reduce using rule 11 (expr -> MINUS expr .)

  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! PERCENT         [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 71

    (23) expr -> EXC_DOT expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 23 (expr -> EXC_DOT expr .)
    PLUS            reduce using rule 23 (expr -> EXC_DOT expr .)
    MINUS           reduce using rule 23 (expr -> EXC_DOT expr .)
    DIVIDE          reduce using rule 23 (expr -> EXC_DOT expr .)
    PERCENT         reduce using rule 23 (expr -> EXC_DOT expr .)
    TIMES           reduce using rule 23 (expr -> EXC_DOT expr .)
    EQUALS          reduce using rule 23 (expr -> EXC_DOT expr .)
    NOT_EQUAL       reduce using rule 23 (expr -> EXC_DOT expr .)
    GREAT_THAN      reduce using rule 23 (expr -> EXC_DOT expr .)
    GREAT_EQUAL     reduce using rule 23 (expr -> EXC_DOT expr .)
    LESS_THAN       reduce using rule 23 (expr -> EXC_DOT expr .)
    LESS_EQUAL      reduce using rule 23 (expr -> EXC_DOT expr .)
    AND             reduce using rule 23 (expr -> EXC_DOT expr .)
    OR              reduce using rule 23 (expr -> EXC_DOT expr .)
    INTE_DOT        reduce using rule 23 (expr -> EXC_DOT expr .)
    RPAREN          reduce using rule 23 (expr -> EXC_DOT expr .)
    DDOT            reduce using rule 23 (expr -> EXC_DOT expr .)
    ATTR_ASSOC      reduce using rule 23 (expr -> EXC_DOT expr .)
    COLON           reduce using rule 23 (expr -> EXC_DOT expr .)
    AS              reduce using rule 23 (expr -> EXC_DOT expr .)
    RBRACKET        reduce using rule 23 (expr -> EXC_DOT expr .)

  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! PERCENT         [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 72

    (24) expr -> INCREMENT variable .

    SEMICOLON       reduce using rule 24 (expr -> INCREMENT variable .)
    PLUS            reduce using rule 24 (expr -> INCREMENT variable .)
    MINUS           reduce using rule 24 (expr -> INCREMENT variable .)
    DIVIDE          reduce using rule 24 (expr -> INCREMENT variable .)
    PERCENT         reduce using rule 24 (expr -> INCREMENT variable .)
    TIMES           reduce using rule 24 (expr -> INCREMENT variable .)
    EQUALS          reduce using rule 24 (expr -> INCREMENT variable .)
    NOT_EQUAL       reduce using rule 24 (expr -> INCREMENT variable .)
    GREAT_THAN      reduce using rule 24 (expr -> INCREMENT variable .)
    GREAT_EQUAL     reduce using rule 24 (expr -> INCREMENT variable .)
    LESS_THAN       reduce using rule 24 (expr -> INCREMENT variable .)
    LESS_EQUAL      reduce using rule 24 (expr -> INCREMENT variable .)
    AND             reduce using rule 24 (expr -> INCREMENT variable .)
    OR              reduce using rule 24 (expr -> INCREMENT variable .)
    INTE_DOT        reduce using rule 24 (expr -> INCREMENT variable .)
    RPAREN          reduce using rule 24 (expr -> INCREMENT variable .)
    DDOT            reduce using rule 24 (expr -> INCREMENT variable .)
    ATTR_ASSOC      reduce using rule 24 (expr -> INCREMENT variable .)
    COLON           reduce using rule 24 (expr -> INCREMENT variable .)
    AS              reduce using rule 24 (expr -> INCREMENT variable .)
    RBRACKET        reduce using rule 24 (expr -> INCREMENT variable .)


state 73

    (25) expr -> variable INCREMENT .

    SEMICOLON       reduce using rule 25 (expr -> variable INCREMENT .)
    PLUS            reduce using rule 25 (expr -> variable INCREMENT .)
    MINUS           reduce using rule 25 (expr -> variable INCREMENT .)
    DIVIDE          reduce using rule 25 (expr -> variable INCREMENT .)
    PERCENT         reduce using rule 25 (expr -> variable INCREMENT .)
    TIMES           reduce using rule 25 (expr -> variable INCREMENT .)
    EQUALS          reduce using rule 25 (expr -> variable INCREMENT .)
    NOT_EQUAL       reduce using rule 25 (expr -> variable INCREMENT .)
    GREAT_THAN      reduce using rule 25 (expr -> variable INCREMENT .)
    GREAT_EQUAL     reduce using rule 25 (expr -> variable INCREMENT .)
    LESS_THAN       reduce using rule 25 (expr -> variable INCREMENT .)
    LESS_EQUAL      reduce using rule 25 (expr -> variable INCREMENT .)
    AND             reduce using rule 25 (expr -> variable INCREMENT .)
    OR              reduce using rule 25 (expr -> variable INCREMENT .)
    INTE_DOT        reduce using rule 25 (expr -> variable INCREMENT .)
    RPAREN          reduce using rule 25 (expr -> variable INCREMENT .)
    DDOT            reduce using rule 25 (expr -> variable INCREMENT .)
    ATTR_ASSOC      reduce using rule 25 (expr -> variable INCREMENT .)
    COLON           reduce using rule 25 (expr -> variable INCREMENT .)
    AS              reduce using rule 25 (expr -> variable INCREMENT .)
    RBRACKET        reduce using rule 25 (expr -> variable INCREMENT .)


state 74

    (27) expr -> variable DECREMENT .

    SEMICOLON       reduce using rule 27 (expr -> variable DECREMENT .)
    PLUS            reduce using rule 27 (expr -> variable DECREMENT .)
    MINUS           reduce using rule 27 (expr -> variable DECREMENT .)
    DIVIDE          reduce using rule 27 (expr -> variable DECREMENT .)
    PERCENT         reduce using rule 27 (expr -> variable DECREMENT .)
    TIMES           reduce using rule 27 (expr -> variable DECREMENT .)
    EQUALS          reduce using rule 27 (expr -> variable DECREMENT .)
    NOT_EQUAL       reduce using rule 27 (expr -> variable DECREMENT .)
    GREAT_THAN      reduce using rule 27 (expr -> variable DECREMENT .)
    GREAT_EQUAL     reduce using rule 27 (expr -> variable DECREMENT .)
    LESS_THAN       reduce using rule 27 (expr -> variable DECREMENT .)
    LESS_EQUAL      reduce using rule 27 (expr -> variable DECREMENT .)
    AND             reduce using rule 27 (expr -> variable DECREMENT .)
    OR              reduce using rule 27 (expr -> variable DECREMENT .)
    INTE_DOT        reduce using rule 27 (expr -> variable DECREMENT .)
    RPAREN          reduce using rule 27 (expr -> variable DECREMENT .)
    DDOT            reduce using rule 27 (expr -> variable DECREMENT .)
    ATTR_ASSOC      reduce using rule 27 (expr -> variable DECREMENT .)
    COLON           reduce using rule 27 (expr -> variable DECREMENT .)
    AS              reduce using rule 27 (expr -> variable DECREMENT .)
    RBRACKET        reduce using rule 27 (expr -> variable DECREMENT .)


state 75

    (34) expr -> variable ADD_ASSIGN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    variable                       shift and go to state 24
    expr                           shift and go to state 131
    function_call                  shift and go to state 28

state 76

    (35) expr -> variable SUB_ASSIGN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    variable                       shift and go to state 24
    expr                           shift and go to state 132
    function_call                  shift and go to state 28

state 77

    (36) expr -> variable MOD_ASSIGN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    variable                       shift and go to state 24
    expr                           shift and go to state 133
    function_call                  shift and go to state 28

state 78

    (37) expr -> variable TIMES_ASSIGN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    variable                       shift and go to state 24
    expr                           shift and go to state 134
    function_call                  shift and go to state 28

state 79

    (38) expr -> variable DIVIDE_ASSIGN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    variable                       shift and go to state 24
    expr                           shift and go to state 135
    function_call                  shift and go to state 28

state 80

    (39) expr -> variable ASSIGN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    variable                       shift and go to state 24
    expr                           shift and go to state 136
    function_call                  shift and go to state 28

state 81

    (26) expr -> DECREMENT variable .

    SEMICOLON       reduce using rule 26 (expr -> DECREMENT variable .)
    PLUS            reduce using rule 26 (expr -> DECREMENT variable .)
    MINUS           reduce using rule 26 (expr -> DECREMENT variable .)
    DIVIDE          reduce using rule 26 (expr -> DECREMENT variable .)
    PERCENT         reduce using rule 26 (expr -> DECREMENT variable .)
    TIMES           reduce using rule 26 (expr -> DECREMENT variable .)
    EQUALS          reduce using rule 26 (expr -> DECREMENT variable .)
    NOT_EQUAL       reduce using rule 26 (expr -> DECREMENT variable .)
    GREAT_THAN      reduce using rule 26 (expr -> DECREMENT variable .)
    GREAT_EQUAL     reduce using rule 26 (expr -> DECREMENT variable .)
    LESS_THAN       reduce using rule 26 (expr -> DECREMENT variable .)
    LESS_EQUAL      reduce using rule 26 (expr -> DECREMENT variable .)
    AND             reduce using rule 26 (expr -> DECREMENT variable .)
    OR              reduce using rule 26 (expr -> DECREMENT variable .)
    INTE_DOT        reduce using rule 26 (expr -> DECREMENT variable .)
    RPAREN          reduce using rule 26 (expr -> DECREMENT variable .)
    DDOT            reduce using rule 26 (expr -> DECREMENT variable .)
    ATTR_ASSOC      reduce using rule 26 (expr -> DECREMENT variable .)
    COLON           reduce using rule 26 (expr -> DECREMENT variable .)
    AS              reduce using rule 26 (expr -> DECREMENT variable .)
    RBRACKET        reduce using rule 26 (expr -> DECREMENT variable .)


state 82

    (29) expr -> LPAREN expr . RPAREN
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    RPAREN          shift and go to state 137
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 83

    (31) expr -> LPAREN typecast_operator . RPAREN expr

    RPAREN          shift and go to state 138


state 84

    (30) expr -> ARRAY_TYPE . array_declaration
    (47) typecast_operator -> ARRAY_TYPE .
    (56) array_declaration -> . LPAREN array_pair_list RPAREN
    (57) array_declaration -> . LPAREN RPAREN

    RPAREN          reduce using rule 47 (typecast_operator -> ARRAY_TYPE .)
    LPAREN          shift and go to state 90

    array_declaration              shift and go to state 89

state 85

    (45) typecast_operator -> INT_TYPE .

    RPAREN          reduce using rule 45 (typecast_operator -> INT_TYPE .)


state 86

    (46) typecast_operator -> FLOAT_TYPE .

    RPAREN          reduce using rule 46 (typecast_operator -> FLOAT_TYPE .)


state 87

    (48) typecast_operator -> STRING_TYPE .

    RPAREN          reduce using rule 48 (typecast_operator -> STRING_TYPE .)


state 88

    (49) typecast_operator -> BOOL_TYPE .

    RPAREN          reduce using rule 49 (typecast_operator -> BOOL_TYPE .)


state 89

    (30) expr -> ARRAY_TYPE array_declaration .

    SEMICOLON       reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    PLUS            reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    MINUS           reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    DIVIDE          reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    PERCENT         reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    TIMES           reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    EQUALS          reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    NOT_EQUAL       reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    GREAT_THAN      reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    GREAT_EQUAL     reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    LESS_THAN       reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    LESS_EQUAL      reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    AND             reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    OR              reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    INTE_DOT        reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    RPAREN          reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    DDOT            reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    ATTR_ASSOC      reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    COLON           reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    AS              reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)
    RBRACKET        reduce using rule 30 (expr -> ARRAY_TYPE array_declaration .)


state 90

    (56) array_declaration -> LPAREN . array_pair_list RPAREN
    (57) array_declaration -> LPAREN . RPAREN
    (141) array_pair_list -> . array_pair array_pair_list_ARR_PAIR
    (142) array_pair_list -> . array_pair
    (143) array_pair -> . expr
    (144) array_pair -> . AMPERSAND variable
    (145) array_pair -> . expr ATTR_ASSOC expr
    (146) array_pair -> . expr ATTR_ASSOC AMPERSAND variable
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 140
    AMPERSAND       shift and go to state 143
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    array_pair_list                shift and go to state 139
    array_pair                     shift and go to state 141
    expr                           shift and go to state 142
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 91

    (73) while_statement -> WHILE expr_parentheses . statement_block_optional
    (149) statement_block_optional -> . statement
    (150) statement_block_optional -> . LKEY statement_MUL RKEY
    (151) statement_block_optional -> . LKEY RKEY
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    LKEY            shift and go to state 96
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    statement_block_optional       shift and go to state 144
    statement                      shift and go to state 95
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 92

    (95) expr_parentheses -> LPAREN . expr RPAREN
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 145
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 93

    (70) if_statement -> IF expr_parentheses . statement_block_optional
    (149) statement_block_optional -> . statement
    (150) statement_block_optional -> . LKEY statement_MUL RKEY
    (151) statement_block_optional -> . LKEY RKEY
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    LKEY            shift and go to state 96
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    statement_block_optional       shift and go to state 146
    statement                      shift and go to state 95
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 94

    (74) do_statement -> DO statement_block_optional . WHILE expr_parentheses SEMICOLON

    WHILE           shift and go to state 147


state 95

    (149) statement_block_optional -> statement .

    WHILE           reduce using rule 149 (statement_block_optional -> statement .)
    FUNCTION        reduce using rule 149 (statement_block_optional -> statement .)
    MINUS           reduce using rule 149 (statement_block_optional -> statement .)
    EXC_DOT         reduce using rule 149 (statement_block_optional -> statement .)
    INCREMENT       reduce using rule 149 (statement_block_optional -> statement .)
    DECREMENT       reduce using rule 149 (statement_block_optional -> statement .)
    LPAREN          reduce using rule 149 (statement_block_optional -> statement .)
    ARRAY_TYPE      reduce using rule 149 (statement_block_optional -> statement .)
    NUMBER_INTEGER  reduce using rule 149 (statement_block_optional -> statement .)
    NUMBER_REAL     reduce using rule 149 (statement_block_optional -> statement .)
    CONSTANT_ENCAPSED_STRING reduce using rule 149 (statement_block_optional -> statement .)
    TRUE            reduce using rule 149 (statement_block_optional -> statement .)
    FALSE           reduce using rule 149 (statement_block_optional -> statement .)
    IF              reduce using rule 149 (statement_block_optional -> statement .)
    DO              reduce using rule 149 (statement_block_optional -> statement .)
    FOR             reduce using rule 149 (statement_block_optional -> statement .)
    FOREACH         reduce using rule 149 (statement_block_optional -> statement .)
    BREAK           reduce using rule 149 (statement_block_optional -> statement .)
    CONTINUE        reduce using rule 149 (statement_block_optional -> statement .)
    RETURN          reduce using rule 149 (statement_block_optional -> statement .)
    EXIT            reduce using rule 149 (statement_block_optional -> statement .)
    DIE             reduce using rule 149 (statement_block_optional -> statement .)
    GLOBAL          reduce using rule 149 (statement_block_optional -> statement .)
    VARIABLE        reduce using rule 149 (statement_block_optional -> statement .)
    ID              reduce using rule 149 (statement_block_optional -> statement .)
    END_PROGRAM     reduce using rule 149 (statement_block_optional -> statement .)
    RKEY            reduce using rule 149 (statement_block_optional -> statement .)


state 96

    (150) statement_block_optional -> LKEY . statement_MUL RKEY
    (151) statement_block_optional -> LKEY . RKEY
    (147) statement_MUL -> . statement statement_MUL
    (148) statement_MUL -> . statement
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RKEY            shift and go to state 149
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    statement_MUL                  shift and go to state 148
    statement                      shift and go to state 150
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 97

    (81) for_statement -> FOR LPAREN . for_parameters RPAREN statement_block_optional
    (82) for_parameters -> . SEMICOLON SEMICOLON
    (83) for_parameters -> . for_expr_OPT SEMICOLON SEMICOLON
    (84) for_parameters -> . for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON
    (85) for_parameters -> . for_expr_OPT SEMICOLON SEMICOLON for_expr_OPT
    (86) for_parameters -> . SEMICOLON for_expr_OPT SEMICOLON
    (87) for_parameters -> . SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT
    (88) for_parameters -> . SEMICOLON SEMICOLON for_expr_OPT
    (89) for_parameters -> . for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT
    (98) for_expr_OPT -> . expr for_expr_COLON_EXPR
    (99) for_expr_OPT -> . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 152
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    for_parameters                 shift and go to state 151
    for_expr_OPT                   shift and go to state 153
    expr                           shift and go to state 154
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 98

    (96) foreach_statement -> FOREACH LPAREN . expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> FOREACH LPAREN . expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 155
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 99

    (75) break_statement -> BREAK expr . SEMICOLON
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       shift and go to state 156
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 100

    (76) break_statement -> BREAK SEMICOLON .

    FUNCTION        reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    MINUS           reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    EXC_DOT         reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    INCREMENT       reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    DECREMENT       reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    ARRAY_TYPE      reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    NUMBER_REAL     reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    TRUE            reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    FALSE           reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    DO              reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    FOREACH         reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    EXIT            reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    DIE             reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    GLOBAL          reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    VARIABLE        reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    ID              reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    END_PROGRAM     reduce using rule 76 (break_statement -> BREAK SEMICOLON .)
    RKEY            reduce using rule 76 (break_statement -> BREAK SEMICOLON .)


state 101

    (77) continue_statement -> CONTINUE expr . SEMICOLON
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       shift and go to state 157
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 102

    (78) continue_statement -> CONTINUE SEMICOLON .

    FUNCTION        reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    MINUS           reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    EXC_DOT         reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    INCREMENT       reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    DECREMENT       reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    LPAREN          reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    ARRAY_TYPE      reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    NUMBER_REAL     reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    TRUE            reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    FALSE           reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    DO              reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    FOREACH         reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    EXIT            reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    DIE             reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    GLOBAL          reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    VARIABLE        reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    ID              reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    END_PROGRAM     reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)
    RKEY            reduce using rule 78 (continue_statement -> CONTINUE SEMICOLON .)


state 103

    (79) return_statement -> RETURN expr . SEMICOLON
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       shift and go to state 158
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 104

    (80) return_statement -> RETURN SEMICOLON .

    FUNCTION        reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    MINUS           reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    EXC_DOT         reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    INCREMENT       reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    DECREMENT       reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    ARRAY_TYPE      reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    NUMBER_REAL     reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    TRUE            reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    FALSE           reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    DO              reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    FOREACH         reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    CONTINUE        reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    EXIT            reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    DIE             reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    GLOBAL          reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    VARIABLE        reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    ID              reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    END_PROGRAM     reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    RKEY            reduce using rule 80 (return_statement -> RETURN SEMICOLON .)


state 105

    (50) exit_statement -> EXIT exit_expr .

    SEMICOLON       reduce using rule 50 (exit_statement -> EXIT exit_expr .)


state 106

    (54) exit_expr -> LPAREN . expr RPAREN
    (55) exit_expr -> LPAREN . RPAREN
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 160
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 159
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 107

    (52) die_statement -> DIE exit_expr .

    SEMICOLON       reduce using rule 52 (die_statement -> DIE exit_expr .)


state 108

    (71) global_statement -> GLOBAL global_var . statement_COLON_GLOBAL
    (72) global_statement -> GLOBAL global_var .
    (91) statement_COLON_GLOBAL -> . COLON global_var statement_COLON_GLOBAL
    (92) statement_COLON_GLOBAL -> . COLON global_var

    SEMICOLON       reduce using rule 72 (global_statement -> GLOBAL global_var .)
    COLON           shift and go to state 162

    statement_COLON_GLOBAL         shift and go to state 161

state 109

    (90) global_var -> VARIABLE .

    COLON           reduce using rule 90 (global_var -> VARIABLE .)
    SEMICOLON       reduce using rule 90 (global_var -> VARIABLE .)


state 110

    (110) variable -> VARIABLE variable_array_selector .

    INCREMENT       reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    DECREMENT       reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    ADD_ASSIGN      reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    SUB_ASSIGN      reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    MOD_ASSIGN      reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    TIMES_ASSIGN    reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    DIVIDE_ASSIGN   reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    ASSIGN          reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    SEMICOLON       reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    PLUS            reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    MINUS           reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    DIVIDE          reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    PERCENT         reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    TIMES           reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    EQUALS          reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    NOT_EQUAL       reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    GREAT_THAN      reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    GREAT_EQUAL     reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    LESS_THAN       reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    LESS_EQUAL      reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    AND             reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    OR              reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    INTE_DOT        reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    RPAREN          reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    DDOT            reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    ATTR_ASSOC      reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    COLON           reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    AS              reduce using rule 110 (variable -> VARIABLE variable_array_selector .)
    RBRACKET        reduce using rule 110 (variable -> VARIABLE variable_array_selector .)


state 111

    (154) variable_array_selector -> selector . variable_array_selector
    (155) variable_array_selector -> selector .
    (154) variable_array_selector -> . selector variable_array_selector
    (155) variable_array_selector -> . selector
    (112) selector -> . LBRACKET expr RBRACKET
    (113) selector -> . LBRACKET RBRACKET

    INCREMENT       reduce using rule 155 (variable_array_selector -> selector .)
    DECREMENT       reduce using rule 155 (variable_array_selector -> selector .)
    ADD_ASSIGN      reduce using rule 155 (variable_array_selector -> selector .)
    SUB_ASSIGN      reduce using rule 155 (variable_array_selector -> selector .)
    MOD_ASSIGN      reduce using rule 155 (variable_array_selector -> selector .)
    TIMES_ASSIGN    reduce using rule 155 (variable_array_selector -> selector .)
    DIVIDE_ASSIGN   reduce using rule 155 (variable_array_selector -> selector .)
    ASSIGN          reduce using rule 155 (variable_array_selector -> selector .)
    SEMICOLON       reduce using rule 155 (variable_array_selector -> selector .)
    PLUS            reduce using rule 155 (variable_array_selector -> selector .)
    MINUS           reduce using rule 155 (variable_array_selector -> selector .)
    DIVIDE          reduce using rule 155 (variable_array_selector -> selector .)
    PERCENT         reduce using rule 155 (variable_array_selector -> selector .)
    TIMES           reduce using rule 155 (variable_array_selector -> selector .)
    EQUALS          reduce using rule 155 (variable_array_selector -> selector .)
    NOT_EQUAL       reduce using rule 155 (variable_array_selector -> selector .)
    GREAT_THAN      reduce using rule 155 (variable_array_selector -> selector .)
    GREAT_EQUAL     reduce using rule 155 (variable_array_selector -> selector .)
    LESS_THAN       reduce using rule 155 (variable_array_selector -> selector .)
    LESS_EQUAL      reduce using rule 155 (variable_array_selector -> selector .)
    AND             reduce using rule 155 (variable_array_selector -> selector .)
    OR              reduce using rule 155 (variable_array_selector -> selector .)
    INTE_DOT        reduce using rule 155 (variable_array_selector -> selector .)
    RPAREN          reduce using rule 155 (variable_array_selector -> selector .)
    DDOT            reduce using rule 155 (variable_array_selector -> selector .)
    ATTR_ASSOC      reduce using rule 155 (variable_array_selector -> selector .)
    COLON           reduce using rule 155 (variable_array_selector -> selector .)
    AS              reduce using rule 155 (variable_array_selector -> selector .)
    RBRACKET        reduce using rule 155 (variable_array_selector -> selector .)
    LBRACKET        shift and go to state 112

    selector                       shift and go to state 111
    variable_array_selector        shift and go to state 163

state 112

    (112) selector -> LBRACKET . expr RBRACKET
    (113) selector -> LBRACKET . RBRACKET
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RBRACKET        shift and go to state 165
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 164
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 113

    (102) function_call -> ID LPAREN . function_call_parameter_list RPAREN
    (103) function_call -> ID LPAREN . RPAREN
    (104) function_call_parameter_list -> . function_call_parameter fc_parameter_list_COLON_PARAMETER
    (105) function_call_parameter_list -> . function_call_parameter
    (108) function_call_parameter -> . expr
    (109) function_call_parameter -> . AMPERSAND VARIABLE
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 167
    AMPERSAND       shift and go to state 170
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    function_call_parameter_list   shift and go to state 166
    function_call_parameter        shift and go to state 168
    expr                           shift and go to state 169
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 114

    (114) function_declaration_statement -> FUNCTION fds_id fds_parameter . fds_statements
    (115) fds_statements -> . LKEY inner_statement_MUL RKEY
    (116) fds_statements -> . LKEY RKEY

    LKEY            shift and go to state 172

    fds_statements                 shift and go to state 171

state 115

    (119) fds_parameter -> LPAREN . parameter_list RPAREN
    (120) fds_parameter -> LPAREN . RPAREN
    (121) parameter_list -> . parameter parameter_list_colon_parameter
    (122) parameter_list -> . parameter
    (123) parameter -> . VARIABLE
    (124) parameter -> . parameter_prefix VARIABLE
    (125) parameter -> . VARIABLE ASSIGN static_scalar
    (126) parameter -> . parameter_prefix VARIABLE ASSIGN static_scalar
    (127) parameter_prefix -> . parameter_type AMPERSAND
    (128) parameter_prefix -> . AMPERSAND
    (129) parameter_prefix -> . parameter_type
    (130) parameter_type -> . INT_TYPE
    (131) parameter_type -> . STRING_TYPE
    (132) parameter_type -> . FLOAT_TYPE
    (133) parameter_type -> . ARRAY_TYPE
    (134) parameter_type -> . BOOL_TYPE

    RPAREN          shift and go to state 174
    VARIABLE        shift and go to state 176
    AMPERSAND       shift and go to state 179
    INT_TYPE        shift and go to state 180
    STRING_TYPE     shift and go to state 181
    FLOAT_TYPE      shift and go to state 182
    ARRAY_TYPE      shift and go to state 183
    BOOL_TYPE       shift and go to state 184

    parameter_list                 shift and go to state 173
    parameter                      shift and go to state 175
    parameter_prefix               shift and go to state 177
    parameter_type                 shift and go to state 178

state 116

    (117) fds_id -> AMPERSAND ID .

    LPAREN          reduce using rule 117 (fds_id -> AMPERSAND ID .)


state 117

    (9) expr -> expr PLUS expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 9 (expr -> expr PLUS expr .)
    PLUS            reduce using rule 9 (expr -> expr PLUS expr .)
    MINUS           reduce using rule 9 (expr -> expr PLUS expr .)
    EQUALS          reduce using rule 9 (expr -> expr PLUS expr .)
    NOT_EQUAL       reduce using rule 9 (expr -> expr PLUS expr .)
    GREAT_THAN      reduce using rule 9 (expr -> expr PLUS expr .)
    GREAT_EQUAL     reduce using rule 9 (expr -> expr PLUS expr .)
    LESS_THAN       reduce using rule 9 (expr -> expr PLUS expr .)
    LESS_EQUAL      reduce using rule 9 (expr -> expr PLUS expr .)
    AND             reduce using rule 9 (expr -> expr PLUS expr .)
    OR              reduce using rule 9 (expr -> expr PLUS expr .)
    INTE_DOT        reduce using rule 9 (expr -> expr PLUS expr .)
    RPAREN          reduce using rule 9 (expr -> expr PLUS expr .)
    DDOT            reduce using rule 9 (expr -> expr PLUS expr .)
    ATTR_ASSOC      reduce using rule 9 (expr -> expr PLUS expr .)
    COLON           reduce using rule 9 (expr -> expr PLUS expr .)
    AS              reduce using rule 9 (expr -> expr PLUS expr .)
    RBRACKET        reduce using rule 9 (expr -> expr PLUS expr .)
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57

  ! DIVIDE          [ reduce using rule 9 (expr -> expr PLUS expr .) ]
  ! PERCENT         [ reduce using rule 9 (expr -> expr PLUS expr .) ]
  ! TIMES           [ reduce using rule 9 (expr -> expr PLUS expr .) ]
  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 118

    (10) expr -> expr MINUS expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 10 (expr -> expr MINUS expr .)
    PLUS            reduce using rule 10 (expr -> expr MINUS expr .)
    MINUS           reduce using rule 10 (expr -> expr MINUS expr .)
    EQUALS          reduce using rule 10 (expr -> expr MINUS expr .)
    NOT_EQUAL       reduce using rule 10 (expr -> expr MINUS expr .)
    GREAT_THAN      reduce using rule 10 (expr -> expr MINUS expr .)
    GREAT_EQUAL     reduce using rule 10 (expr -> expr MINUS expr .)
    LESS_THAN       reduce using rule 10 (expr -> expr MINUS expr .)
    LESS_EQUAL      reduce using rule 10 (expr -> expr MINUS expr .)
    AND             reduce using rule 10 (expr -> expr MINUS expr .)
    OR              reduce using rule 10 (expr -> expr MINUS expr .)
    INTE_DOT        reduce using rule 10 (expr -> expr MINUS expr .)
    RPAREN          reduce using rule 10 (expr -> expr MINUS expr .)
    DDOT            reduce using rule 10 (expr -> expr MINUS expr .)
    ATTR_ASSOC      reduce using rule 10 (expr -> expr MINUS expr .)
    COLON           reduce using rule 10 (expr -> expr MINUS expr .)
    AS              reduce using rule 10 (expr -> expr MINUS expr .)
    RBRACKET        reduce using rule 10 (expr -> expr MINUS expr .)
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57

  ! DIVIDE          [ reduce using rule 10 (expr -> expr MINUS expr .) ]
  ! PERCENT         [ reduce using rule 10 (expr -> expr MINUS expr .) ]
  ! TIMES           [ reduce using rule 10 (expr -> expr MINUS expr .) ]
  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 119

    (12) expr -> expr DIVIDE expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 12 (expr -> expr DIVIDE expr .)
    PLUS            reduce using rule 12 (expr -> expr DIVIDE expr .)
    MINUS           reduce using rule 12 (expr -> expr DIVIDE expr .)
    DIVIDE          reduce using rule 12 (expr -> expr DIVIDE expr .)
    PERCENT         reduce using rule 12 (expr -> expr DIVIDE expr .)
    TIMES           reduce using rule 12 (expr -> expr DIVIDE expr .)
    EQUALS          reduce using rule 12 (expr -> expr DIVIDE expr .)
    NOT_EQUAL       reduce using rule 12 (expr -> expr DIVIDE expr .)
    GREAT_THAN      reduce using rule 12 (expr -> expr DIVIDE expr .)
    GREAT_EQUAL     reduce using rule 12 (expr -> expr DIVIDE expr .)
    LESS_THAN       reduce using rule 12 (expr -> expr DIVIDE expr .)
    LESS_EQUAL      reduce using rule 12 (expr -> expr DIVIDE expr .)
    AND             reduce using rule 12 (expr -> expr DIVIDE expr .)
    OR              reduce using rule 12 (expr -> expr DIVIDE expr .)
    INTE_DOT        reduce using rule 12 (expr -> expr DIVIDE expr .)
    RPAREN          reduce using rule 12 (expr -> expr DIVIDE expr .)
    DDOT            reduce using rule 12 (expr -> expr DIVIDE expr .)
    ATTR_ASSOC      reduce using rule 12 (expr -> expr DIVIDE expr .)
    COLON           reduce using rule 12 (expr -> expr DIVIDE expr .)
    AS              reduce using rule 12 (expr -> expr DIVIDE expr .)
    RBRACKET        reduce using rule 12 (expr -> expr DIVIDE expr .)

  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! PERCENT         [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 120

    (13) expr -> expr PERCENT expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 13 (expr -> expr PERCENT expr .)
    PLUS            reduce using rule 13 (expr -> expr PERCENT expr .)
    MINUS           reduce using rule 13 (expr -> expr PERCENT expr .)
    DIVIDE          reduce using rule 13 (expr -> expr PERCENT expr .)
    PERCENT         reduce using rule 13 (expr -> expr PERCENT expr .)
    TIMES           reduce using rule 13 (expr -> expr PERCENT expr .)
    EQUALS          reduce using rule 13 (expr -> expr PERCENT expr .)
    NOT_EQUAL       reduce using rule 13 (expr -> expr PERCENT expr .)
    GREAT_THAN      reduce using rule 13 (expr -> expr PERCENT expr .)
    GREAT_EQUAL     reduce using rule 13 (expr -> expr PERCENT expr .)
    LESS_THAN       reduce using rule 13 (expr -> expr PERCENT expr .)
    LESS_EQUAL      reduce using rule 13 (expr -> expr PERCENT expr .)
    AND             reduce using rule 13 (expr -> expr PERCENT expr .)
    OR              reduce using rule 13 (expr -> expr PERCENT expr .)
    INTE_DOT        reduce using rule 13 (expr -> expr PERCENT expr .)
    RPAREN          reduce using rule 13 (expr -> expr PERCENT expr .)
    DDOT            reduce using rule 13 (expr -> expr PERCENT expr .)
    ATTR_ASSOC      reduce using rule 13 (expr -> expr PERCENT expr .)
    COLON           reduce using rule 13 (expr -> expr PERCENT expr .)
    AS              reduce using rule 13 (expr -> expr PERCENT expr .)
    RBRACKET        reduce using rule 13 (expr -> expr PERCENT expr .)

  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! PERCENT         [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 121

    (14) expr -> expr TIMES expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 14 (expr -> expr TIMES expr .)
    PLUS            reduce using rule 14 (expr -> expr TIMES expr .)
    MINUS           reduce using rule 14 (expr -> expr TIMES expr .)
    DIVIDE          reduce using rule 14 (expr -> expr TIMES expr .)
    PERCENT         reduce using rule 14 (expr -> expr TIMES expr .)
    TIMES           reduce using rule 14 (expr -> expr TIMES expr .)
    EQUALS          reduce using rule 14 (expr -> expr TIMES expr .)
    NOT_EQUAL       reduce using rule 14 (expr -> expr TIMES expr .)
    GREAT_THAN      reduce using rule 14 (expr -> expr TIMES expr .)
    GREAT_EQUAL     reduce using rule 14 (expr -> expr TIMES expr .)
    LESS_THAN       reduce using rule 14 (expr -> expr TIMES expr .)
    LESS_EQUAL      reduce using rule 14 (expr -> expr TIMES expr .)
    AND             reduce using rule 14 (expr -> expr TIMES expr .)
    OR              reduce using rule 14 (expr -> expr TIMES expr .)
    INTE_DOT        reduce using rule 14 (expr -> expr TIMES expr .)
    RPAREN          reduce using rule 14 (expr -> expr TIMES expr .)
    DDOT            reduce using rule 14 (expr -> expr TIMES expr .)
    ATTR_ASSOC      reduce using rule 14 (expr -> expr TIMES expr .)
    COLON           reduce using rule 14 (expr -> expr TIMES expr .)
    AS              reduce using rule 14 (expr -> expr TIMES expr .)
    RBRACKET        reduce using rule 14 (expr -> expr TIMES expr .)

  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! PERCENT         [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 122

    (15) expr -> expr EQUALS expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 15 (expr -> expr EQUALS expr .)
    EQUALS          reduce using rule 15 (expr -> expr EQUALS expr .)
    NOT_EQUAL       reduce using rule 15 (expr -> expr EQUALS expr .)
    GREAT_THAN      reduce using rule 15 (expr -> expr EQUALS expr .)
    GREAT_EQUAL     reduce using rule 15 (expr -> expr EQUALS expr .)
    LESS_THAN       reduce using rule 15 (expr -> expr EQUALS expr .)
    LESS_EQUAL      reduce using rule 15 (expr -> expr EQUALS expr .)
    AND             reduce using rule 15 (expr -> expr EQUALS expr .)
    OR              reduce using rule 15 (expr -> expr EQUALS expr .)
    INTE_DOT        reduce using rule 15 (expr -> expr EQUALS expr .)
    RPAREN          reduce using rule 15 (expr -> expr EQUALS expr .)
    DDOT            reduce using rule 15 (expr -> expr EQUALS expr .)
    ATTR_ASSOC      reduce using rule 15 (expr -> expr EQUALS expr .)
    COLON           reduce using rule 15 (expr -> expr EQUALS expr .)
    AS              reduce using rule 15 (expr -> expr EQUALS expr .)
    RBRACKET        reduce using rule 15 (expr -> expr EQUALS expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57

  ! PLUS            [ reduce using rule 15 (expr -> expr EQUALS expr .) ]
  ! MINUS           [ reduce using rule 15 (expr -> expr EQUALS expr .) ]
  ! DIVIDE          [ reduce using rule 15 (expr -> expr EQUALS expr .) ]
  ! PERCENT         [ reduce using rule 15 (expr -> expr EQUALS expr .) ]
  ! TIMES           [ reduce using rule 15 (expr -> expr EQUALS expr .) ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 123

    (16) expr -> expr NOT_EQUAL expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    EQUALS          reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    NOT_EQUAL       reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    GREAT_THAN      reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    GREAT_EQUAL     reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    LESS_THAN       reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    LESS_EQUAL      reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    AND             reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    OR              reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    INTE_DOT        reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    RPAREN          reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    DDOT            reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    ATTR_ASSOC      reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    COLON           reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    AS              reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    RBRACKET        reduce using rule 16 (expr -> expr NOT_EQUAL expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57

  ! PLUS            [ reduce using rule 16 (expr -> expr NOT_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 16 (expr -> expr NOT_EQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 16 (expr -> expr NOT_EQUAL expr .) ]
  ! PERCENT         [ reduce using rule 16 (expr -> expr NOT_EQUAL expr .) ]
  ! TIMES           [ reduce using rule 16 (expr -> expr NOT_EQUAL expr .) ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 124

    (17) expr -> expr GREAT_THAN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    EQUALS          reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    NOT_EQUAL       reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    GREAT_THAN      reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    GREAT_EQUAL     reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    LESS_THAN       reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    LESS_EQUAL      reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    AND             reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    OR              reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    INTE_DOT        reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    RPAREN          reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    DDOT            reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    ATTR_ASSOC      reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    COLON           reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    AS              reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    RBRACKET        reduce using rule 17 (expr -> expr GREAT_THAN expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57

  ! PLUS            [ reduce using rule 17 (expr -> expr GREAT_THAN expr .) ]
  ! MINUS           [ reduce using rule 17 (expr -> expr GREAT_THAN expr .) ]
  ! DIVIDE          [ reduce using rule 17 (expr -> expr GREAT_THAN expr .) ]
  ! PERCENT         [ reduce using rule 17 (expr -> expr GREAT_THAN expr .) ]
  ! TIMES           [ reduce using rule 17 (expr -> expr GREAT_THAN expr .) ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 125

    (18) expr -> expr GREAT_EQUAL expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    EQUALS          reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    NOT_EQUAL       reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    GREAT_THAN      reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    GREAT_EQUAL     reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    LESS_THAN       reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    LESS_EQUAL      reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    AND             reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    OR              reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    INTE_DOT        reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    RPAREN          reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    DDOT            reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    ATTR_ASSOC      reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    COLON           reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    AS              reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    RBRACKET        reduce using rule 18 (expr -> expr GREAT_EQUAL expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57

  ! PLUS            [ reduce using rule 18 (expr -> expr GREAT_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 18 (expr -> expr GREAT_EQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 18 (expr -> expr GREAT_EQUAL expr .) ]
  ! PERCENT         [ reduce using rule 18 (expr -> expr GREAT_EQUAL expr .) ]
  ! TIMES           [ reduce using rule 18 (expr -> expr GREAT_EQUAL expr .) ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 126

    (19) expr -> expr LESS_THAN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 19 (expr -> expr LESS_THAN expr .)
    EQUALS          reduce using rule 19 (expr -> expr LESS_THAN expr .)
    NOT_EQUAL       reduce using rule 19 (expr -> expr LESS_THAN expr .)
    GREAT_THAN      reduce using rule 19 (expr -> expr LESS_THAN expr .)
    GREAT_EQUAL     reduce using rule 19 (expr -> expr LESS_THAN expr .)
    LESS_THAN       reduce using rule 19 (expr -> expr LESS_THAN expr .)
    LESS_EQUAL      reduce using rule 19 (expr -> expr LESS_THAN expr .)
    AND             reduce using rule 19 (expr -> expr LESS_THAN expr .)
    OR              reduce using rule 19 (expr -> expr LESS_THAN expr .)
    INTE_DOT        reduce using rule 19 (expr -> expr LESS_THAN expr .)
    RPAREN          reduce using rule 19 (expr -> expr LESS_THAN expr .)
    DDOT            reduce using rule 19 (expr -> expr LESS_THAN expr .)
    ATTR_ASSOC      reduce using rule 19 (expr -> expr LESS_THAN expr .)
    COLON           reduce using rule 19 (expr -> expr LESS_THAN expr .)
    AS              reduce using rule 19 (expr -> expr LESS_THAN expr .)
    RBRACKET        reduce using rule 19 (expr -> expr LESS_THAN expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57

  ! PLUS            [ reduce using rule 19 (expr -> expr LESS_THAN expr .) ]
  ! MINUS           [ reduce using rule 19 (expr -> expr LESS_THAN expr .) ]
  ! DIVIDE          [ reduce using rule 19 (expr -> expr LESS_THAN expr .) ]
  ! PERCENT         [ reduce using rule 19 (expr -> expr LESS_THAN expr .) ]
  ! TIMES           [ reduce using rule 19 (expr -> expr LESS_THAN expr .) ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 127

    (20) expr -> expr LESS_EQUAL expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    EQUALS          reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    NOT_EQUAL       reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    GREAT_THAN      reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    GREAT_EQUAL     reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    LESS_THAN       reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    LESS_EQUAL      reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    AND             reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    OR              reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    INTE_DOT        reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    RPAREN          reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    DDOT            reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    ATTR_ASSOC      reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    COLON           reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    AS              reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    RBRACKET        reduce using rule 20 (expr -> expr LESS_EQUAL expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57

  ! PLUS            [ reduce using rule 20 (expr -> expr LESS_EQUAL expr .) ]
  ! MINUS           [ reduce using rule 20 (expr -> expr LESS_EQUAL expr .) ]
  ! DIVIDE          [ reduce using rule 20 (expr -> expr LESS_EQUAL expr .) ]
  ! PERCENT         [ reduce using rule 20 (expr -> expr LESS_EQUAL expr .) ]
  ! TIMES           [ reduce using rule 20 (expr -> expr LESS_EQUAL expr .) ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 128

    (21) expr -> expr AND expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 21 (expr -> expr AND expr .)
    AND             reduce using rule 21 (expr -> expr AND expr .)
    OR              reduce using rule 21 (expr -> expr AND expr .)
    INTE_DOT        reduce using rule 21 (expr -> expr AND expr .)
    RPAREN          reduce using rule 21 (expr -> expr AND expr .)
    DDOT            reduce using rule 21 (expr -> expr AND expr .)
    ATTR_ASSOC      reduce using rule 21 (expr -> expr AND expr .)
    COLON           reduce using rule 21 (expr -> expr AND expr .)
    AS              reduce using rule 21 (expr -> expr AND expr .)
    RBRACKET        reduce using rule 21 (expr -> expr AND expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63

  ! PLUS            [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! MINUS           [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! DIVIDE          [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! PERCENT         [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! TIMES           [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! EQUALS          [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! NOT_EQUAL       [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! GREAT_THAN      [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! LESS_THAN       [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! LESS_EQUAL      [ reduce using rule 21 (expr -> expr AND expr .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 129

    (22) expr -> expr OR expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 22 (expr -> expr OR expr .)
    AND             reduce using rule 22 (expr -> expr OR expr .)
    OR              reduce using rule 22 (expr -> expr OR expr .)
    INTE_DOT        reduce using rule 22 (expr -> expr OR expr .)
    RPAREN          reduce using rule 22 (expr -> expr OR expr .)
    DDOT            reduce using rule 22 (expr -> expr OR expr .)
    ATTR_ASSOC      reduce using rule 22 (expr -> expr OR expr .)
    COLON           reduce using rule 22 (expr -> expr OR expr .)
    AS              reduce using rule 22 (expr -> expr OR expr .)
    RBRACKET        reduce using rule 22 (expr -> expr OR expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63

  ! PLUS            [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! MINUS           [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! DIVIDE          [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! PERCENT         [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! TIMES           [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! EQUALS          [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! NOT_EQUAL       [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! GREAT_THAN      [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! LESS_THAN       [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! LESS_EQUAL      [ reduce using rule 22 (expr -> expr OR expr .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 130

    (33) expr -> expr INTE_DOT expr . DDOT expr
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    DDOT            shift and go to state 185
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 131

    (34) expr -> variable ADD_ASSIGN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 34 (expr -> variable ADD_ASSIGN expr .)
    RPAREN          reduce using rule 34 (expr -> variable ADD_ASSIGN expr .)
    DDOT            reduce using rule 34 (expr -> variable ADD_ASSIGN expr .)
    ATTR_ASSOC      reduce using rule 34 (expr -> variable ADD_ASSIGN expr .)
    COLON           reduce using rule 34 (expr -> variable ADD_ASSIGN expr .)
    AS              reduce using rule 34 (expr -> variable ADD_ASSIGN expr .)
    RBRACKET        reduce using rule 34 (expr -> variable ADD_ASSIGN expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66

  ! PLUS            [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! PERCENT         [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! GREAT_THAN      [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! LESS_THAN       [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! LESS_EQUAL      [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! AND             [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! OR              [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]
  ! INTE_DOT        [ reduce using rule 34 (expr -> variable ADD_ASSIGN expr .) ]


state 132

    (35) expr -> variable SUB_ASSIGN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 35 (expr -> variable SUB_ASSIGN expr .)
    RPAREN          reduce using rule 35 (expr -> variable SUB_ASSIGN expr .)
    DDOT            reduce using rule 35 (expr -> variable SUB_ASSIGN expr .)
    ATTR_ASSOC      reduce using rule 35 (expr -> variable SUB_ASSIGN expr .)
    COLON           reduce using rule 35 (expr -> variable SUB_ASSIGN expr .)
    AS              reduce using rule 35 (expr -> variable SUB_ASSIGN expr .)
    RBRACKET        reduce using rule 35 (expr -> variable SUB_ASSIGN expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66

  ! PLUS            [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! PERCENT         [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! GREAT_THAN      [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! LESS_THAN       [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! LESS_EQUAL      [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! AND             [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! OR              [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]
  ! INTE_DOT        [ reduce using rule 35 (expr -> variable SUB_ASSIGN expr .) ]


state 133

    (36) expr -> variable MOD_ASSIGN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 36 (expr -> variable MOD_ASSIGN expr .)
    RPAREN          reduce using rule 36 (expr -> variable MOD_ASSIGN expr .)
    DDOT            reduce using rule 36 (expr -> variable MOD_ASSIGN expr .)
    ATTR_ASSOC      reduce using rule 36 (expr -> variable MOD_ASSIGN expr .)
    COLON           reduce using rule 36 (expr -> variable MOD_ASSIGN expr .)
    AS              reduce using rule 36 (expr -> variable MOD_ASSIGN expr .)
    RBRACKET        reduce using rule 36 (expr -> variable MOD_ASSIGN expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66

  ! PLUS            [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! PERCENT         [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! GREAT_THAN      [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! LESS_THAN       [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! LESS_EQUAL      [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! AND             [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! OR              [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]
  ! INTE_DOT        [ reduce using rule 36 (expr -> variable MOD_ASSIGN expr .) ]


state 134

    (37) expr -> variable TIMES_ASSIGN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .)
    RPAREN          reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .)
    DDOT            reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .)
    ATTR_ASSOC      reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .)
    COLON           reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .)
    AS              reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .)
    RBRACKET        reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66

  ! PLUS            [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! PERCENT         [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! GREAT_THAN      [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! LESS_THAN       [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! LESS_EQUAL      [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! AND             [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! OR              [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]
  ! INTE_DOT        [ reduce using rule 37 (expr -> variable TIMES_ASSIGN expr .) ]


state 135

    (38) expr -> variable DIVIDE_ASSIGN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .)
    RPAREN          reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .)
    DDOT            reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .)
    ATTR_ASSOC      reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .)
    COLON           reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .)
    AS              reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .)
    RBRACKET        reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66

  ! PLUS            [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! PERCENT         [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! GREAT_THAN      [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! LESS_THAN       [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! LESS_EQUAL      [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! AND             [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! OR              [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]
  ! INTE_DOT        [ reduce using rule 38 (expr -> variable DIVIDE_ASSIGN expr .) ]


state 136

    (39) expr -> variable ASSIGN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 39 (expr -> variable ASSIGN expr .)
    RPAREN          reduce using rule 39 (expr -> variable ASSIGN expr .)
    DDOT            reduce using rule 39 (expr -> variable ASSIGN expr .)
    ATTR_ASSOC      reduce using rule 39 (expr -> variable ASSIGN expr .)
    COLON           reduce using rule 39 (expr -> variable ASSIGN expr .)
    AS              reduce using rule 39 (expr -> variable ASSIGN expr .)
    RBRACKET        reduce using rule 39 (expr -> variable ASSIGN expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66

  ! PLUS            [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! MINUS           [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! DIVIDE          [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! PERCENT         [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! TIMES           [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! EQUALS          [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! NOT_EQUAL       [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! GREAT_THAN      [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! LESS_THAN       [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! LESS_EQUAL      [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! AND             [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! OR              [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]
  ! INTE_DOT        [ reduce using rule 39 (expr -> variable ASSIGN expr .) ]


state 137

    (29) expr -> LPAREN expr RPAREN .

    SEMICOLON       reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    PLUS            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    DIVIDE          reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    PERCENT         reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    TIMES           reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    EQUALS          reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    NOT_EQUAL       reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    GREAT_THAN      reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    GREAT_EQUAL     reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    LESS_THAN       reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    LESS_EQUAL      reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    AND             reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    OR              reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    INTE_DOT        reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    RPAREN          reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    DDOT            reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    ATTR_ASSOC      reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    COLON           reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    AS              reduce using rule 29 (expr -> LPAREN expr RPAREN .)
    RBRACKET        reduce using rule 29 (expr -> LPAREN expr RPAREN .)


state 138

    (31) expr -> LPAREN typecast_operator RPAREN . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 186
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 139

    (56) array_declaration -> LPAREN array_pair_list . RPAREN

    RPAREN          shift and go to state 187


state 140

    (57) array_declaration -> LPAREN RPAREN .

    SEMICOLON       reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    PLUS            reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    MINUS           reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    DIVIDE          reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    PERCENT         reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    TIMES           reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    EQUALS          reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    GREAT_THAN      reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    GREAT_EQUAL     reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    LESS_THAN       reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    AND             reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    OR              reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    INTE_DOT        reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    RPAREN          reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    DDOT            reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    ATTR_ASSOC      reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    COLON           reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    AS              reduce using rule 57 (array_declaration -> LPAREN RPAREN .)
    RBRACKET        reduce using rule 57 (array_declaration -> LPAREN RPAREN .)


state 141

    (141) array_pair_list -> array_pair . array_pair_list_ARR_PAIR
    (142) array_pair_list -> array_pair .
    (156) array_pair_list_ARR_PAIR -> . COLON array_pair array_pair_list_ARR_PAIR
    (157) array_pair_list_ARR_PAIR -> . COLON array_pair

    RPAREN          reduce using rule 142 (array_pair_list -> array_pair .)
    COLON           shift and go to state 189

    array_pair_list_ARR_PAIR       shift and go to state 188

state 142

    (143) array_pair -> expr .
    (145) array_pair -> expr . ATTR_ASSOC expr
    (146) array_pair -> expr . ATTR_ASSOC AMPERSAND variable
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    COLON           reduce using rule 143 (array_pair -> expr .)
    RPAREN          reduce using rule 143 (array_pair -> expr .)
    ATTR_ASSOC      shift and go to state 190
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 143

    (144) array_pair -> AMPERSAND . variable
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE

    VARIABLE        shift and go to state 45

    variable                       shift and go to state 191

state 144

    (73) while_statement -> WHILE expr_parentheses statement_block_optional .

    FUNCTION        reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    MINUS           reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    EXC_DOT         reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    INCREMENT       reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    DECREMENT       reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    LPAREN          reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    ARRAY_TYPE      reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    NUMBER_INTEGER  reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    NUMBER_REAL     reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    CONSTANT_ENCAPSED_STRING reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    TRUE            reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    FALSE           reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    WHILE           reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    IF              reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    DO              reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    FOR             reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    FOREACH         reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    BREAK           reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    CONTINUE        reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    RETURN          reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    EXIT            reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    DIE             reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    GLOBAL          reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    VARIABLE        reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    ID              reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    END_PROGRAM     reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)
    RKEY            reduce using rule 73 (while_statement -> WHILE expr_parentheses statement_block_optional .)


state 145

    (95) expr_parentheses -> LPAREN expr . RPAREN
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    RPAREN          shift and go to state 192
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 146

    (70) if_statement -> IF expr_parentheses statement_block_optional .

    FUNCTION        reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    MINUS           reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    EXC_DOT         reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    INCREMENT       reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    DECREMENT       reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    LPAREN          reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    ARRAY_TYPE      reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    NUMBER_INTEGER  reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    NUMBER_REAL     reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    CONSTANT_ENCAPSED_STRING reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    TRUE            reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    FALSE           reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    WHILE           reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    IF              reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    DO              reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    FOR             reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    FOREACH         reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    BREAK           reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    CONTINUE        reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    RETURN          reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    EXIT            reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    DIE             reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    GLOBAL          reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    VARIABLE        reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    ID              reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    END_PROGRAM     reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)
    RKEY            reduce using rule 70 (if_statement -> IF expr_parentheses statement_block_optional .)


state 147

    (74) do_statement -> DO statement_block_optional WHILE . expr_parentheses SEMICOLON
    (95) expr_parentheses -> . LPAREN expr RPAREN

    LPAREN          shift and go to state 92

    expr_parentheses               shift and go to state 193

state 148

    (150) statement_block_optional -> LKEY statement_MUL . RKEY

    RKEY            shift and go to state 194


state 149

    (151) statement_block_optional -> LKEY RKEY .

    WHILE           reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    FUNCTION        reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    MINUS           reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    EXC_DOT         reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    INCREMENT       reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    DECREMENT       reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    LPAREN          reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    ARRAY_TYPE      reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    NUMBER_INTEGER  reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    NUMBER_REAL     reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    CONSTANT_ENCAPSED_STRING reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    TRUE            reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    FALSE           reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    IF              reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    DO              reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    FOR             reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    FOREACH         reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    BREAK           reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    CONTINUE        reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    RETURN          reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    EXIT            reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    DIE             reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    GLOBAL          reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    VARIABLE        reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    ID              reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    END_PROGRAM     reduce using rule 151 (statement_block_optional -> LKEY RKEY .)
    RKEY            reduce using rule 151 (statement_block_optional -> LKEY RKEY .)


state 150

    (147) statement_MUL -> statement . statement_MUL
    (148) statement_MUL -> statement .
    (147) statement_MUL -> . statement statement_MUL
    (148) statement_MUL -> . statement
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RKEY            reduce using rule 148 (statement_MUL -> statement .)
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    statement                      shift and go to state 150
    statement_MUL                  shift and go to state 195
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 151

    (81) for_statement -> FOR LPAREN for_parameters . RPAREN statement_block_optional

    RPAREN          shift and go to state 196


state 152

    (82) for_parameters -> SEMICOLON . SEMICOLON
    (86) for_parameters -> SEMICOLON . for_expr_OPT SEMICOLON
    (87) for_parameters -> SEMICOLON . for_expr_OPT SEMICOLON for_expr_OPT
    (88) for_parameters -> SEMICOLON . SEMICOLON for_expr_OPT
    (98) for_expr_OPT -> . expr for_expr_COLON_EXPR
    (99) for_expr_OPT -> . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 197
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    for_expr_OPT                   shift and go to state 198
    expr                           shift and go to state 154
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 153

    (83) for_parameters -> for_expr_OPT . SEMICOLON SEMICOLON
    (84) for_parameters -> for_expr_OPT . SEMICOLON for_expr_OPT SEMICOLON
    (85) for_parameters -> for_expr_OPT . SEMICOLON SEMICOLON for_expr_OPT
    (89) for_parameters -> for_expr_OPT . SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT

    SEMICOLON       shift and go to state 199


state 154

    (98) for_expr_OPT -> expr . for_expr_COLON_EXPR
    (99) for_expr_OPT -> expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr
    (100) for_expr_COLON_EXPR -> . COLON expr for_expr_COLON_EXPR
    (101) for_expr_COLON_EXPR -> . COLON expr

    SEMICOLON       reduce using rule 99 (for_expr_OPT -> expr .)
    RPAREN          reduce using rule 99 (for_expr_OPT -> expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66
    COLON           shift and go to state 201

    for_expr_COLON_EXPR            shift and go to state 200

state 155

    (96) foreach_statement -> FOREACH LPAREN expr . AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> FOREACH LPAREN expr . AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    AS              shift and go to state 202
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 156

    (75) break_statement -> BREAK expr SEMICOLON .

    FUNCTION        reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    MINUS           reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    EXC_DOT         reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    INCREMENT       reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    DECREMENT       reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    LPAREN          reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    ARRAY_TYPE      reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    NUMBER_REAL     reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    TRUE            reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    FALSE           reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    WHILE           reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    IF              reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    DO              reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    FOR             reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    FOREACH         reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    BREAK           reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    CONTINUE        reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    RETURN          reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    EXIT            reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    DIE             reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    GLOBAL          reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    VARIABLE        reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    ID              reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    END_PROGRAM     reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)
    RKEY            reduce using rule 75 (break_statement -> BREAK expr SEMICOLON .)


state 157

    (77) continue_statement -> CONTINUE expr SEMICOLON .

    FUNCTION        reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    MINUS           reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    EXC_DOT         reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    INCREMENT       reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    DECREMENT       reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    LPAREN          reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    ARRAY_TYPE      reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    NUMBER_REAL     reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    TRUE            reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    FALSE           reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    WHILE           reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    IF              reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    DO              reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    FOR             reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    FOREACH         reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    BREAK           reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    CONTINUE        reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    RETURN          reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    EXIT            reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    DIE             reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    GLOBAL          reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    VARIABLE        reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    ID              reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    END_PROGRAM     reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)
    RKEY            reduce using rule 77 (continue_statement -> CONTINUE expr SEMICOLON .)


state 158

    (79) return_statement -> RETURN expr SEMICOLON .

    FUNCTION        reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    MINUS           reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    EXC_DOT         reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    INCREMENT       reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    DECREMENT       reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    LPAREN          reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    ARRAY_TYPE      reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    NUMBER_REAL     reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    TRUE            reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    FALSE           reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    WHILE           reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    IF              reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    DO              reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    FOR             reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    FOREACH         reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    BREAK           reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    CONTINUE        reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    RETURN          reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    EXIT            reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    DIE             reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    GLOBAL          reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    VARIABLE        reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    ID              reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    END_PROGRAM     reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)
    RKEY            reduce using rule 79 (return_statement -> RETURN expr SEMICOLON .)


state 159

    (54) exit_expr -> LPAREN expr . RPAREN
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    RPAREN          shift and go to state 203
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 160

    (55) exit_expr -> LPAREN RPAREN .

    SEMICOLON       reduce using rule 55 (exit_expr -> LPAREN RPAREN .)


state 161

    (71) global_statement -> GLOBAL global_var statement_COLON_GLOBAL .

    SEMICOLON       reduce using rule 71 (global_statement -> GLOBAL global_var statement_COLON_GLOBAL .)


state 162

    (91) statement_COLON_GLOBAL -> COLON . global_var statement_COLON_GLOBAL
    (92) statement_COLON_GLOBAL -> COLON . global_var
    (90) global_var -> . VARIABLE

    VARIABLE        shift and go to state 109

    global_var                     shift and go to state 204

state 163

    (154) variable_array_selector -> selector variable_array_selector .

    INCREMENT       reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    DECREMENT       reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    ADD_ASSIGN      reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    SUB_ASSIGN      reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    MOD_ASSIGN      reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    TIMES_ASSIGN    reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    DIVIDE_ASSIGN   reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    ASSIGN          reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    SEMICOLON       reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    PLUS            reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    MINUS           reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    DIVIDE          reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    PERCENT         reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    TIMES           reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    EQUALS          reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    NOT_EQUAL       reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    GREAT_THAN      reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    GREAT_EQUAL     reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    LESS_THAN       reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    LESS_EQUAL      reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    AND             reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    OR              reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    INTE_DOT        reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    RPAREN          reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    DDOT            reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    ATTR_ASSOC      reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    COLON           reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    AS              reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)
    RBRACKET        reduce using rule 154 (variable_array_selector -> selector variable_array_selector .)


state 164

    (112) selector -> LBRACKET expr . RBRACKET
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    RBRACKET        shift and go to state 205
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 165

    (113) selector -> LBRACKET RBRACKET .

    LBRACKET        reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    INCREMENT       reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    DECREMENT       reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    ADD_ASSIGN      reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    SUB_ASSIGN      reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    MOD_ASSIGN      reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    TIMES_ASSIGN    reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    DIVIDE_ASSIGN   reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    ASSIGN          reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    SEMICOLON       reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    PLUS            reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    MINUS           reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    PERCENT         reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    TIMES           reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    EQUALS          reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    NOT_EQUAL       reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    GREAT_THAN      reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    GREAT_EQUAL     reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    LESS_THAN       reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    LESS_EQUAL      reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    AND             reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    OR              reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    INTE_DOT        reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    RPAREN          reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    DDOT            reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    ATTR_ASSOC      reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    COLON           reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    AS              reduce using rule 113 (selector -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 113 (selector -> LBRACKET RBRACKET .)


state 166

    (102) function_call -> ID LPAREN function_call_parameter_list . RPAREN

    RPAREN          shift and go to state 206


state 167

    (103) function_call -> ID LPAREN RPAREN .

    SEMICOLON       reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    PLUS            reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    MINUS           reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    DIVIDE          reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    PERCENT         reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    TIMES           reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    EQUALS          reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    NOT_EQUAL       reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    GREAT_THAN      reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    GREAT_EQUAL     reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    LESS_THAN       reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    LESS_EQUAL      reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    AND             reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    OR              reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    INTE_DOT        reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    DDOT            reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    ATTR_ASSOC      reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    COLON           reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    AS              reduce using rule 103 (function_call -> ID LPAREN RPAREN .)
    RBRACKET        reduce using rule 103 (function_call -> ID LPAREN RPAREN .)


state 168

    (104) function_call_parameter_list -> function_call_parameter . fc_parameter_list_COLON_PARAMETER
    (105) function_call_parameter_list -> function_call_parameter .
    (106) fc_parameter_list_COLON_PARAMETER -> . COLON function_call_parameter fc_parameter_list_COLON_PARAMETER
    (107) fc_parameter_list_COLON_PARAMETER -> . COLON function_call_parameter

    RPAREN          reduce using rule 105 (function_call_parameter_list -> function_call_parameter .)
    COLON           shift and go to state 208

    fc_parameter_list_COLON_PARAMETER shift and go to state 207

state 169

    (108) function_call_parameter -> expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    COLON           reduce using rule 108 (function_call_parameter -> expr .)
    RPAREN          reduce using rule 108 (function_call_parameter -> expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 170

    (109) function_call_parameter -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 209


state 171

    (114) function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .

    FUNCTION        reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    MINUS           reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    EXC_DOT         reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    INCREMENT       reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    DECREMENT       reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    LPAREN          reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    ARRAY_TYPE      reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    NUMBER_INTEGER  reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    NUMBER_REAL     reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    CONSTANT_ENCAPSED_STRING reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    TRUE            reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    FALSE           reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    WHILE           reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    IF              reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    DO              reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    FOR             reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    FOREACH         reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    BREAK           reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    CONTINUE        reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    RETURN          reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    EXIT            reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    DIE             reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    GLOBAL          reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    VARIABLE        reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    ID              reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    END_PROGRAM     reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)
    RKEY            reduce using rule 114 (function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements .)


state 172

    (115) fds_statements -> LKEY . inner_statement_MUL RKEY
    (116) fds_statements -> LKEY . RKEY
    (7) inner_statement_MUL -> . inner_statement inner_statement_MUL
    (8) inner_statement_MUL -> . inner_statement
    (5) inner_statement -> . function_declaration_statement
    (6) inner_statement -> . statement
    (114) function_declaration_statement -> . FUNCTION fds_id fds_parameter fds_statements
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RKEY            shift and go to state 211
    FUNCTION        shift and go to state 8
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    inner_statement_MUL            shift and go to state 210
    inner_statement                shift and go to state 212
    function_declaration_statement shift and go to state 6
    statement                      shift and go to state 7
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 173

    (119) fds_parameter -> LPAREN parameter_list . RPAREN

    RPAREN          shift and go to state 213


state 174

    (120) fds_parameter -> LPAREN RPAREN .

    LKEY            reduce using rule 120 (fds_parameter -> LPAREN RPAREN .)


state 175

    (121) parameter_list -> parameter . parameter_list_colon_parameter
    (122) parameter_list -> parameter .
    (152) parameter_list_colon_parameter -> . COLON parameter parameter_list_colon_parameter
    (153) parameter_list_colon_parameter -> . COLON parameter

    RPAREN          reduce using rule 122 (parameter_list -> parameter .)
    COLON           shift and go to state 215

    parameter_list_colon_parameter shift and go to state 214

state 176

    (123) parameter -> VARIABLE .
    (125) parameter -> VARIABLE . ASSIGN static_scalar

    COLON           reduce using rule 123 (parameter -> VARIABLE .)
    RPAREN          reduce using rule 123 (parameter -> VARIABLE .)
    ASSIGN          shift and go to state 216


state 177

    (124) parameter -> parameter_prefix . VARIABLE
    (126) parameter -> parameter_prefix . VARIABLE ASSIGN static_scalar

    VARIABLE        shift and go to state 217


state 178

    (127) parameter_prefix -> parameter_type . AMPERSAND
    (129) parameter_prefix -> parameter_type .

    AMPERSAND       shift and go to state 218
    VARIABLE        reduce using rule 129 (parameter_prefix -> parameter_type .)


state 179

    (128) parameter_prefix -> AMPERSAND .

    VARIABLE        reduce using rule 128 (parameter_prefix -> AMPERSAND .)


state 180

    (130) parameter_type -> INT_TYPE .

    AMPERSAND       reduce using rule 130 (parameter_type -> INT_TYPE .)
    VARIABLE        reduce using rule 130 (parameter_type -> INT_TYPE .)


state 181

    (131) parameter_type -> STRING_TYPE .

    AMPERSAND       reduce using rule 131 (parameter_type -> STRING_TYPE .)
    VARIABLE        reduce using rule 131 (parameter_type -> STRING_TYPE .)


state 182

    (132) parameter_type -> FLOAT_TYPE .

    AMPERSAND       reduce using rule 132 (parameter_type -> FLOAT_TYPE .)
    VARIABLE        reduce using rule 132 (parameter_type -> FLOAT_TYPE .)


state 183

    (133) parameter_type -> ARRAY_TYPE .

    AMPERSAND       reduce using rule 133 (parameter_type -> ARRAY_TYPE .)
    VARIABLE        reduce using rule 133 (parameter_type -> ARRAY_TYPE .)


state 184

    (134) parameter_type -> BOOL_TYPE .

    AMPERSAND       reduce using rule 134 (parameter_type -> BOOL_TYPE .)
    VARIABLE        reduce using rule 134 (parameter_type -> BOOL_TYPE .)


state 185

    (33) expr -> expr INTE_DOT expr DDOT . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 219
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 186

    (31) expr -> LPAREN typecast_operator RPAREN expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    PLUS            reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    MINUS           reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    DIVIDE          reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    PERCENT         reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    TIMES           reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    EQUALS          reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    NOT_EQUAL       reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    GREAT_THAN      reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    GREAT_EQUAL     reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    LESS_THAN       reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    LESS_EQUAL      reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    AND             reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    OR              reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    INTE_DOT        reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    RPAREN          reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    DDOT            reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    ATTR_ASSOC      reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    COLON           reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    AS              reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)
    RBRACKET        reduce using rule 31 (expr -> LPAREN typecast_operator RPAREN expr .)

  ! PLUS            [ shift and go to state 53 ]
  ! MINUS           [ shift and go to state 54 ]
  ! DIVIDE          [ shift and go to state 55 ]
  ! PERCENT         [ shift and go to state 56 ]
  ! TIMES           [ shift and go to state 57 ]
  ! EQUALS          [ shift and go to state 58 ]
  ! NOT_EQUAL       [ shift and go to state 59 ]
  ! GREAT_THAN      [ shift and go to state 60 ]
  ! GREAT_EQUAL     [ shift and go to state 61 ]
  ! LESS_THAN       [ shift and go to state 62 ]
  ! LESS_EQUAL      [ shift and go to state 63 ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 65 ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 187

    (56) array_declaration -> LPAREN array_pair_list RPAREN .

    SEMICOLON       reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    PLUS            reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    MINUS           reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    DIVIDE          reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    PERCENT         reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    TIMES           reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    EQUALS          reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    NOT_EQUAL       reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    GREAT_THAN      reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    GREAT_EQUAL     reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    LESS_THAN       reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    LESS_EQUAL      reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    AND             reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    OR              reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    INTE_DOT        reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    RPAREN          reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    DDOT            reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    ATTR_ASSOC      reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    COLON           reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    AS              reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)
    RBRACKET        reduce using rule 56 (array_declaration -> LPAREN array_pair_list RPAREN .)


state 188

    (141) array_pair_list -> array_pair array_pair_list_ARR_PAIR .

    RPAREN          reduce using rule 141 (array_pair_list -> array_pair array_pair_list_ARR_PAIR .)


state 189

    (156) array_pair_list_ARR_PAIR -> COLON . array_pair array_pair_list_ARR_PAIR
    (157) array_pair_list_ARR_PAIR -> COLON . array_pair
    (143) array_pair -> . expr
    (144) array_pair -> . AMPERSAND variable
    (145) array_pair -> . expr ATTR_ASSOC expr
    (146) array_pair -> . expr ATTR_ASSOC AMPERSAND variable
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    AMPERSAND       shift and go to state 143
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    array_pair                     shift and go to state 220
    expr                           shift and go to state 142
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 190

    (145) array_pair -> expr ATTR_ASSOC . expr
    (146) array_pair -> expr ATTR_ASSOC . AMPERSAND variable
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    AMPERSAND       shift and go to state 222
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 221
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 191

    (144) array_pair -> AMPERSAND variable .

    COLON           reduce using rule 144 (array_pair -> AMPERSAND variable .)
    RPAREN          reduce using rule 144 (array_pair -> AMPERSAND variable .)


state 192

    (95) expr_parentheses -> LPAREN expr RPAREN .

    LKEY            reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    MINUS           reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    EXC_DOT         reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    INCREMENT       reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    DECREMENT       reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    LPAREN          reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    ARRAY_TYPE      reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    NUMBER_INTEGER  reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    NUMBER_REAL     reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    CONSTANT_ENCAPSED_STRING reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    TRUE            reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    FALSE           reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    WHILE           reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    IF              reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    DO              reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    FOR             reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    FOREACH         reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    BREAK           reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    CONTINUE        reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    RETURN          reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    EXIT            reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    DIE             reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    GLOBAL          reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    VARIABLE        reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    ID              reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)
    SEMICOLON       reduce using rule 95 (expr_parentheses -> LPAREN expr RPAREN .)


state 193

    (74) do_statement -> DO statement_block_optional WHILE expr_parentheses . SEMICOLON

    SEMICOLON       shift and go to state 223


state 194

    (150) statement_block_optional -> LKEY statement_MUL RKEY .

    WHILE           reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    FUNCTION        reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    MINUS           reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    EXC_DOT         reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    INCREMENT       reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    DECREMENT       reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    LPAREN          reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    ARRAY_TYPE      reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    NUMBER_INTEGER  reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    NUMBER_REAL     reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    CONSTANT_ENCAPSED_STRING reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    TRUE            reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    FALSE           reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    IF              reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    DO              reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    FOR             reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    FOREACH         reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    BREAK           reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    CONTINUE        reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    RETURN          reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    EXIT            reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    DIE             reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    GLOBAL          reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    VARIABLE        reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    ID              reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    END_PROGRAM     reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)
    RKEY            reduce using rule 150 (statement_block_optional -> LKEY statement_MUL RKEY .)


state 195

    (147) statement_MUL -> statement statement_MUL .

    RKEY            reduce using rule 147 (statement_MUL -> statement statement_MUL .)


state 196

    (81) for_statement -> FOR LPAREN for_parameters RPAREN . statement_block_optional
    (149) statement_block_optional -> . statement
    (150) statement_block_optional -> . LKEY statement_MUL RKEY
    (151) statement_block_optional -> . LKEY RKEY
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    LKEY            shift and go to state 96
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    statement_block_optional       shift and go to state 224
    statement                      shift and go to state 95
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 197

    (82) for_parameters -> SEMICOLON SEMICOLON .
    (88) for_parameters -> SEMICOLON SEMICOLON . for_expr_OPT
    (98) for_expr_OPT -> . expr for_expr_COLON_EXPR
    (99) for_expr_OPT -> . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RPAREN          reduce using rule 82 (for_parameters -> SEMICOLON SEMICOLON .)
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    for_expr_OPT                   shift and go to state 225
    expr                           shift and go to state 154
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 198

    (86) for_parameters -> SEMICOLON for_expr_OPT . SEMICOLON
    (87) for_parameters -> SEMICOLON for_expr_OPT . SEMICOLON for_expr_OPT

    SEMICOLON       shift and go to state 226


state 199

    (83) for_parameters -> for_expr_OPT SEMICOLON . SEMICOLON
    (84) for_parameters -> for_expr_OPT SEMICOLON . for_expr_OPT SEMICOLON
    (85) for_parameters -> for_expr_OPT SEMICOLON . SEMICOLON for_expr_OPT
    (89) for_parameters -> for_expr_OPT SEMICOLON . for_expr_OPT SEMICOLON for_expr_OPT
    (98) for_expr_OPT -> . expr for_expr_COLON_EXPR
    (99) for_expr_OPT -> . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    SEMICOLON       shift and go to state 228
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    for_expr_OPT                   shift and go to state 227
    expr                           shift and go to state 154
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 200

    (98) for_expr_OPT -> expr for_expr_COLON_EXPR .

    SEMICOLON       reduce using rule 98 (for_expr_OPT -> expr for_expr_COLON_EXPR .)
    RPAREN          reduce using rule 98 (for_expr_OPT -> expr for_expr_COLON_EXPR .)


state 201

    (100) for_expr_COLON_EXPR -> COLON . expr for_expr_COLON_EXPR
    (101) for_expr_COLON_EXPR -> COLON . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 229
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 202

    (96) foreach_statement -> FOREACH LPAREN expr AS . ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> FOREACH LPAREN expr AS . ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (93) ampersand_variable -> . AMPERSAND VARIABLE
    (94) ampersand_variable -> . VARIABLE

    AMPERSAND       shift and go to state 231
    VARIABLE        shift and go to state 232

    ampersand_variable             shift and go to state 230

state 203

    (54) exit_expr -> LPAREN expr RPAREN .

    SEMICOLON       reduce using rule 54 (exit_expr -> LPAREN expr RPAREN .)


state 204

    (91) statement_COLON_GLOBAL -> COLON global_var . statement_COLON_GLOBAL
    (92) statement_COLON_GLOBAL -> COLON global_var .
    (91) statement_COLON_GLOBAL -> . COLON global_var statement_COLON_GLOBAL
    (92) statement_COLON_GLOBAL -> . COLON global_var

    SEMICOLON       reduce using rule 92 (statement_COLON_GLOBAL -> COLON global_var .)
    COLON           shift and go to state 162

    statement_COLON_GLOBAL         shift and go to state 233

state 205

    (112) selector -> LBRACKET expr RBRACKET .

    LBRACKET        reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    INCREMENT       reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    DECREMENT       reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    ADD_ASSIGN      reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    SUB_ASSIGN      reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    MOD_ASSIGN      reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    TIMES_ASSIGN    reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    DIVIDE_ASSIGN   reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    ASSIGN          reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    SEMICOLON       reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    PLUS            reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    MINUS           reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    DIVIDE          reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    PERCENT         reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    TIMES           reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    EQUALS          reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    NOT_EQUAL       reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    GREAT_THAN      reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    GREAT_EQUAL     reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    LESS_THAN       reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    LESS_EQUAL      reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    AND             reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    OR              reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    INTE_DOT        reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    RPAREN          reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    DDOT            reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    ATTR_ASSOC      reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    COLON           reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    AS              reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)
    RBRACKET        reduce using rule 112 (selector -> LBRACKET expr RBRACKET .)


state 206

    (102) function_call -> ID LPAREN function_call_parameter_list RPAREN .

    SEMICOLON       reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    PLUS            reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    MINUS           reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    DIVIDE          reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    PERCENT         reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    TIMES           reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    EQUALS          reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    NOT_EQUAL       reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    GREAT_THAN      reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    GREAT_EQUAL     reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    LESS_THAN       reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    LESS_EQUAL      reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    AND             reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    OR              reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    INTE_DOT        reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    RPAREN          reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    DDOT            reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    ATTR_ASSOC      reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    COLON           reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    AS              reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)
    RBRACKET        reduce using rule 102 (function_call -> ID LPAREN function_call_parameter_list RPAREN .)


state 207

    (104) function_call_parameter_list -> function_call_parameter fc_parameter_list_COLON_PARAMETER .

    RPAREN          reduce using rule 104 (function_call_parameter_list -> function_call_parameter fc_parameter_list_COLON_PARAMETER .)


state 208

    (106) fc_parameter_list_COLON_PARAMETER -> COLON . function_call_parameter fc_parameter_list_COLON_PARAMETER
    (107) fc_parameter_list_COLON_PARAMETER -> COLON . function_call_parameter
    (108) function_call_parameter -> . expr
    (109) function_call_parameter -> . AMPERSAND VARIABLE
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    AMPERSAND       shift and go to state 170
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    function_call_parameter        shift and go to state 234
    expr                           shift and go to state 169
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 209

    (109) function_call_parameter -> AMPERSAND VARIABLE .

    COLON           reduce using rule 109 (function_call_parameter -> AMPERSAND VARIABLE .)
    RPAREN          reduce using rule 109 (function_call_parameter -> AMPERSAND VARIABLE .)


state 210

    (115) fds_statements -> LKEY inner_statement_MUL . RKEY

    RKEY            shift and go to state 235


state 211

    (116) fds_statements -> LKEY RKEY .

    FUNCTION        reduce using rule 116 (fds_statements -> LKEY RKEY .)
    MINUS           reduce using rule 116 (fds_statements -> LKEY RKEY .)
    EXC_DOT         reduce using rule 116 (fds_statements -> LKEY RKEY .)
    INCREMENT       reduce using rule 116 (fds_statements -> LKEY RKEY .)
    DECREMENT       reduce using rule 116 (fds_statements -> LKEY RKEY .)
    LPAREN          reduce using rule 116 (fds_statements -> LKEY RKEY .)
    ARRAY_TYPE      reduce using rule 116 (fds_statements -> LKEY RKEY .)
    NUMBER_INTEGER  reduce using rule 116 (fds_statements -> LKEY RKEY .)
    NUMBER_REAL     reduce using rule 116 (fds_statements -> LKEY RKEY .)
    CONSTANT_ENCAPSED_STRING reduce using rule 116 (fds_statements -> LKEY RKEY .)
    TRUE            reduce using rule 116 (fds_statements -> LKEY RKEY .)
    FALSE           reduce using rule 116 (fds_statements -> LKEY RKEY .)
    WHILE           reduce using rule 116 (fds_statements -> LKEY RKEY .)
    IF              reduce using rule 116 (fds_statements -> LKEY RKEY .)
    DO              reduce using rule 116 (fds_statements -> LKEY RKEY .)
    FOR             reduce using rule 116 (fds_statements -> LKEY RKEY .)
    FOREACH         reduce using rule 116 (fds_statements -> LKEY RKEY .)
    BREAK           reduce using rule 116 (fds_statements -> LKEY RKEY .)
    CONTINUE        reduce using rule 116 (fds_statements -> LKEY RKEY .)
    RETURN          reduce using rule 116 (fds_statements -> LKEY RKEY .)
    EXIT            reduce using rule 116 (fds_statements -> LKEY RKEY .)
    DIE             reduce using rule 116 (fds_statements -> LKEY RKEY .)
    GLOBAL          reduce using rule 116 (fds_statements -> LKEY RKEY .)
    VARIABLE        reduce using rule 116 (fds_statements -> LKEY RKEY .)
    ID              reduce using rule 116 (fds_statements -> LKEY RKEY .)
    END_PROGRAM     reduce using rule 116 (fds_statements -> LKEY RKEY .)
    RKEY            reduce using rule 116 (fds_statements -> LKEY RKEY .)


state 212

    (7) inner_statement_MUL -> inner_statement . inner_statement_MUL
    (8) inner_statement_MUL -> inner_statement .
    (7) inner_statement_MUL -> . inner_statement inner_statement_MUL
    (8) inner_statement_MUL -> . inner_statement
    (5) inner_statement -> . function_declaration_statement
    (6) inner_statement -> . statement
    (114) function_declaration_statement -> . FUNCTION fds_id fds_parameter fds_statements
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RKEY            reduce using rule 8 (inner_statement_MUL -> inner_statement .)
    FUNCTION        shift and go to state 8
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    inner_statement                shift and go to state 212
    inner_statement_MUL            shift and go to state 236
    function_declaration_statement shift and go to state 6
    statement                      shift and go to state 7
    expr                           shift and go to state 9
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 213

    (119) fds_parameter -> LPAREN parameter_list RPAREN .

    LKEY            reduce using rule 119 (fds_parameter -> LPAREN parameter_list RPAREN .)


state 214

    (121) parameter_list -> parameter parameter_list_colon_parameter .

    RPAREN          reduce using rule 121 (parameter_list -> parameter parameter_list_colon_parameter .)


state 215

    (152) parameter_list_colon_parameter -> COLON . parameter parameter_list_colon_parameter
    (153) parameter_list_colon_parameter -> COLON . parameter
    (123) parameter -> . VARIABLE
    (124) parameter -> . parameter_prefix VARIABLE
    (125) parameter -> . VARIABLE ASSIGN static_scalar
    (126) parameter -> . parameter_prefix VARIABLE ASSIGN static_scalar
    (127) parameter_prefix -> . parameter_type AMPERSAND
    (128) parameter_prefix -> . AMPERSAND
    (129) parameter_prefix -> . parameter_type
    (130) parameter_type -> . INT_TYPE
    (131) parameter_type -> . STRING_TYPE
    (132) parameter_type -> . FLOAT_TYPE
    (133) parameter_type -> . ARRAY_TYPE
    (134) parameter_type -> . BOOL_TYPE

    VARIABLE        shift and go to state 176
    AMPERSAND       shift and go to state 179
    INT_TYPE        shift and go to state 180
    STRING_TYPE     shift and go to state 181
    FLOAT_TYPE      shift and go to state 182
    ARRAY_TYPE      shift and go to state 183
    BOOL_TYPE       shift and go to state 184

    parameter                      shift and go to state 237
    parameter_prefix               shift and go to state 177
    parameter_type                 shift and go to state 178

state 216

    (125) parameter -> VARIABLE ASSIGN . static_scalar
    (135) static_scalar -> . common_scalar
    (136) static_scalar -> . PLUS static_scalar
    (137) static_scalar -> . MINUS static_scalar
    (138) common_scalar -> . NUMBER_REAL
    (139) common_scalar -> . NUMBER_INTEGER
    (140) common_scalar -> . CONSTANT_ENCAPSED_STRING

    PLUS            shift and go to state 240
    MINUS           shift and go to state 241
    NUMBER_REAL     shift and go to state 242
    NUMBER_INTEGER  shift and go to state 243
    CONSTANT_ENCAPSED_STRING shift and go to state 244

    static_scalar                  shift and go to state 238
    common_scalar                  shift and go to state 239

state 217

    (124) parameter -> parameter_prefix VARIABLE .
    (126) parameter -> parameter_prefix VARIABLE . ASSIGN static_scalar

    COLON           reduce using rule 124 (parameter -> parameter_prefix VARIABLE .)
    RPAREN          reduce using rule 124 (parameter -> parameter_prefix VARIABLE .)
    ASSIGN          shift and go to state 245


state 218

    (127) parameter_prefix -> parameter_type AMPERSAND .

    VARIABLE        reduce using rule 127 (parameter_prefix -> parameter_type AMPERSAND .)


state 219

    (33) expr -> expr INTE_DOT expr DDOT expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    SEMICOLON       reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .)
    INTE_DOT        reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .)
    RPAREN          reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .)
    DDOT            reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .)
    ATTR_ASSOC      reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .)
    COLON           reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .)
    AS              reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .)
    RBRACKET        reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65

  ! PLUS            [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! MINUS           [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! DIVIDE          [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! PERCENT         [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! TIMES           [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! EQUALS          [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! NOT_EQUAL       [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! GREAT_THAN      [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! GREAT_EQUAL     [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! LESS_THAN       [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! LESS_EQUAL      [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! AND             [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! OR              [ reduce using rule 33 (expr -> expr INTE_DOT expr DDOT expr .) ]
  ! INTE_DOT        [ shift and go to state 66 ]


state 220

    (156) array_pair_list_ARR_PAIR -> COLON array_pair . array_pair_list_ARR_PAIR
    (157) array_pair_list_ARR_PAIR -> COLON array_pair .
    (156) array_pair_list_ARR_PAIR -> . COLON array_pair array_pair_list_ARR_PAIR
    (157) array_pair_list_ARR_PAIR -> . COLON array_pair

    RPAREN          reduce using rule 157 (array_pair_list_ARR_PAIR -> COLON array_pair .)
    COLON           shift and go to state 189

    array_pair_list_ARR_PAIR       shift and go to state 246

state 221

    (145) array_pair -> expr ATTR_ASSOC expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr

    COLON           reduce using rule 145 (array_pair -> expr ATTR_ASSOC expr .)
    RPAREN          reduce using rule 145 (array_pair -> expr ATTR_ASSOC expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66


state 222

    (146) array_pair -> expr ATTR_ASSOC AMPERSAND . variable
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE

    VARIABLE        shift and go to state 45

    variable                       shift and go to state 247

state 223

    (74) do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .

    FUNCTION        reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    MINUS           reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    EXC_DOT         reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    INCREMENT       reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    DECREMENT       reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    LPAREN          reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    ARRAY_TYPE      reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    NUMBER_INTEGER  reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    NUMBER_REAL     reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    CONSTANT_ENCAPSED_STRING reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    TRUE            reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    FALSE           reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    WHILE           reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    IF              reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    DO              reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    FOR             reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    FOREACH         reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    BREAK           reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    CONTINUE        reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    RETURN          reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    EXIT            reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    DIE             reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    GLOBAL          reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    VARIABLE        reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    ID              reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    END_PROGRAM     reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)
    RKEY            reduce using rule 74 (do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON .)


state 224

    (81) for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .

    FUNCTION        reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    MINUS           reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    EXC_DOT         reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    INCREMENT       reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    DECREMENT       reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    LPAREN          reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    ARRAY_TYPE      reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    NUMBER_INTEGER  reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    NUMBER_REAL     reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    CONSTANT_ENCAPSED_STRING reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    TRUE            reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    FALSE           reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    WHILE           reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    IF              reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    DO              reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    FOR             reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    FOREACH         reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    BREAK           reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    CONTINUE        reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    RETURN          reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    EXIT            reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    DIE             reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    GLOBAL          reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    VARIABLE        reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    ID              reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    END_PROGRAM     reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)
    RKEY            reduce using rule 81 (for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional .)


state 225

    (88) for_parameters -> SEMICOLON SEMICOLON for_expr_OPT .

    RPAREN          reduce using rule 88 (for_parameters -> SEMICOLON SEMICOLON for_expr_OPT .)


state 226

    (86) for_parameters -> SEMICOLON for_expr_OPT SEMICOLON .
    (87) for_parameters -> SEMICOLON for_expr_OPT SEMICOLON . for_expr_OPT
    (98) for_expr_OPT -> . expr for_expr_COLON_EXPR
    (99) for_expr_OPT -> . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RPAREN          reduce using rule 86 (for_parameters -> SEMICOLON for_expr_OPT SEMICOLON .)
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    for_expr_OPT                   shift and go to state 248
    expr                           shift and go to state 154
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 227

    (84) for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT . SEMICOLON
    (89) for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT . SEMICOLON for_expr_OPT

    SEMICOLON       shift and go to state 249


state 228

    (83) for_parameters -> for_expr_OPT SEMICOLON SEMICOLON .
    (85) for_parameters -> for_expr_OPT SEMICOLON SEMICOLON . for_expr_OPT
    (98) for_expr_OPT -> . expr for_expr_COLON_EXPR
    (99) for_expr_OPT -> . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RPAREN          reduce using rule 83 (for_parameters -> for_expr_OPT SEMICOLON SEMICOLON .)
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    for_expr_OPT                   shift and go to state 250
    expr                           shift and go to state 154
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 229

    (100) for_expr_COLON_EXPR -> COLON expr . for_expr_COLON_EXPR
    (101) for_expr_COLON_EXPR -> COLON expr .
    (9) expr -> expr . PLUS expr
    (10) expr -> expr . MINUS expr
    (12) expr -> expr . DIVIDE expr
    (13) expr -> expr . PERCENT expr
    (14) expr -> expr . TIMES expr
    (15) expr -> expr . EQUALS expr
    (16) expr -> expr . NOT_EQUAL expr
    (17) expr -> expr . GREAT_THAN expr
    (18) expr -> expr . GREAT_EQUAL expr
    (19) expr -> expr . LESS_THAN expr
    (20) expr -> expr . LESS_EQUAL expr
    (21) expr -> expr . AND expr
    (22) expr -> expr . OR expr
    (33) expr -> expr . INTE_DOT expr DDOT expr
    (100) for_expr_COLON_EXPR -> . COLON expr for_expr_COLON_EXPR
    (101) for_expr_COLON_EXPR -> . COLON expr

    SEMICOLON       reduce using rule 101 (for_expr_COLON_EXPR -> COLON expr .)
    RPAREN          reduce using rule 101 (for_expr_COLON_EXPR -> COLON expr .)
    PLUS            shift and go to state 53
    MINUS           shift and go to state 54
    DIVIDE          shift and go to state 55
    PERCENT         shift and go to state 56
    TIMES           shift and go to state 57
    EQUALS          shift and go to state 58
    NOT_EQUAL       shift and go to state 59
    GREAT_THAN      shift and go to state 60
    GREAT_EQUAL     shift and go to state 61
    LESS_THAN       shift and go to state 62
    LESS_EQUAL      shift and go to state 63
    AND             shift and go to state 64
    OR              shift and go to state 65
    INTE_DOT        shift and go to state 66
    COLON           shift and go to state 201

    for_expr_COLON_EXPR            shift and go to state 251

state 230

    (96) foreach_statement -> FOREACH LPAREN expr AS ampersand_variable . RPAREN statement_block_optional
    (97) foreach_statement -> FOREACH LPAREN expr AS ampersand_variable . ATTR_ASSOC ampersand_variable RPAREN statement_block_optional

    RPAREN          shift and go to state 252
    ATTR_ASSOC      shift and go to state 253


state 231

    (93) ampersand_variable -> AMPERSAND . VARIABLE

    VARIABLE        shift and go to state 254


state 232

    (94) ampersand_variable -> VARIABLE .

    RPAREN          reduce using rule 94 (ampersand_variable -> VARIABLE .)
    ATTR_ASSOC      reduce using rule 94 (ampersand_variable -> VARIABLE .)


state 233

    (91) statement_COLON_GLOBAL -> COLON global_var statement_COLON_GLOBAL .

    SEMICOLON       reduce using rule 91 (statement_COLON_GLOBAL -> COLON global_var statement_COLON_GLOBAL .)


state 234

    (106) fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter . fc_parameter_list_COLON_PARAMETER
    (107) fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter .
    (106) fc_parameter_list_COLON_PARAMETER -> . COLON function_call_parameter fc_parameter_list_COLON_PARAMETER
    (107) fc_parameter_list_COLON_PARAMETER -> . COLON function_call_parameter

    RPAREN          reduce using rule 107 (fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter .)
    COLON           shift and go to state 208

    fc_parameter_list_COLON_PARAMETER shift and go to state 255

state 235

    (115) fds_statements -> LKEY inner_statement_MUL RKEY .

    FUNCTION        reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    MINUS           reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    EXC_DOT         reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    INCREMENT       reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    DECREMENT       reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    LPAREN          reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    ARRAY_TYPE      reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    NUMBER_INTEGER  reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    NUMBER_REAL     reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    CONSTANT_ENCAPSED_STRING reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    TRUE            reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    FALSE           reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    WHILE           reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    IF              reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    DO              reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    FOR             reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    FOREACH         reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    BREAK           reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    CONTINUE        reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    RETURN          reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    EXIT            reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    DIE             reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    GLOBAL          reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    VARIABLE        reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    ID              reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    END_PROGRAM     reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)
    RKEY            reduce using rule 115 (fds_statements -> LKEY inner_statement_MUL RKEY .)


state 236

    (7) inner_statement_MUL -> inner_statement inner_statement_MUL .

    RKEY            reduce using rule 7 (inner_statement_MUL -> inner_statement inner_statement_MUL .)


state 237

    (152) parameter_list_colon_parameter -> COLON parameter . parameter_list_colon_parameter
    (153) parameter_list_colon_parameter -> COLON parameter .
    (152) parameter_list_colon_parameter -> . COLON parameter parameter_list_colon_parameter
    (153) parameter_list_colon_parameter -> . COLON parameter

    RPAREN          reduce using rule 153 (parameter_list_colon_parameter -> COLON parameter .)
    COLON           shift and go to state 215

    parameter_list_colon_parameter shift and go to state 256

state 238

    (125) parameter -> VARIABLE ASSIGN static_scalar .

    COLON           reduce using rule 125 (parameter -> VARIABLE ASSIGN static_scalar .)
    RPAREN          reduce using rule 125 (parameter -> VARIABLE ASSIGN static_scalar .)


state 239

    (135) static_scalar -> common_scalar .

    COLON           reduce using rule 135 (static_scalar -> common_scalar .)
    RPAREN          reduce using rule 135 (static_scalar -> common_scalar .)


state 240

    (136) static_scalar -> PLUS . static_scalar
    (135) static_scalar -> . common_scalar
    (136) static_scalar -> . PLUS static_scalar
    (137) static_scalar -> . MINUS static_scalar
    (138) common_scalar -> . NUMBER_REAL
    (139) common_scalar -> . NUMBER_INTEGER
    (140) common_scalar -> . CONSTANT_ENCAPSED_STRING

    PLUS            shift and go to state 240
    MINUS           shift and go to state 241
    NUMBER_REAL     shift and go to state 242
    NUMBER_INTEGER  shift and go to state 243
    CONSTANT_ENCAPSED_STRING shift and go to state 244

    static_scalar                  shift and go to state 257
    common_scalar                  shift and go to state 239

state 241

    (137) static_scalar -> MINUS . static_scalar
    (135) static_scalar -> . common_scalar
    (136) static_scalar -> . PLUS static_scalar
    (137) static_scalar -> . MINUS static_scalar
    (138) common_scalar -> . NUMBER_REAL
    (139) common_scalar -> . NUMBER_INTEGER
    (140) common_scalar -> . CONSTANT_ENCAPSED_STRING

    PLUS            shift and go to state 240
    MINUS           shift and go to state 241
    NUMBER_REAL     shift and go to state 242
    NUMBER_INTEGER  shift and go to state 243
    CONSTANT_ENCAPSED_STRING shift and go to state 244

    static_scalar                  shift and go to state 258
    common_scalar                  shift and go to state 239

state 242

    (138) common_scalar -> NUMBER_REAL .

    COLON           reduce using rule 138 (common_scalar -> NUMBER_REAL .)
    RPAREN          reduce using rule 138 (common_scalar -> NUMBER_REAL .)


state 243

    (139) common_scalar -> NUMBER_INTEGER .

    COLON           reduce using rule 139 (common_scalar -> NUMBER_INTEGER .)
    RPAREN          reduce using rule 139 (common_scalar -> NUMBER_INTEGER .)


state 244

    (140) common_scalar -> CONSTANT_ENCAPSED_STRING .

    COLON           reduce using rule 140 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    RPAREN          reduce using rule 140 (common_scalar -> CONSTANT_ENCAPSED_STRING .)


state 245

    (126) parameter -> parameter_prefix VARIABLE ASSIGN . static_scalar
    (135) static_scalar -> . common_scalar
    (136) static_scalar -> . PLUS static_scalar
    (137) static_scalar -> . MINUS static_scalar
    (138) common_scalar -> . NUMBER_REAL
    (139) common_scalar -> . NUMBER_INTEGER
    (140) common_scalar -> . CONSTANT_ENCAPSED_STRING

    PLUS            shift and go to state 240
    MINUS           shift and go to state 241
    NUMBER_REAL     shift and go to state 242
    NUMBER_INTEGER  shift and go to state 243
    CONSTANT_ENCAPSED_STRING shift and go to state 244

    static_scalar                  shift and go to state 259
    common_scalar                  shift and go to state 239

state 246

    (156) array_pair_list_ARR_PAIR -> COLON array_pair array_pair_list_ARR_PAIR .

    RPAREN          reduce using rule 156 (array_pair_list_ARR_PAIR -> COLON array_pair array_pair_list_ARR_PAIR .)


state 247

    (146) array_pair -> expr ATTR_ASSOC AMPERSAND variable .

    COLON           reduce using rule 146 (array_pair -> expr ATTR_ASSOC AMPERSAND variable .)
    RPAREN          reduce using rule 146 (array_pair -> expr ATTR_ASSOC AMPERSAND variable .)


state 248

    (87) for_parameters -> SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT .

    RPAREN          reduce using rule 87 (for_parameters -> SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT .)


state 249

    (84) for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON .
    (89) for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON . for_expr_OPT
    (98) for_expr_OPT -> . expr for_expr_COLON_EXPR
    (99) for_expr_OPT -> . expr
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    RPAREN          reduce using rule 84 (for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON .)
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    for_expr_OPT                   shift and go to state 260
    expr                           shift and go to state 154
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 250

    (85) for_parameters -> for_expr_OPT SEMICOLON SEMICOLON for_expr_OPT .

    RPAREN          reduce using rule 85 (for_parameters -> for_expr_OPT SEMICOLON SEMICOLON for_expr_OPT .)


state 251

    (100) for_expr_COLON_EXPR -> COLON expr for_expr_COLON_EXPR .

    SEMICOLON       reduce using rule 100 (for_expr_COLON_EXPR -> COLON expr for_expr_COLON_EXPR .)
    RPAREN          reduce using rule 100 (for_expr_COLON_EXPR -> COLON expr for_expr_COLON_EXPR .)


state 252

    (96) foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN . statement_block_optional
    (149) statement_block_optional -> . statement
    (150) statement_block_optional -> . LKEY statement_MUL RKEY
    (151) statement_block_optional -> . LKEY RKEY
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    LKEY            shift and go to state 96
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 9
    statement_block_optional       shift and go to state 261
    statement                      shift and go to state 95
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 253

    (97) foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC . ampersand_variable RPAREN statement_block_optional
    (93) ampersand_variable -> . AMPERSAND VARIABLE
    (94) ampersand_variable -> . VARIABLE

    AMPERSAND       shift and go to state 231
    VARIABLE        shift and go to state 232

    ampersand_variable             shift and go to state 262

state 254

    (93) ampersand_variable -> AMPERSAND VARIABLE .

    RPAREN          reduce using rule 93 (ampersand_variable -> AMPERSAND VARIABLE .)
    ATTR_ASSOC      reduce using rule 93 (ampersand_variable -> AMPERSAND VARIABLE .)


state 255

    (106) fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter fc_parameter_list_COLON_PARAMETER .

    RPAREN          reduce using rule 106 (fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter fc_parameter_list_COLON_PARAMETER .)


state 256

    (152) parameter_list_colon_parameter -> COLON parameter parameter_list_colon_parameter .

    RPAREN          reduce using rule 152 (parameter_list_colon_parameter -> COLON parameter parameter_list_colon_parameter .)


state 257

    (136) static_scalar -> PLUS static_scalar .

    COLON           reduce using rule 136 (static_scalar -> PLUS static_scalar .)
    RPAREN          reduce using rule 136 (static_scalar -> PLUS static_scalar .)


state 258

    (137) static_scalar -> MINUS static_scalar .

    COLON           reduce using rule 137 (static_scalar -> MINUS static_scalar .)
    RPAREN          reduce using rule 137 (static_scalar -> MINUS static_scalar .)


state 259

    (126) parameter -> parameter_prefix VARIABLE ASSIGN static_scalar .

    COLON           reduce using rule 126 (parameter -> parameter_prefix VARIABLE ASSIGN static_scalar .)
    RPAREN          reduce using rule 126 (parameter -> parameter_prefix VARIABLE ASSIGN static_scalar .)


state 260

    (89) for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT .

    RPAREN          reduce using rule 89 (for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT .)


state 261

    (96) foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .

    FUNCTION        reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    MINUS           reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    EXC_DOT         reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    INCREMENT       reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    DECREMENT       reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    LPAREN          reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    ARRAY_TYPE      reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    NUMBER_INTEGER  reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    NUMBER_REAL     reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    CONSTANT_ENCAPSED_STRING reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    TRUE            reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    FALSE           reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    WHILE           reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    IF              reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    DO              reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    FOR             reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    FOREACH         reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    BREAK           reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    CONTINUE        reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    RETURN          reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    EXIT            reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    DIE             reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    GLOBAL          reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    VARIABLE        reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    ID              reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    END_PROGRAM     reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)
    RKEY            reduce using rule 96 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional .)


state 262

    (97) foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable . RPAREN statement_block_optional

    RPAREN          shift and go to state 263


state 263

    (97) foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN . statement_block_optional
    (149) statement_block_optional -> . statement
    (150) statement_block_optional -> . LKEY statement_MUL RKEY
    (151) statement_block_optional -> . LKEY RKEY
    (58) statement -> . expr SEMICOLON
    (59) statement -> . while_statement
    (60) statement -> . if_statement
    (61) statement -> . do_statement
    (62) statement -> . for_statement
    (63) statement -> . foreach_statement
    (64) statement -> . break_statement
    (65) statement -> . continue_statement
    (66) statement -> . return_statement
    (67) statement -> . exit_statement SEMICOLON
    (68) statement -> . die_statement SEMICOLON
    (69) statement -> . global_statement SEMICOLON
    (9) expr -> . expr PLUS expr
    (10) expr -> . expr MINUS expr
    (11) expr -> . MINUS expr
    (12) expr -> . expr DIVIDE expr
    (13) expr -> . expr PERCENT expr
    (14) expr -> . expr TIMES expr
    (15) expr -> . expr EQUALS expr
    (16) expr -> . expr NOT_EQUAL expr
    (17) expr -> . expr GREAT_THAN expr
    (18) expr -> . expr GREAT_EQUAL expr
    (19) expr -> . expr LESS_THAN expr
    (20) expr -> . expr LESS_EQUAL expr
    (21) expr -> . expr AND expr
    (22) expr -> . expr OR expr
    (23) expr -> . EXC_DOT expr
    (24) expr -> . INCREMENT variable
    (25) expr -> . variable INCREMENT
    (26) expr -> . DECREMENT variable
    (27) expr -> . variable DECREMENT
    (28) expr -> . variable
    (29) expr -> . LPAREN expr RPAREN
    (30) expr -> . ARRAY_TYPE array_declaration
    (31) expr -> . LPAREN typecast_operator RPAREN expr
    (32) expr -> . function_call
    (33) expr -> . expr INTE_DOT expr DDOT expr
    (34) expr -> . variable ADD_ASSIGN expr
    (35) expr -> . variable SUB_ASSIGN expr
    (36) expr -> . variable MOD_ASSIGN expr
    (37) expr -> . variable TIMES_ASSIGN expr
    (38) expr -> . variable DIVIDE_ASSIGN expr
    (39) expr -> . variable ASSIGN expr
    (40) expr -> . NUMBER_INTEGER
    (41) expr -> . NUMBER_REAL
    (42) expr -> . CONSTANT_ENCAPSED_STRING
    (43) expr -> . TRUE
    (44) expr -> . FALSE
    (73) while_statement -> . WHILE expr_parentheses statement_block_optional
    (70) if_statement -> . IF expr_parentheses statement_block_optional
    (74) do_statement -> . DO statement_block_optional WHILE expr_parentheses SEMICOLON
    (81) for_statement -> . FOR LPAREN for_parameters RPAREN statement_block_optional
    (96) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional
    (97) foreach_statement -> . FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional
    (75) break_statement -> . BREAK expr SEMICOLON
    (76) break_statement -> . BREAK SEMICOLON
    (77) continue_statement -> . CONTINUE expr SEMICOLON
    (78) continue_statement -> . CONTINUE SEMICOLON
    (79) return_statement -> . RETURN expr SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (50) exit_statement -> . EXIT exit_expr
    (51) exit_statement -> . EXIT
    (52) die_statement -> . DIE exit_expr
    (53) die_statement -> . DIE
    (71) global_statement -> . GLOBAL global_var statement_COLON_GLOBAL
    (72) global_statement -> . GLOBAL global_var
    (110) variable -> . VARIABLE variable_array_selector
    (111) variable -> . VARIABLE
    (102) function_call -> . ID LPAREN function_call_parameter_list RPAREN
    (103) function_call -> . ID LPAREN RPAREN

    LKEY            shift and go to state 96
    MINUS           shift and go to state 21
    EXC_DOT         shift and go to state 22
    INCREMENT       shift and go to state 23
    DECREMENT       shift and go to state 25
    LPAREN          shift and go to state 26
    ARRAY_TYPE      shift and go to state 27
    NUMBER_INTEGER  shift and go to state 29
    NUMBER_REAL     shift and go to state 30
    CONSTANT_ENCAPSED_STRING shift and go to state 31
    TRUE            shift and go to state 32
    FALSE           shift and go to state 33
    WHILE           shift and go to state 34
    IF              shift and go to state 35
    DO              shift and go to state 36
    FOR             shift and go to state 37
    FOREACH         shift and go to state 38
    BREAK           shift and go to state 39
    CONTINUE        shift and go to state 40
    RETURN          shift and go to state 41
    EXIT            shift and go to state 42
    DIE             shift and go to state 43
    GLOBAL          shift and go to state 44
    VARIABLE        shift and go to state 45
    ID              shift and go to state 46

    expr                           shift and go to state 9
    statement_block_optional       shift and go to state 264
    statement                      shift and go to state 95
    while_statement                shift and go to state 10
    if_statement                   shift and go to state 11
    do_statement                   shift and go to state 12
    for_statement                  shift and go to state 13
    foreach_statement              shift and go to state 14
    break_statement                shift and go to state 15
    continue_statement             shift and go to state 16
    return_statement               shift and go to state 17
    exit_statement                 shift and go to state 18
    die_statement                  shift and go to state 19
    global_statement               shift and go to state 20
    variable                       shift and go to state 24
    function_call                  shift and go to state 28

state 264

    (97) foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .

    FUNCTION        reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    MINUS           reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    EXC_DOT         reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    INCREMENT       reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    DECREMENT       reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    LPAREN          reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    ARRAY_TYPE      reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    NUMBER_INTEGER  reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    NUMBER_REAL     reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    CONSTANT_ENCAPSED_STRING reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    TRUE            reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    FALSE           reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    WHILE           reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    IF              reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    DO              reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    FOR             reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    FOREACH         reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    BREAK           reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    CONTINUE        reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    RETURN          reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    EXIT            reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    DIE             reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    GLOBAL          reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    VARIABLE        reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    ID              reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    END_PROGRAM     reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)
    RKEY            reduce using rule 97 (foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional .)

