
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA ID IGUAL LPAREN NUMBER POT RPAREN SOMA VEZESexp : exp SOMA exp1 \n    | exp1exp1 : exp1 VEZES exp2 \n    | exp2exp2 : exp2 POT exp3\n    | exp3exp3 : assign\n    | NUMBER\n    | ID\n    | callcall :  ID LPAREN params RPAREN\n  | ID LPAREN RPAREN\n  params : ID COMMA params\n    | IDassign : ID IGUAL exp'
    
_lr_action_items = {'NUMBER':([0,9,10,11,12,],[6,6,6,6,6,]),'ID':([0,9,10,11,12,13,21,],[7,7,7,7,7,18,18,]),'$end':([1,2,3,4,5,6,7,8,14,15,16,17,20,22,],[0,-2,-4,-6,-7,-8,-9,-10,-1,-3,-5,-15,-12,-11,]),'SOMA':([1,2,3,4,5,6,7,8,14,15,16,17,20,22,],[9,-2,-4,-6,-7,-8,-9,-10,-1,-3,-5,9,-12,-11,]),'VEZES':([2,3,4,5,6,7,8,14,15,16,17,20,22,],[10,-4,-6,-7,-8,-9,-10,10,-3,-5,-15,-12,-11,]),'POT':([2,3,4,5,6,7,8,14,15,16,17,20,22,],[-2,11,-6,-7,-8,-9,-10,-1,11,-5,-15,-12,-11,]),'IGUAL':([7,],[12,]),'LPAREN':([7,],[13,]),'RPAREN':([13,18,19,23,],[20,-14,22,-13,]),'COMMA':([18,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,12,],[1,17,]),'exp1':([0,9,12,],[2,14,2,]),'exp2':([0,9,10,12,],[3,3,15,3,]),'exp3':([0,9,10,11,12,],[4,4,4,16,4,]),'assign':([0,9,10,11,12,],[5,5,5,5,5,]),'call':([0,9,10,11,12,],[8,8,8,8,8,]),'params':([13,21,],[19,23,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> exp SOMA exp1','exp',3,'p_exp_soma','ExpressionLanguageParser.py',12),
  ('exp -> exp1','exp',1,'p_exp_soma','ExpressionLanguageParser.py',13),
  ('exp1 -> exp1 VEZES exp2','exp1',3,'p_exp1_vezes','ExpressionLanguageParser.py',20),
  ('exp1 -> exp2','exp1',1,'p_exp1_vezes','ExpressionLanguageParser.py',21),
  ('exp2 -> exp2 POT exp3','exp2',3,'p_exp2_expo','ExpressionLanguageParser.py',28),
  ('exp2 -> exp3','exp2',1,'p_exp2_expo','ExpressionLanguageParser.py',29),
  ('exp3 -> assign','exp3',1,'p_exp3','ExpressionLanguageParser.py',36),
  ('exp3 -> NUMBER','exp3',1,'p_exp3','ExpressionLanguageParser.py',37),
  ('exp3 -> ID','exp3',1,'p_exp3','ExpressionLanguageParser.py',38),
  ('exp3 -> call','exp3',1,'p_exp3','ExpressionLanguageParser.py',39),
  ('call -> ID LPAREN params RPAREN','call',4,'p_call','ExpressionLanguageParser.py',49),
  ('call -> ID LPAREN RPAREN','call',3,'p_call','ExpressionLanguageParser.py',50),
  ('params -> ID COMMA params','params',3,'p_params','ExpressionLanguageParser.py',61),
  ('params -> ID','params',1,'p_params','ExpressionLanguageParser.py',62),
  ('assign -> ID IGUAL exp','assign',3,'p_assign','ExpressionLanguageParser.py',65),
]
