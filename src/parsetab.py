
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightADD_ASSIGNSUB_ASSIGNMOD_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNASSIGNleftINTE_DOTDDOTleftANDORleftEQUALSNOT_EQUALLESS_THANLESS_EQUALGREAT_THANGREAT_EQUALleftPLUSMINUSleftTIMESDIVIDEPERCENTrightEXC_DOTleftPOS_INCREMENTPOS_DECREMENTrightPRE_INCREMENTPRE_DECREMENTRPARENrightUMINUSADD_ASSIGN AMPERSAND AND ARRAY_TYPE AS ASSIGN ATTR_ASSOC BEGIN_PROGRAM BOOL_TYPE BREAK COLON COMMENT_MULTI COMMENT_SINGLE CONSTANT_ENCAPSED_STRING CONTINUE DDOT DIE DIVIDE DIVIDE_ASSIGN DO DOLAR ELSE ELSEIF END_PROGRAM EQUALS EXC_DOT EXIT FALSE FLOAT_TYPE FOR FOREACH FUNCTION GLOBAL GREAT_EQUAL GREAT_THAN ID IDENTATION IF INTE_DOT INT_TYPE LBRACKET LEFT_LOGICAL LESS_EQUAL LESS_THAN LKEY LPAREN MINUS MOD_ASSIGN NOT_EQUAL NUMBER_INTEGER NUMBER_REAL OR PERCENT PLUS POS_DECREMENT POS_INCREMENT PRE_DECREMENT PRE_INCREMENT RBRACKET RETURN RIGHT_LOGICAL RKEY RPAREN SEMICOLON STRING_TYPE SUB_ASSIGN TIMES TIMES_ASSIGN TRUE VARIABLE WHILE\n  main : BEGIN_PROGRAM main_program END_PROGRAM \n  | BEGIN_PROGRAM END_PROGRAM \n  \n  main_program : inner_statement main_program\n    | inner_statement\n  \n  inner_statement : function_declaration_statement\n    | statement\n  \n  inner_statement_MUL : inner_statement inner_statement_MUL\n    | inner_statement\n  \n  expr : expr PLUS expr\n    | expr MINUS expr \n    | MINUS expr %prec UMINUS\n    | expr DIVIDE expr\n    | expr PERCENT expr\n    | expr TIMES expr   \n    | expr EQUALS expr\n    | expr NOT_EQUAL expr\n    | expr GREAT_THAN expr \n    | expr GREAT_EQUAL expr\n    | expr LESS_THAN expr\n    | expr LESS_EQUAL expr\n    | expr AND expr\n    | expr OR expr\n    | EXC_DOT expr\n    | PRE_INCREMENT variable\n    | variable POS_INCREMENT\n    | PRE_DECREMENT variable\n    | variable POS_DECREMENT\n    | variable\n    | LPAREN expr RPAREN\n    | ARRAY_TYPE array_declaration\n    | LPAREN typecast_operator RPAREN expr \n    | function_call\n    | expr INTE_DOT expr DDOT expr\n    | variable ADD_ASSIGN expr\n    | variable SUB_ASSIGN expr\n    | variable MOD_ASSIGN expr\n    | variable TIMES_ASSIGN expr\n    | variable DIVIDE_ASSIGN expr\n    | variable ASSIGN expr\n    | NUMBER_INTEGER\n    | NUMBER_REAL\n    | CONSTANT_ENCAPSED_STRING\n    | TRUE\n    | FALSE\n  \n  typecast_operator : INT_TYPE\n    | FLOAT_TYPE\n    | ARRAY_TYPE\n    | STRING_TYPE\n    | BOOL_TYPE\n  \n  exit_statement : EXIT exit_expr\n    | EXIT\n  \n  die_statement : DIE exit_expr\n    | DIE\n  \n  exit_expr : LPAREN expr RPAREN\n    | LPAREN RPAREN\n  \n  array_declaration : LPAREN array_pair_list RPAREN\n    | LPAREN RPAREN\n  \n  statement : expr SEMICOLON \n    | while_statement\n    | if_statement\n    | do_statement\n    | for_statement\n    | foreach_statement\n    | break_statement\n    | continue_statement \n    | return_statement\n    | exit_statement SEMICOLON\n    | die_statement SEMICOLON\n    | global_statement SEMICOLON\n  \n  if_statement : IF expr_parentheses statement_block_optional\n  \n  \n  global_statement : GLOBAL global_var statement_COLON_GLOBAL \n    | GLOBAL global_var \n  \n  while_statement : WHILE expr_parentheses statement_block_optional\n  \n  do_statement : DO statement_block_optional WHILE expr_parentheses SEMICOLON\n  \n  break_statement : BREAK expr SEMICOLON\n    | BREAK SEMICOLON\n  \n  continue_statement : CONTINUE expr SEMICOLON\n    | CONTINUE SEMICOLON\n  \n  return_statement : RETURN expr SEMICOLON \n    | RETURN SEMICOLON \n  \n  for_statement : FOR LPAREN for_parameters RPAREN statement_block_optional\n  \n  for_parameters : SEMICOLON SEMICOLON \n  | for_expr_OPT SEMICOLON SEMICOLON\n  | for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON \n  | for_expr_OPT SEMICOLON SEMICOLON for_expr_OPT\n  | SEMICOLON for_expr_OPT SEMICOLON\n  | SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT\n  | SEMICOLON SEMICOLON for_expr_OPT\n  | for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT\n  \n  global_var : VARIABLE\n    | DOLAR VARIABLE\n    | DOLAR LKEY expr RKEY \n  \n  statement_COLON_GLOBAL : COLON global_var statement_COLON_GLOBAL\n    | COLON global_var\n  \n  ampersand_variable : AMPERSAND VARIABLE\n    | VARIABLE\n  \n  expr_parentheses : LPAREN expr RPAREN\n  \n  foreach_statement : FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional\n  | FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional\n  \n  for_expr_OPT : expr for_expr_COLON_EXPR\n  | expr\n  \n  for_expr_COLON_EXPR : COLON expr for_expr_COLON_EXPR\n    | COLON expr\n  \n  function_call : ID LPAREN function_call_parameter_list RPAREN\n    | ID LPAREN RPAREN\n  \n  function_call_parameter_list : function_call_parameter fc_parameter_list_COLON_PARAMETER\n    |  function_call_parameter\n  \n  fc_parameter_list_COLON_PARAMETER : COLON function_call_parameter fc_parameter_list_COLON_PARAMETER\n    | COLON function_call_parameter\n  \n  function_call_parameter : expr\n    | AMPERSAND VARIABLE\n  \n  variable : VARIABLE variable_array_selector\n    | VARIABLE\n  \n  selector : LBRACKET expr RBRACKET \n    | LBRACKET RBRACKET\n  \n  function_declaration_statement : FUNCTION fds_id fds_parameter fds_statements\n  \n  fds_statements : LKEY inner_statement_MUL RKEY\n    | LKEY RKEY\n  \n  fds_id : AMPERSAND ID\n    | ID\n  \n  fds_parameter : LPAREN parameter_list RPAREN\n    | LPAREN RPAREN\n  \n  parameter_list : parameter parameter_list_colon_parameter \n    | parameter\n   \n  parameter : VARIABLE \n    | parameter_prefix VARIABLE\n    | VARIABLE ASSIGN static_scalar\n    | parameter_prefix VARIABLE ASSIGN static_scalar\n  \n  parameter_prefix : parameter_type AMPERSAND\n    | AMPERSAND\n    | parameter_type\n  \n  parameter_type : INT_TYPE\n    | STRING_TYPE\n    | FLOAT_TYPE\n    | ARRAY_TYPE\n    | BOOL_TYPE\n  \n  static_scalar : common_scalar \n    | PLUS static_scalar\n    | MINUS static_scalar\n  \n  common_scalar : NUMBER_REAL\n    | NUMBER_INTEGER\n    | CONSTANT_ENCAPSED_STRING\n  \n  array_pair_list : array_pair array_pair_list_ARR_PAIR \n    | array_pair\n   \n  array_pair : expr\n    | AMPERSAND variable\n    | expr ATTR_ASSOC expr\n    | expr ATTR_ASSOC AMPERSAND variable\n  \n  statement_MUL : statement statement_MUL\n    | statement\n  \n  statement_block_optional : statement \n    | LKEY statement_MUL RKEY \n    | LKEY RKEY\n  \n  parameter_list_colon_parameter : COLON parameter parameter_list_colon_parameter\n    | COLON parameter\n  \n    variable_array_selector : selector variable_array_selector\n    | selector\n  \n  array_pair_list_ARR_PAIR : COLON array_pair array_pair_list_ARR_PAIR\n    | COLON array_pair\n  '
    
_lr_action_items = {'BEGIN_PROGRAM':([0,],[2,]),'$end':([1,4,47,],[0,-2,-1,]),'END_PROGRAM':([2,3,5,6,7,10,11,12,13,14,15,16,17,48,52,67,68,69,95,100,102,104,145,147,150,157,158,159,174,197,215,227,228,240,266,269,],[4,47,-4,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,-3,-58,-67,-68,-69,-151,-76,-78,-80,-73,-70,-153,-75,-77,-79,-116,-152,-118,-74,-81,-117,-98,-99,]),'FUNCTION':([2,5,6,7,10,11,12,13,14,15,16,17,52,67,68,69,95,100,102,104,145,147,150,157,158,159,174,175,197,215,216,227,228,240,266,269,],[8,8,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,-58,-67,-68,-69,-151,-76,-78,-80,-73,-70,-153,-75,-77,-79,-116,8,-152,-118,8,-74,-81,-117,-98,-99,]),'MINUS':([2,5,6,7,9,10,11,12,13,14,15,16,17,21,22,24,26,28,29,30,31,32,33,36,39,40,41,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,111,112,113,114,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,143,145,146,147,150,151,153,155,156,157,158,159,160,165,166,167,168,170,172,174,175,188,189,190,192,193,195,197,199,200,202,204,208,209,210,212,215,216,220,223,225,227,228,230,232,233,240,245,246,250,254,257,266,268,269,],[21,21,-5,-6,54,-59,-60,-61,-62,-63,-64,-65,-66,21,21,-28,21,-32,-40,-41,-42,-43,-44,21,21,21,21,-113,-58,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-67,-68,-69,-11,-23,-24,-25,-27,21,21,21,21,21,21,-26,54,-30,21,21,21,21,-151,21,21,21,54,-76,54,-78,54,-80,21,-112,-157,21,21,-9,-10,-12,-13,-14,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-29,21,-57,54,-73,54,-70,-153,21,21,54,54,-75,-77,-79,54,21,-156,54,-115,-105,54,-116,21,21,-31,-56,21,21,-97,-152,21,21,21,21,54,-114,-104,21,-118,21,246,54,54,-74,-81,21,21,54,-117,246,246,246,21,21,-98,21,-99,]),'EXC_DOT':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,227,228,230,232,240,254,257,266,268,269,],[22,22,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,22,22,22,22,22,22,22,-58,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-67,-68,-69,22,22,22,22,22,22,22,22,22,22,-151,22,22,22,-76,-78,-80,22,22,22,22,-73,-70,-153,22,22,-75,-77,-79,22,-116,22,22,22,22,-97,-152,22,22,22,22,22,-118,22,-74,-81,22,22,-117,22,22,-98,22,-99,]),'PRE_INCREMENT':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,227,228,230,232,240,254,257,266,268,269,],[23,23,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,23,23,23,23,23,23,23,-58,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-67,-68,-69,23,23,23,23,23,23,23,23,23,23,-151,23,23,23,-76,-78,-80,23,23,23,23,-73,-70,-153,23,23,-75,-77,-79,23,-116,23,23,23,23,-97,-152,23,23,23,23,23,-118,23,-74,-81,23,23,-117,23,23,-98,23,-99,]),'PRE_DECREMENT':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,227,228,230,232,240,254,257,266,268,269,],[25,25,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,25,25,25,25,25,25,25,-58,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-67,-68,-69,25,25,25,25,25,25,25,25,25,25,-151,25,25,25,-76,-78,-80,25,25,25,25,-73,-70,-153,25,25,-75,-77,-79,25,-116,25,25,25,25,-97,-152,25,25,25,25,25,-118,25,-74,-81,25,25,-117,25,25,-98,25,-99,]),'LPAREN':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,27,34,35,36,37,38,39,40,41,42,43,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,84,90,91,92,93,95,96,97,98,100,102,104,106,113,114,117,139,145,147,148,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,227,228,230,232,240,254,257,266,268,269,],[26,26,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,26,26,26,90,92,92,26,97,98,26,26,26,106,106,114,116,-120,-58,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-67,-68,-69,26,26,26,26,26,26,90,26,26,26,26,-151,26,26,26,-76,-78,-80,26,26,26,-119,26,-73,-70,92,-153,26,26,-75,-77,-79,26,-116,26,26,26,26,-97,-152,26,26,26,26,26,-118,26,-74,-81,26,26,-117,26,26,-98,26,-99,]),'ARRAY_TYPE':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,116,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,219,227,228,230,232,240,254,257,266,268,269,],[27,27,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,27,27,84,27,27,27,27,-58,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-67,-68,-69,27,27,27,27,27,27,27,27,27,27,-151,27,27,27,-76,-78,-80,27,27,27,186,27,-73,-70,-153,27,27,-75,-77,-79,27,-116,27,27,27,27,-97,-152,27,27,27,27,27,-118,27,186,-74,-81,27,27,-117,27,27,-98,27,-99,]),'NUMBER_INTEGER':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,220,227,228,230,232,240,245,246,250,254,257,266,268,269,],[29,29,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,29,29,29,29,29,29,29,-58,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-67,-68,-69,29,29,29,29,29,29,29,29,29,29,-151,29,29,29,-76,-78,-80,29,29,29,29,-73,-70,-153,29,29,-75,-77,-79,29,-116,29,29,29,29,-97,-152,29,29,29,29,29,-118,29,248,-74,-81,29,29,-117,248,248,248,29,29,-98,29,-99,]),'NUMBER_REAL':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,220,227,228,230,232,240,245,246,250,254,257,266,268,269,],[30,30,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,30,30,30,30,30,30,30,-58,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-67,-68,-69,30,30,30,30,30,30,30,30,30,30,-151,30,30,30,-76,-78,-80,30,30,30,30,-73,-70,-153,30,30,-75,-77,-79,30,-116,30,30,30,30,-97,-152,30,30,30,30,30,-118,30,247,-74,-81,30,30,-117,247,247,247,30,30,-98,30,-99,]),'CONSTANT_ENCAPSED_STRING':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,220,227,228,230,232,240,245,246,250,254,257,266,268,269,],[31,31,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,31,31,31,31,31,31,31,-58,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-67,-68,-69,31,31,31,31,31,31,31,31,31,31,-151,31,31,31,-76,-78,-80,31,31,31,31,-73,-70,-153,31,31,-75,-77,-79,31,-116,31,31,31,31,-97,-152,31,31,31,31,31,-118,31,249,-74,-81,31,31,-117,249,249,249,31,31,-98,31,-99,]),'TRUE':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,227,228,230,232,240,254,257,266,268,269,],[32,32,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,32,32,32,32,32,32,32,-58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-67,-68,-69,32,32,32,32,32,32,32,32,32,32,-151,32,32,32,-76,-78,-80,32,32,32,32,-73,-70,-153,32,32,-75,-77,-79,32,-116,32,32,32,32,-97,-152,32,32,32,32,32,-118,32,-74,-81,32,32,-117,32,32,-98,32,-99,]),'FALSE':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,227,228,230,232,240,254,257,266,268,269,],[33,33,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,33,33,33,33,33,33,33,-58,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-67,-68,-69,33,33,33,33,33,33,33,33,33,33,-151,33,33,33,-76,-78,-80,33,33,33,33,-73,-70,-153,33,33,-75,-77,-79,33,-116,33,33,33,33,-97,-152,33,33,33,33,33,-118,33,-74,-81,33,33,-117,33,33,-98,33,-99,]),'WHILE':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,94,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[34,34,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,34,-58,-67,-68,-69,34,34,148,-151,34,-76,-78,-80,-73,-70,-153,34,-75,-77,-79,-116,34,-97,-152,34,-118,34,-74,-81,-117,34,-98,34,-99,]),'IF':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[35,35,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,35,-58,-67,-68,-69,35,35,-151,35,-76,-78,-80,-73,-70,-153,35,-75,-77,-79,-116,35,-97,-152,35,-118,35,-74,-81,-117,35,-98,35,-99,]),'DO':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[36,36,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,36,-58,-67,-68,-69,36,36,-151,36,-76,-78,-80,-73,-70,-153,36,-75,-77,-79,-116,36,-97,-152,36,-118,36,-74,-81,-117,36,-98,36,-99,]),'FOR':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[37,37,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,37,-58,-67,-68,-69,37,37,-151,37,-76,-78,-80,-73,-70,-153,37,-75,-77,-79,-116,37,-97,-152,37,-118,37,-74,-81,-117,37,-98,37,-99,]),'FOREACH':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[38,38,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,38,-58,-67,-68,-69,38,38,-151,38,-76,-78,-80,-73,-70,-153,38,-75,-77,-79,-116,38,-97,-152,38,-118,38,-74,-81,-117,38,-98,38,-99,]),'BREAK':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[39,39,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,39,-58,-67,-68,-69,39,39,-151,39,-76,-78,-80,-73,-70,-153,39,-75,-77,-79,-116,39,-97,-152,39,-118,39,-74,-81,-117,39,-98,39,-99,]),'CONTINUE':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[40,40,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,40,-58,-67,-68,-69,40,40,-151,40,-76,-78,-80,-73,-70,-153,40,-75,-77,-79,-116,40,-97,-152,40,-118,40,-74,-81,-117,40,-98,40,-99,]),'RETURN':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[41,41,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,41,-58,-67,-68,-69,41,41,-151,41,-76,-78,-80,-73,-70,-153,41,-75,-77,-79,-116,41,-97,-152,41,-118,41,-74,-81,-117,41,-98,41,-99,]),'EXIT':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[42,42,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,42,-58,-67,-68,-69,42,42,-151,42,-76,-78,-80,-73,-70,-153,42,-75,-77,-79,-116,42,-97,-152,42,-118,42,-74,-81,-117,42,-98,42,-99,]),'DIE':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[43,43,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,43,-58,-67,-68,-69,43,43,-151,43,-76,-78,-80,-73,-70,-153,43,-75,-77,-79,-116,43,-97,-152,43,-118,43,-74,-81,-117,43,-98,43,-99,]),'GLOBAL':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,145,147,150,151,157,158,159,174,175,195,197,199,215,216,227,228,240,257,266,268,269,],[44,44,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,44,-58,-67,-68,-69,44,44,-151,44,-76,-78,-80,-73,-70,-153,44,-75,-77,-79,-116,44,-97,-152,44,-118,44,-74,-81,-117,44,-98,44,-99,]),'VARIABLE':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,23,25,26,36,39,40,41,44,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,110,113,114,116,139,144,145,147,150,151,153,157,158,159,163,165,173,174,175,180,181,182,183,184,185,186,187,188,192,193,195,197,199,200,202,204,205,212,215,216,219,222,226,227,228,230,232,235,240,254,257,258,266,268,269,],[45,45,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,45,45,45,45,45,45,45,45,45,109,-58,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-67,-68,-69,45,45,45,45,45,45,45,45,45,45,-151,45,45,45,-76,-78,-80,45,164,45,45,179,45,45,-73,-70,-153,45,45,-75,-77,-79,109,45,213,-116,45,221,-131,-130,-132,-133,-134,-135,-136,45,45,45,-97,-152,45,45,45,45,236,45,-118,45,179,-129,45,-74,-81,45,45,259,-117,45,45,236,-98,45,-99,]),'ID':([2,5,6,7,8,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,113,114,139,145,147,150,151,153,157,158,159,165,174,175,188,192,193,195,197,199,200,202,204,212,215,216,227,228,230,232,240,254,257,266,268,269,],[46,46,-5,-6,51,-59,-60,-61,-62,-63,-64,-65,-66,46,46,46,46,46,46,46,117,-58,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-67,-68,-69,46,46,46,46,46,46,46,46,46,46,-151,46,46,46,-76,-78,-80,46,46,46,46,-73,-70,-153,46,46,-75,-77,-79,46,-116,46,46,46,46,-97,-152,46,46,46,46,46,-118,46,-74,-81,46,46,-117,46,46,-98,46,-99,]),'RKEY':([6,7,10,11,12,13,14,15,16,17,24,28,29,30,31,32,33,45,52,67,68,69,70,71,72,73,74,81,89,95,96,100,102,104,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,141,145,147,149,150,151,157,158,159,166,168,170,174,175,189,190,197,198,208,209,210,214,215,216,223,227,228,240,241,266,269,],[-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,-28,-32,-40,-41,-42,-43,-44,-113,-58,-67,-68,-69,-11,-23,-24,-25,-27,-26,-30,-151,150,-76,-78,-80,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,-73,-70,197,-153,-150,-75,-77,-79,-156,-115,-105,-116,215,-31,-56,-152,-149,238,-114,-104,240,-118,-8,-33,-74,-81,-117,-7,-98,-99,]),'AMPERSAND':([8,90,114,116,181,183,184,185,186,187,192,193,205,212,219,258,],[50,144,173,182,222,-132,-133,-134,-135,-136,144,226,235,173,182,235,]),'SEMICOLON':([9,18,19,20,24,28,29,30,31,32,33,39,40,41,42,43,45,70,71,72,73,74,81,89,97,99,101,103,105,107,108,109,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,141,153,154,155,161,162,164,166,168,170,189,190,195,196,201,202,203,206,207,209,210,223,231,233,237,238,256,],[52,67,68,69,-28,-32,-40,-41,-42,-43,-44,100,102,104,-51,-53,-113,-11,-23,-24,-25,-27,-26,-30,153,157,158,159,-50,-52,-72,-90,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,200,202,-101,-55,-71,-91,-156,-115,-105,-31,-56,-97,227,230,232,-100,-54,-94,-114,-104,-33,254,-103,-93,-92,-102,]),'PLUS':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,220,223,225,233,245,246,250,],[53,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,53,-30,53,53,53,-112,-157,-9,-10,-12,-13,-14,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-29,-57,53,53,53,53,53,-156,53,-115,-105,53,-31,-56,53,-114,-104,245,53,53,53,245,245,245,]),'DIVIDE':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[55,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,55,-30,55,55,55,-112,-157,55,55,-12,-13,-14,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-29,-57,55,55,55,55,55,-156,55,-115,-105,55,-31,-56,55,-114,-104,55,55,55,]),'PERCENT':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[56,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,56,-30,56,56,56,-112,-157,56,56,-12,-13,-14,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-29,-57,56,56,56,56,56,-156,56,-115,-105,56,-31,-56,56,-114,-104,56,56,56,]),'TIMES':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[57,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,57,-30,57,57,57,-112,-157,57,57,-12,-13,-14,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-29,-57,57,57,57,57,57,-156,57,-115,-105,57,-31,-56,57,-114,-104,57,57,57,]),'EQUALS':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[58,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,58,-30,58,58,58,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,58,58,58,58,58,58,58,58,58,-29,-57,58,58,58,58,58,-156,58,-115,-105,58,-31,-56,58,-114,-104,58,58,58,]),'NOT_EQUAL':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[59,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,59,-30,59,59,59,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,59,59,59,59,59,59,59,59,59,-29,-57,59,59,59,59,59,-156,59,-115,-105,59,-31,-56,59,-114,-104,59,59,59,]),'GREAT_THAN':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[60,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,60,-30,60,60,60,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,60,60,60,60,60,60,60,60,60,-29,-57,60,60,60,60,60,-156,60,-115,-105,60,-31,-56,60,-114,-104,60,60,60,]),'GREAT_EQUAL':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[61,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,61,-30,61,61,61,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,61,61,61,61,61,61,61,61,61,-29,-57,61,61,61,61,61,-156,61,-115,-105,61,-31,-56,61,-114,-104,61,61,61,]),'LESS_THAN':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[62,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,62,-30,62,62,62,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,62,62,62,62,62,62,62,62,62,-29,-57,62,62,62,62,62,-156,62,-115,-105,62,-31,-56,62,-114,-104,62,62,62,]),'LESS_EQUAL':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[63,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,63,-30,63,63,63,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,63,63,63,63,63,63,63,63,63,-29,-57,63,63,63,63,63,-156,63,-115,-105,63,-31,-56,63,-114,-104,63,63,63,]),'AND':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[64,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,64,-30,64,64,64,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,64,64,64,64,64,64,64,-29,-57,64,64,64,64,64,-156,64,-115,-105,64,-31,-56,64,-114,-104,64,64,64,]),'OR':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[65,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,65,-30,65,65,65,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,65,65,65,65,65,65,65,-29,-57,65,65,65,65,65,-156,65,-115,-105,65,-31,-56,65,-114,-104,65,65,65,]),'INTE_DOT':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,143,146,155,156,160,166,167,168,170,172,189,190,208,209,210,223,225,233,],[66,-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,66,-30,66,66,66,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,66,66,66,66,66,66,66,-29,-57,66,66,66,66,66,-156,66,-115,-105,66,-31,-56,66,-114,-104,-33,66,66,]),'POS_INCREMENT':([24,45,111,112,166,168,209,],[73,-113,-112,-157,-156,-115,-114,]),'POS_DECREMENT':([24,45,111,112,166,168,209,],[74,-113,-112,-157,-156,-115,-114,]),'RPAREN':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,83,84,85,86,87,88,89,90,106,111,112,114,116,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,140,141,142,143,146,152,155,160,166,168,169,170,171,172,176,178,179,189,190,191,194,200,203,209,210,211,213,218,221,223,224,225,229,230,232,233,234,236,239,242,243,244,247,248,249,251,252,253,254,255,256,259,260,261,262,263,264,265,267,],[-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,138,139,-47,-45,-46,-48,-49,-30,141,161,-112,-157,170,177,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,190,-57,-144,-145,195,199,-101,206,-156,-115,210,-105,-107,-110,217,-124,-125,-31,-56,-143,-146,-82,-100,-114,-104,-106,-111,-123,-126,-33,-159,-147,-88,-86,-83,-103,257,-96,-109,-155,-127,-137,-140,-141,-142,-158,-148,-87,-84,-85,-102,-95,-108,-154,-138,-139,-128,-89,268,]),'DDOT':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,166,168,170,189,190,209,210,223,],[-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,-30,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,188,-34,-35,-36,-37,-38,-39,-29,-57,-156,-115,-105,-31,-56,-114,-104,-33,]),'ATTR_ASSOC':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,141,143,166,168,170,189,190,209,210,223,234,236,259,],[-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,-30,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,193,-156,-115,-105,-31,-56,-114,-104,-33,258,-96,-95,]),'COLON':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,108,109,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,141,142,143,155,164,166,168,170,171,172,178,179,189,190,194,207,209,210,213,221,223,224,225,233,238,239,242,243,244,247,248,249,252,262,263,264,],[-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,-30,163,-90,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,192,-145,204,-91,-156,-115,-105,212,-110,219,-125,-31,-56,-146,163,-114,-104,-111,-126,-33,192,-147,204,-92,212,219,-127,-137,-140,-141,-142,-148,-138,-139,-128,]),'AS':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,111,112,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,141,156,166,168,170,189,190,209,210,223,],[-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,-30,-112,-157,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,205,-156,-115,-105,-31,-56,-114,-104,-33,]),'RBRACKET':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,111,112,113,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,138,141,166,167,168,170,189,190,209,210,223,],[-28,-32,-40,-41,-42,-43,-44,-113,-11,-23,-24,-25,-27,-26,-30,-112,-157,168,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,-156,209,-115,-105,-31,-56,-114,-104,-33,]),'ADD_ASSIGN':([24,45,111,112,166,168,209,],[75,-113,-112,-157,-156,-115,-114,]),'SUB_ASSIGN':([24,45,111,112,166,168,209,],[76,-113,-112,-157,-156,-115,-114,]),'MOD_ASSIGN':([24,45,111,112,166,168,209,],[77,-113,-112,-157,-156,-115,-114,]),'TIMES_ASSIGN':([24,45,111,112,166,168,209,],[78,-113,-112,-157,-156,-115,-114,]),'DIVIDE_ASSIGN':([24,45,111,112,166,168,209,],[79,-113,-112,-157,-156,-115,-114,]),'ASSIGN':([24,45,111,112,166,168,179,209,221,],[80,-113,-112,-157,-156,-115,220,-114,250,]),'INT_TYPE':([26,116,219,],[85,183,183,]),'FLOAT_TYPE':([26,116,219,],[86,185,185,]),'STRING_TYPE':([26,116,219,],[87,184,184,]),'BOOL_TYPE':([26,116,219,],[88,187,187,]),'LKEY':([36,91,93,110,115,177,195,199,217,257,268,],[96,96,96,165,175,-122,-97,96,-121,96,96,]),'DOLAR':([44,163,],[110,110,]),'LBRACKET':([45,112,168,209,],[113,113,-115,-114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'main_program':([2,5,],[3,48,]),'inner_statement':([2,5,175,216,],[5,5,216,216,]),'function_declaration_statement':([2,5,175,216,],[6,6,6,6,]),'statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[7,7,95,95,95,151,151,7,95,7,95,95,]),'expr':([2,5,21,22,26,36,39,40,41,53,54,55,56,57,58,59,60,61,62,63,64,65,66,75,76,77,78,79,80,90,91,92,93,96,97,98,106,113,114,139,151,153,165,175,188,192,193,199,200,202,204,212,216,230,232,254,257,268,],[9,9,70,71,82,9,99,101,103,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,143,9,146,9,9,155,156,160,167,172,189,9,155,208,9,223,143,225,9,155,155,233,172,9,155,155,155,9,9,]),'while_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'if_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'do_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'for_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'foreach_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'break_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'continue_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'return_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'exit_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'die_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'global_statement':([2,5,36,91,93,96,151,175,199,216,257,268,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'variable':([2,5,21,22,23,25,26,36,39,40,41,53,54,55,56,57,58,59,60,61,62,63,64,65,66,75,76,77,78,79,80,90,91,92,93,96,97,98,106,113,114,139,144,151,153,165,175,188,192,193,199,200,202,204,212,216,226,230,232,254,257,268,],[24,24,24,24,72,81,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,194,24,24,24,24,24,24,24,24,24,24,24,24,24,252,24,24,24,24,24,]),'function_call':([2,5,21,22,26,36,39,40,41,53,54,55,56,57,58,59,60,61,62,63,64,65,66,75,76,77,78,79,80,90,91,92,93,96,97,98,106,113,114,139,151,153,165,175,188,192,193,199,200,202,204,212,216,230,232,254,257,268,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'fds_id':([8,],[49,]),'typecast_operator':([26,],[83,]),'array_declaration':([27,84,],[89,89,]),'expr_parentheses':([34,35,148,],[91,93,196,]),'statement_block_optional':([36,91,93,199,257,268,],[94,145,147,228,266,269,]),'exit_expr':([42,43,],[105,107,]),'global_var':([44,163,],[108,207,]),'variable_array_selector':([45,112,],[111,166,]),'selector':([45,112,],[112,112,]),'fds_parameter':([49,],[115,]),'array_pair_list':([90,],[140,]),'array_pair':([90,192,],[142,224,]),'statement_MUL':([96,151,],[149,198,]),'for_parameters':([97,],[152,]),'for_expr_OPT':([97,153,200,202,230,232,254,],[154,201,229,231,253,255,265,]),'statement_COLON_GLOBAL':([108,207,],[162,237,]),'function_call_parameter_list':([114,],[169,]),'function_call_parameter':([114,212,],[171,239,]),'fds_statements':([115,],[174,]),'parameter_list':([116,],[176,]),'parameter':([116,219,],[178,242,]),'parameter_prefix':([116,219,],[180,180,]),'parameter_type':([116,219,],[181,181,]),'array_pair_list_ARR_PAIR':([142,224,],[191,251,]),'for_expr_COLON_EXPR':([155,233,],[203,256,]),'fc_parameter_list_COLON_PARAMETER':([171,239,],[211,260,]),'inner_statement_MUL':([175,216,],[214,241,]),'parameter_list_colon_parameter':([178,242,],[218,261,]),'ampersand_variable':([205,258,],[234,267,]),'static_scalar':([220,245,246,250,],[243,262,263,264,]),'common_scalar':([220,245,246,250,],[244,244,244,244,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> BEGIN_PROGRAM main_program END_PROGRAM','main',3,'p_main','Parser.py',26),
  ('main -> BEGIN_PROGRAM END_PROGRAM','main',2,'p_main','Parser.py',27),
  ('main_program -> inner_statement main_program','main_program',2,'p_main_program','Parser.py',36),
  ('main_program -> inner_statement','main_program',1,'p_main_program','Parser.py',37),
  ('inner_statement -> function_declaration_statement','inner_statement',1,'p_inner_statement','Parser.py',46),
  ('inner_statement -> statement','inner_statement',1,'p_inner_statement','Parser.py',47),
  ('inner_statement_MUL -> inner_statement inner_statement_MUL','inner_statement_MUL',2,'p_inner_statement_MUL','Parser.py',56),
  ('inner_statement_MUL -> inner_statement','inner_statement_MUL',1,'p_inner_statement_MUL','Parser.py',57),
  ('expr -> expr PLUS expr','expr',3,'p_expr','Parser.py',66),
  ('expr -> expr MINUS expr','expr',3,'p_expr','Parser.py',67),
  ('expr -> MINUS expr','expr',2,'p_expr','Parser.py',68),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','Parser.py',69),
  ('expr -> expr PERCENT expr','expr',3,'p_expr','Parser.py',70),
  ('expr -> expr TIMES expr','expr',3,'p_expr','Parser.py',71),
  ('expr -> expr EQUALS expr','expr',3,'p_expr','Parser.py',72),
  ('expr -> expr NOT_EQUAL expr','expr',3,'p_expr','Parser.py',73),
  ('expr -> expr GREAT_THAN expr','expr',3,'p_expr','Parser.py',74),
  ('expr -> expr GREAT_EQUAL expr','expr',3,'p_expr','Parser.py',75),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr','Parser.py',76),
  ('expr -> expr LESS_EQUAL expr','expr',3,'p_expr','Parser.py',77),
  ('expr -> expr AND expr','expr',3,'p_expr','Parser.py',78),
  ('expr -> expr OR expr','expr',3,'p_expr','Parser.py',79),
  ('expr -> EXC_DOT expr','expr',2,'p_expr','Parser.py',80),
  ('expr -> PRE_INCREMENT variable','expr',2,'p_expr','Parser.py',81),
  ('expr -> variable POS_INCREMENT','expr',2,'p_expr','Parser.py',82),
  ('expr -> PRE_DECREMENT variable','expr',2,'p_expr','Parser.py',83),
  ('expr -> variable POS_DECREMENT','expr',2,'p_expr','Parser.py',84),
  ('expr -> variable','expr',1,'p_expr','Parser.py',85),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','Parser.py',86),
  ('expr -> ARRAY_TYPE array_declaration','expr',2,'p_expr','Parser.py',87),
  ('expr -> LPAREN typecast_operator RPAREN expr','expr',4,'p_expr','Parser.py',88),
  ('expr -> function_call','expr',1,'p_expr','Parser.py',89),
  ('expr -> expr INTE_DOT expr DDOT expr','expr',5,'p_expr','Parser.py',90),
  ('expr -> variable ADD_ASSIGN expr','expr',3,'p_expr','Parser.py',91),
  ('expr -> variable SUB_ASSIGN expr','expr',3,'p_expr','Parser.py',92),
  ('expr -> variable MOD_ASSIGN expr','expr',3,'p_expr','Parser.py',93),
  ('expr -> variable TIMES_ASSIGN expr','expr',3,'p_expr','Parser.py',94),
  ('expr -> variable DIVIDE_ASSIGN expr','expr',3,'p_expr','Parser.py',95),
  ('expr -> variable ASSIGN expr','expr',3,'p_expr','Parser.py',96),
  ('expr -> NUMBER_INTEGER','expr',1,'p_expr','Parser.py',97),
  ('expr -> NUMBER_REAL','expr',1,'p_expr','Parser.py',98),
  ('expr -> CONSTANT_ENCAPSED_STRING','expr',1,'p_expr','Parser.py',99),
  ('expr -> TRUE','expr',1,'p_expr','Parser.py',100),
  ('expr -> FALSE','expr',1,'p_expr','Parser.py',101),
  ('typecast_operator -> INT_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',176),
  ('typecast_operator -> FLOAT_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',177),
  ('typecast_operator -> ARRAY_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',178),
  ('typecast_operator -> STRING_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',179),
  ('typecast_operator -> BOOL_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',180),
  ('exit_statement -> EXIT exit_expr','exit_statement',2,'p_exit_statement','Parser.py',186),
  ('exit_statement -> EXIT','exit_statement',1,'p_exit_statement','Parser.py',187),
  ('die_statement -> DIE exit_expr','die_statement',2,'p_die_statement','Parser.py',196),
  ('die_statement -> DIE','die_statement',1,'p_die_statement','Parser.py',197),
  ('exit_expr -> LPAREN expr RPAREN','exit_expr',3,'p_exit_expr','Parser.py',206),
  ('exit_expr -> LPAREN RPAREN','exit_expr',2,'p_exit_expr','Parser.py',207),
  ('array_declaration -> LPAREN array_pair_list RPAREN','array_declaration',3,'p_array_declaration','Parser.py',216),
  ('array_declaration -> LPAREN RPAREN','array_declaration',2,'p_array_declaration','Parser.py',217),
  ('statement -> expr SEMICOLON','statement',2,'p_statement','Parser.py',226),
  ('statement -> while_statement','statement',1,'p_statement','Parser.py',227),
  ('statement -> if_statement','statement',1,'p_statement','Parser.py',228),
  ('statement -> do_statement','statement',1,'p_statement','Parser.py',229),
  ('statement -> for_statement','statement',1,'p_statement','Parser.py',230),
  ('statement -> foreach_statement','statement',1,'p_statement','Parser.py',231),
  ('statement -> break_statement','statement',1,'p_statement','Parser.py',232),
  ('statement -> continue_statement','statement',1,'p_statement','Parser.py',233),
  ('statement -> return_statement','statement',1,'p_statement','Parser.py',234),
  ('statement -> exit_statement SEMICOLON','statement',2,'p_statement','Parser.py',235),
  ('statement -> die_statement SEMICOLON','statement',2,'p_statement','Parser.py',236),
  ('statement -> global_statement SEMICOLON','statement',2,'p_statement','Parser.py',237),
  ('if_statement -> IF expr_parentheses statement_block_optional','if_statement',3,'p_if_statement','Parser.py',266),
  ('global_statement -> GLOBAL global_var statement_COLON_GLOBAL','global_statement',3,'p_global_statement','Parser.py',273),
  ('global_statement -> GLOBAL global_var','global_statement',2,'p_global_statement','Parser.py',274),
  ('while_statement -> WHILE expr_parentheses statement_block_optional','while_statement',3,'p_while_statement','Parser.py',284),
  ('do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON','do_statement',5,'p_do_statement','Parser.py',291),
  ('break_statement -> BREAK expr SEMICOLON','break_statement',3,'p_break_statement','Parser.py',297),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','Parser.py',298),
  ('continue_statement -> CONTINUE expr SEMICOLON','continue_statement',3,'p_continue_statement','Parser.py',307),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','Parser.py',308),
  ('return_statement -> RETURN expr SEMICOLON','return_statement',3,'p_return_statement','Parser.py',317),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','Parser.py',318),
  ('for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional','for_statement',5,'p_for_statement','Parser.py',327),
  ('for_parameters -> SEMICOLON SEMICOLON','for_parameters',2,'p_for_parameters','Parser.py',333),
  ('for_parameters -> for_expr_OPT SEMICOLON SEMICOLON','for_parameters',3,'p_for_parameters','Parser.py',334),
  ('for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON','for_parameters',4,'p_for_parameters','Parser.py',335),
  ('for_parameters -> for_expr_OPT SEMICOLON SEMICOLON for_expr_OPT','for_parameters',4,'p_for_parameters','Parser.py',336),
  ('for_parameters -> SEMICOLON for_expr_OPT SEMICOLON','for_parameters',3,'p_for_parameters','Parser.py',337),
  ('for_parameters -> SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT','for_parameters',4,'p_for_parameters','Parser.py',338),
  ('for_parameters -> SEMICOLON SEMICOLON for_expr_OPT','for_parameters',3,'p_for_parameters','Parser.py',339),
  ('for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT','for_parameters',5,'p_for_parameters','Parser.py',340),
  ('global_var -> VARIABLE','global_var',1,'p_global_var','Parser.py',362),
  ('global_var -> DOLAR VARIABLE','global_var',2,'p_global_var','Parser.py',363),
  ('global_var -> DOLAR LKEY expr RKEY','global_var',4,'p_global_var','Parser.py',364),
  ('statement_COLON_GLOBAL -> COLON global_var statement_COLON_GLOBAL','statement_COLON_GLOBAL',3,'p_statement_COLON_GLOBAL','Parser.py',375),
  ('statement_COLON_GLOBAL -> COLON global_var','statement_COLON_GLOBAL',2,'p_statement_COLON_GLOBAL','Parser.py',376),
  ('ampersand_variable -> AMPERSAND VARIABLE','ampersand_variable',2,'p_ampersand_variable','Parser.py',385),
  ('ampersand_variable -> VARIABLE','ampersand_variable',1,'p_ampersand_variable','Parser.py',386),
  ('expr_parentheses -> LPAREN expr RPAREN','expr_parentheses',3,'p_expr_parentheses','Parser.py',395),
  ('foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional','foreach_statement',7,'p_foreach_statement','Parser.py',402),
  ('foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional','foreach_statement',9,'p_foreach_statement','Parser.py',403),
  ('for_expr_OPT -> expr for_expr_COLON_EXPR','for_expr_OPT',2,'p_for_expr_OPT','Parser.py',412),
  ('for_expr_OPT -> expr','for_expr_OPT',1,'p_for_expr_OPT','Parser.py',413),
  ('for_expr_COLON_EXPR -> COLON expr for_expr_COLON_EXPR','for_expr_COLON_EXPR',3,'p_for_expr_COLON_EXPR','Parser.py',422),
  ('for_expr_COLON_EXPR -> COLON expr','for_expr_COLON_EXPR',2,'p_for_expr_COLON_EXPR','Parser.py',423),
  ('function_call -> ID LPAREN function_call_parameter_list RPAREN','function_call',4,'p_function_call','Parser.py',432),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','Parser.py',433),
  ('function_call_parameter_list -> function_call_parameter fc_parameter_list_COLON_PARAMETER','function_call_parameter_list',2,'p_function_call_parameter_list','Parser.py',442),
  ('function_call_parameter_list -> function_call_parameter','function_call_parameter_list',1,'p_function_call_parameter_list','Parser.py',443),
  ('fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter fc_parameter_list_COLON_PARAMETER','fc_parameter_list_COLON_PARAMETER',3,'p_fc_parameter_list_COLON_PARAMETER','Parser.py',452),
  ('fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter','fc_parameter_list_COLON_PARAMETER',2,'p_fc_parameter_list_COLON_PARAMETER','Parser.py',453),
  ('function_call_parameter -> expr','function_call_parameter',1,'p_function_call_parameter','Parser.py',462),
  ('function_call_parameter -> AMPERSAND VARIABLE','function_call_parameter',2,'p_function_call_parameter','Parser.py',463),
  ('variable -> VARIABLE variable_array_selector','variable',2,'p_variable','Parser.py',472),
  ('variable -> VARIABLE','variable',1,'p_variable','Parser.py',473),
  ('selector -> LBRACKET expr RBRACKET','selector',3,'p_selector','Parser.py',482),
  ('selector -> LBRACKET RBRACKET','selector',2,'p_selector','Parser.py',483),
  ('function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements','function_declaration_statement',4,'p_function_declaration_statement','Parser.py',492),
  ('fds_statements -> LKEY inner_statement_MUL RKEY','fds_statements',3,'p_fds_statements','Parser.py',498),
  ('fds_statements -> LKEY RKEY','fds_statements',2,'p_fds_statements','Parser.py',499),
  ('fds_id -> AMPERSAND ID','fds_id',2,'p_fds_id','Parser.py',508),
  ('fds_id -> ID','fds_id',1,'p_fds_id','Parser.py',509),
  ('fds_parameter -> LPAREN parameter_list RPAREN','fds_parameter',3,'p_fds_parameter','Parser.py',518),
  ('fds_parameter -> LPAREN RPAREN','fds_parameter',2,'p_fds_parameter','Parser.py',519),
  ('parameter_list -> parameter parameter_list_colon_parameter','parameter_list',2,'p_parameter_list','Parser.py',528),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','Parser.py',529),
  ('parameter -> VARIABLE','parameter',1,'p_parameter','Parser.py',538),
  ('parameter -> parameter_prefix VARIABLE','parameter',2,'p_parameter','Parser.py',539),
  ('parameter -> VARIABLE ASSIGN static_scalar','parameter',3,'p_parameter','Parser.py',540),
  ('parameter -> parameter_prefix VARIABLE ASSIGN static_scalar','parameter',4,'p_parameter','Parser.py',541),
  ('parameter_prefix -> parameter_type AMPERSAND','parameter_prefix',2,'p_parameter_prefix','Parser.py',554),
  ('parameter_prefix -> AMPERSAND','parameter_prefix',1,'p_parameter_prefix','Parser.py',555),
  ('parameter_prefix -> parameter_type','parameter_prefix',1,'p_parameter_prefix','Parser.py',556),
  ('parameter_type -> INT_TYPE','parameter_type',1,'p_parameter_type','Parser.py',567),
  ('parameter_type -> STRING_TYPE','parameter_type',1,'p_parameter_type','Parser.py',568),
  ('parameter_type -> FLOAT_TYPE','parameter_type',1,'p_parameter_type','Parser.py',569),
  ('parameter_type -> ARRAY_TYPE','parameter_type',1,'p_parameter_type','Parser.py',570),
  ('parameter_type -> BOOL_TYPE','parameter_type',1,'p_parameter_type','Parser.py',571),
  ('static_scalar -> common_scalar','static_scalar',1,'p_static_scalar','Parser.py',577),
  ('static_scalar -> PLUS static_scalar','static_scalar',2,'p_static_scalar','Parser.py',578),
  ('static_scalar -> MINUS static_scalar','static_scalar',2,'p_static_scalar','Parser.py',579),
  ('common_scalar -> NUMBER_REAL','common_scalar',1,'p_common_scalar','Parser.py',590),
  ('common_scalar -> NUMBER_INTEGER','common_scalar',1,'p_common_scalar','Parser.py',591),
  ('common_scalar -> CONSTANT_ENCAPSED_STRING','common_scalar',1,'p_common_scalar','Parser.py',592),
  ('array_pair_list -> array_pair array_pair_list_ARR_PAIR','array_pair_list',2,'p_array_pair_list','Parser.py',598),
  ('array_pair_list -> array_pair','array_pair_list',1,'p_array_pair_list','Parser.py',599),
  ('array_pair -> expr','array_pair',1,'p_array_pair','Parser.py',608),
  ('array_pair -> AMPERSAND variable','array_pair',2,'p_array_pair','Parser.py',609),
  ('array_pair -> expr ATTR_ASSOC expr','array_pair',3,'p_array_pair','Parser.py',610),
  ('array_pair -> expr ATTR_ASSOC AMPERSAND variable','array_pair',4,'p_array_pair','Parser.py',611),
  ('statement_MUL -> statement statement_MUL','statement_MUL',2,'p_statement_MUL','Parser.py',627),
  ('statement_MUL -> statement','statement_MUL',1,'p_statement_MUL','Parser.py',628),
  ('statement_block_optional -> statement','statement_block_optional',1,'p_statement_block_optional','Parser.py',637),
  ('statement_block_optional -> LKEY statement_MUL RKEY','statement_block_optional',3,'p_statement_block_optional','Parser.py',638),
  ('statement_block_optional -> LKEY RKEY','statement_block_optional',2,'p_statement_block_optional','Parser.py',639),
  ('parameter_list_colon_parameter -> COLON parameter parameter_list_colon_parameter','parameter_list_colon_parameter',3,'p_parameter_list_colon_parameter','Parser.py',650),
  ('parameter_list_colon_parameter -> COLON parameter','parameter_list_colon_parameter',2,'p_parameter_list_colon_parameter','Parser.py',651),
  ('variable_array_selector -> selector variable_array_selector','variable_array_selector',2,'p_variable_array_selector','Parser.py',660),
  ('variable_array_selector -> selector','variable_array_selector',1,'p_variable_array_selector','Parser.py',661),
  ('array_pair_list_ARR_PAIR -> COLON array_pair array_pair_list_ARR_PAIR','array_pair_list_ARR_PAIR',3,'p_array_pair_list_ARR_PAIR','Parser.py',670),
  ('array_pair_list_ARR_PAIR -> COLON array_pair','array_pair_list_ARR_PAIR',2,'p_array_pair_list_ARR_PAIR','Parser.py',671),
]
