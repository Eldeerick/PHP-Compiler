Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADD_ASSIGN
    AND
    APOSTROFE
    ARROBA
    AS
    ASPAS
    BREAK
    CASE
    CLONE
    COMMENT_MULTI
    COMMENT_SINGLE
    CONCATENATE
    CONTINUE
    CRASE
    DDOT
    DECLARE
    DECREMENT
    DIE
    DIVIDE
    DIVIDE_ASSIGN
    DO
    DOLAR
    ELSE
    ELSEIF
    ENDDECLARE
    ENDFOR
    ENDFOREACH
    ENDIF
    ENDWHILE
    EQUAL
    EXIT
    FALSE
    FOR
    FOREACH
    GLOBAL
    GREAT_EQUAL
    GREAT_THAN
    IDENTATION
    IF
    INCREMENT
    INTE_DOT
    LBRACKET
    LEFT_LOGICAL
    LESS_EQUAL
    LESS_THAN
    LIST
    MOD_ASSIGN
    NOT_EQUAL
    OR
    PERCENT
    PLUS_ASSIGN
    RBRACKET
    RETURN
    RIGHT_LOGICAL
    SEMICOLON
    STRING
    SUB_ASSIGN
    SWITCH
    TIMES
    TRUE
    UNSET
    VAR
    WHILE

Grammar

Rule 0     S' -> main
Rule 1     main -> BEGIN_PROGRAM main_INNER END_PROGRAM
Rule 2     main_INNER -> inner_statement main_INNER
Rule 3     main_INNER -> <empty>
Rule 4     inner_statement -> function_declaration_statement
Rule 5     inner_statement -> <empty>
Rule 6     AMPERSAND_OPT -> AMPERSAND
Rule 7     AMPERSAND_OPT -> <empty>
Rule 8     function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY
Rule 9     INNER_STATEMENT_OPT -> inner_statement
Rule 10    INNER_STATEMENT_OPT -> <empty>
Rule 11    parameter_list -> parameter parameter_list_COLON_PARAMETER
Rule 12    parameter_list_COLON_PARAMETER -> COLON parameter parameter_list_COLON_PARAMETER
Rule 13    parameter_list_COLON_PARAMETER -> <empty>
Rule 14    parameter -> parameter_type AMPERSAND_OPT VARIABLE parameter_ASSIGN_STATIC_OPT
Rule 15    parameter_type -> INT_TYPE
Rule 16    parameter_type -> BOOLEAN_TYPE
Rule 17    parameter_type -> STRING_TYPE
Rule 18    parameter_type -> FLOAT_TYPE
Rule 19    parameter_type -> ARRAY_TYPE
Rule 20    parameter_type -> BOOL_TYPE
Rule 21    parameter_type -> REAL_TYPE
Rule 22    parameter_type -> DOUBLE_TYPE
Rule 23    parameter_type -> <empty>
Rule 24    parameter_ASSIGN_STATIC_OPT -> ASSIGN static_scalar
Rule 25    parameter_ASSIGN_STATIC_OPT -> <empty>
Rule 26    static_scalar -> common_scalar
Rule 27    static_scalar -> PLUS static_scalar
Rule 28    static_scalar -> MINUS static_scalar
Rule 29    common_scalar -> NUMBER_REAL
Rule 30    common_scalar -> NUMBER_INTEGER
Rule 31    common_scalar -> CONSTANT_ENCAPSED_STRING
Rule 32    static_scalar_OPT -> static_array_pair_list
Rule 33    static_scalar_OPT -> <empty>
Rule 34    static_array_pair_list -> static_array_pair static_array_pair_list_COLON_STATIC static_array_pair_list_COLON
Rule 35    static_array_pair_list_COLON_STATIC -> COLON static_array_pair static_array_pair_list_COLON_STATIC
Rule 36    static_array_pair_list_COLON_STATIC -> <empty>
Rule 37    static_array_pair_list_COLON -> COLON
Rule 38    static_array_pair_list_COLON -> <empty>
Rule 39    static_array_pair -> static_scalar static_array_pair_ATTR_STATIC
Rule 40    static_array_pair_ATTR_STATIC -> ATTR_ASSOC static_scalar
Rule 41    static_array_pair_ATTR_STATIC -> <empty>

Terminals, with rules where they appear

ADD_ASSIGN           : 
AMPERSAND            : 6
AND                  : 
APOSTROFE            : 
ARRAY_TYPE           : 19
ARROBA               : 
AS                   : 
ASPAS                : 
ASSIGN               : 24
ATTR_ASSOC           : 40
BEGIN_PROGRAM        : 1
BOOLEAN_TYPE         : 16
BOOL_TYPE            : 20
BREAK                : 
CASE                 : 
CLONE                : 
COLON                : 12 35 37
COMMENT_MULTI        : 
COMMENT_SINGLE       : 
CONCATENATE          : 
CONSTANT_ENCAPSED_STRING : 31
CONTINUE             : 
CRASE                : 
DDOT                 : 
DECLARE              : 
DECREMENT            : 
DIE                  : 
DIVIDE               : 
DIVIDE_ASSIGN        : 
DO                   : 
DOLAR                : 
DOUBLE_TYPE          : 22
ELSE                 : 
ELSEIF               : 
ENDDECLARE           : 
ENDFOR               : 
ENDFOREACH           : 
ENDIF                : 
ENDWHILE             : 
END_PROGRAM          : 1
EQUAL                : 
EXIT                 : 
FALSE                : 
FLOAT_TYPE           : 18
FOR                  : 
FOREACH              : 
FUNCTION             : 8
GLOBAL               : 
GREAT_EQUAL          : 
GREAT_THAN           : 
ID                   : 8
IDENTATION           : 
IF                   : 
INCREMENT            : 
INTE_DOT             : 
INT_TYPE             : 15
LBRACKET             : 
LEFT_LOGICAL         : 
LESS_EQUAL           : 
LESS_THAN            : 
LIST                 : 
LKEY                 : 8
LPAREN               : 8
MINUS                : 28
MOD_ASSIGN           : 
NOT_EQUAL            : 
NUMBER_INTEGER       : 30
NUMBER_REAL          : 29
OR                   : 
PERCENT              : 
PLUS                 : 27
PLUS_ASSIGN          : 
RBRACKET             : 
REAL_TYPE            : 21
RETURN               : 
RIGHT_LOGICAL        : 
RKEY                 : 8
RPAREN               : 8
SEMICOLON            : 
STRING               : 
STRING_TYPE          : 17
SUB_ASSIGN           : 
SWITCH               : 
TIMES                : 
TRUE                 : 
UNSET                : 
VAR                  : 
VARIABLE             : 14
WHILE                : 
error                : 

Nonterminals, with rules where they appear

AMPERSAND_OPT        : 8 14
INNER_STATEMENT_OPT  : 
common_scalar        : 26
function_declaration_statement : 4
inner_statement      : 2 8 9
main                 : 0
main_INNER           : 1 2
parameter            : 11 12
parameter_ASSIGN_STATIC_OPT : 14
parameter_list       : 8
parameter_list_COLON_PARAMETER : 11 12
parameter_type       : 14
static_array_pair    : 34 35
static_array_pair_ATTR_STATIC : 39
static_array_pair_list : 32
static_array_pair_list_COLON : 34
static_array_pair_list_COLON_STATIC : 34 35
static_scalar        : 24 27 28 39 40
static_scalar_OPT    : 

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . BEGIN_PROGRAM main_INNER END_PROGRAM

    BEGIN_PROGRAM   shift and go to state 2

    main                           shift and go to state 1

state 1

    (0) S' -> main .



state 2

    (1) main -> BEGIN_PROGRAM . main_INNER END_PROGRAM
    (2) main_INNER -> . inner_statement main_INNER
    (3) main_INNER -> .
    (4) inner_statement -> . function_declaration_statement
    (5) inner_statement -> .
    (8) function_declaration_statement -> . FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY

  ! reduce/reduce conflict for END_PROGRAM resolved using rule 3 (main_INNER -> .)
  ! shift/reduce conflict for FUNCTION resolved as shift
    END_PROGRAM     reduce using rule 3 (main_INNER -> .)
    FUNCTION        shift and go to state 6

  ! FUNCTION        [ reduce using rule 5 (inner_statement -> .) ]
  ! END_PROGRAM     [ reduce using rule 5 (inner_statement -> .) ]

    main_INNER                     shift and go to state 3
    inner_statement                shift and go to state 4
    function_declaration_statement shift and go to state 5

state 3

    (1) main -> BEGIN_PROGRAM main_INNER . END_PROGRAM

    END_PROGRAM     shift and go to state 7


state 4

    (2) main_INNER -> inner_statement . main_INNER
    (2) main_INNER -> . inner_statement main_INNER
    (3) main_INNER -> .
    (4) inner_statement -> . function_declaration_statement
    (5) inner_statement -> .
    (8) function_declaration_statement -> . FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY

  ! reduce/reduce conflict for END_PROGRAM resolved using rule 3 (main_INNER -> .)
  ! shift/reduce conflict for FUNCTION resolved as shift
    END_PROGRAM     reduce using rule 3 (main_INNER -> .)
    FUNCTION        shift and go to state 6

  ! FUNCTION        [ reduce using rule 5 (inner_statement -> .) ]
  ! END_PROGRAM     [ reduce using rule 5 (inner_statement -> .) ]

    inner_statement                shift and go to state 4
    main_INNER                     shift and go to state 8
    function_declaration_statement shift and go to state 5

state 5

    (4) inner_statement -> function_declaration_statement .

    FUNCTION        reduce using rule 4 (inner_statement -> function_declaration_statement .)
    END_PROGRAM     reduce using rule 4 (inner_statement -> function_declaration_statement .)
    RKEY            reduce using rule 4 (inner_statement -> function_declaration_statement .)


state 6

    (8) function_declaration_statement -> FUNCTION . AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY
    (6) AMPERSAND_OPT -> . AMPERSAND
    (7) AMPERSAND_OPT -> .

    AMPERSAND       shift and go to state 10
    ID              reduce using rule 7 (AMPERSAND_OPT -> .)

    AMPERSAND_OPT                  shift and go to state 9

state 7

    (1) main -> BEGIN_PROGRAM main_INNER END_PROGRAM .

    $end            reduce using rule 1 (main -> BEGIN_PROGRAM main_INNER END_PROGRAM .)


state 8

    (2) main_INNER -> inner_statement main_INNER .

    END_PROGRAM     reduce using rule 2 (main_INNER -> inner_statement main_INNER .)


state 9

    (8) function_declaration_statement -> FUNCTION AMPERSAND_OPT . ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY

    ID              shift and go to state 11


state 10

    (6) AMPERSAND_OPT -> AMPERSAND .

    ID              reduce using rule 6 (AMPERSAND_OPT -> AMPERSAND .)
    VARIABLE        reduce using rule 6 (AMPERSAND_OPT -> AMPERSAND .)


state 11

    (8) function_declaration_statement -> FUNCTION AMPERSAND_OPT ID . LPAREN parameter_list RPAREN LKEY inner_statement RKEY

    LPAREN          shift and go to state 12


state 12

    (8) function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN . parameter_list RPAREN LKEY inner_statement RKEY
    (11) parameter_list -> . parameter parameter_list_COLON_PARAMETER
    (14) parameter -> . parameter_type AMPERSAND_OPT VARIABLE parameter_ASSIGN_STATIC_OPT
    (15) parameter_type -> . INT_TYPE
    (16) parameter_type -> . BOOLEAN_TYPE
    (17) parameter_type -> . STRING_TYPE
    (18) parameter_type -> . FLOAT_TYPE
    (19) parameter_type -> . ARRAY_TYPE
    (20) parameter_type -> . BOOL_TYPE
    (21) parameter_type -> . REAL_TYPE
    (22) parameter_type -> . DOUBLE_TYPE
    (23) parameter_type -> .

    INT_TYPE        shift and go to state 16
    BOOLEAN_TYPE    shift and go to state 17
    STRING_TYPE     shift and go to state 18
    FLOAT_TYPE      shift and go to state 19
    ARRAY_TYPE      shift and go to state 20
    BOOL_TYPE       shift and go to state 21
    REAL_TYPE       shift and go to state 22
    DOUBLE_TYPE     shift and go to state 23
    AMPERSAND       reduce using rule 23 (parameter_type -> .)
    VARIABLE        reduce using rule 23 (parameter_type -> .)

    parameter_list                 shift and go to state 13
    parameter                      shift and go to state 14
    parameter_type                 shift and go to state 15

state 13

    (8) function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list . RPAREN LKEY inner_statement RKEY

    RPAREN          shift and go to state 24


state 14

    (11) parameter_list -> parameter . parameter_list_COLON_PARAMETER
    (12) parameter_list_COLON_PARAMETER -> . COLON parameter parameter_list_COLON_PARAMETER
    (13) parameter_list_COLON_PARAMETER -> .

    COLON           shift and go to state 26
    RPAREN          reduce using rule 13 (parameter_list_COLON_PARAMETER -> .)

    parameter_list_COLON_PARAMETER shift and go to state 25

state 15

    (14) parameter -> parameter_type . AMPERSAND_OPT VARIABLE parameter_ASSIGN_STATIC_OPT
    (6) AMPERSAND_OPT -> . AMPERSAND
    (7) AMPERSAND_OPT -> .

    AMPERSAND       shift and go to state 10
    VARIABLE        reduce using rule 7 (AMPERSAND_OPT -> .)

    AMPERSAND_OPT                  shift and go to state 27

state 16

    (15) parameter_type -> INT_TYPE .

    AMPERSAND       reduce using rule 15 (parameter_type -> INT_TYPE .)
    VARIABLE        reduce using rule 15 (parameter_type -> INT_TYPE .)


state 17

    (16) parameter_type -> BOOLEAN_TYPE .

    AMPERSAND       reduce using rule 16 (parameter_type -> BOOLEAN_TYPE .)
    VARIABLE        reduce using rule 16 (parameter_type -> BOOLEAN_TYPE .)


state 18

    (17) parameter_type -> STRING_TYPE .

    AMPERSAND       reduce using rule 17 (parameter_type -> STRING_TYPE .)
    VARIABLE        reduce using rule 17 (parameter_type -> STRING_TYPE .)


state 19

    (18) parameter_type -> FLOAT_TYPE .

    AMPERSAND       reduce using rule 18 (parameter_type -> FLOAT_TYPE .)
    VARIABLE        reduce using rule 18 (parameter_type -> FLOAT_TYPE .)


state 20

    (19) parameter_type -> ARRAY_TYPE .

    AMPERSAND       reduce using rule 19 (parameter_type -> ARRAY_TYPE .)
    VARIABLE        reduce using rule 19 (parameter_type -> ARRAY_TYPE .)


state 21

    (20) parameter_type -> BOOL_TYPE .

    AMPERSAND       reduce using rule 20 (parameter_type -> BOOL_TYPE .)
    VARIABLE        reduce using rule 20 (parameter_type -> BOOL_TYPE .)


state 22

    (21) parameter_type -> REAL_TYPE .

    AMPERSAND       reduce using rule 21 (parameter_type -> REAL_TYPE .)
    VARIABLE        reduce using rule 21 (parameter_type -> REAL_TYPE .)


state 23

    (22) parameter_type -> DOUBLE_TYPE .

    AMPERSAND       reduce using rule 22 (parameter_type -> DOUBLE_TYPE .)
    VARIABLE        reduce using rule 22 (parameter_type -> DOUBLE_TYPE .)


state 24

    (8) function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN . LKEY inner_statement RKEY

    LKEY            shift and go to state 28


state 25

    (11) parameter_list -> parameter parameter_list_COLON_PARAMETER .

    RPAREN          reduce using rule 11 (parameter_list -> parameter parameter_list_COLON_PARAMETER .)


state 26

    (12) parameter_list_COLON_PARAMETER -> COLON . parameter parameter_list_COLON_PARAMETER
    (14) parameter -> . parameter_type AMPERSAND_OPT VARIABLE parameter_ASSIGN_STATIC_OPT
    (15) parameter_type -> . INT_TYPE
    (16) parameter_type -> . BOOLEAN_TYPE
    (17) parameter_type -> . STRING_TYPE
    (18) parameter_type -> . FLOAT_TYPE
    (19) parameter_type -> . ARRAY_TYPE
    (20) parameter_type -> . BOOL_TYPE
    (21) parameter_type -> . REAL_TYPE
    (22) parameter_type -> . DOUBLE_TYPE
    (23) parameter_type -> .

    INT_TYPE        shift and go to state 16
    BOOLEAN_TYPE    shift and go to state 17
    STRING_TYPE     shift and go to state 18
    FLOAT_TYPE      shift and go to state 19
    ARRAY_TYPE      shift and go to state 20
    BOOL_TYPE       shift and go to state 21
    REAL_TYPE       shift and go to state 22
    DOUBLE_TYPE     shift and go to state 23
    AMPERSAND       reduce using rule 23 (parameter_type -> .)
    VARIABLE        reduce using rule 23 (parameter_type -> .)

    parameter                      shift and go to state 29
    parameter_type                 shift and go to state 15

state 27

    (14) parameter -> parameter_type AMPERSAND_OPT . VARIABLE parameter_ASSIGN_STATIC_OPT

    VARIABLE        shift and go to state 30


state 28

    (8) function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY . inner_statement RKEY
    (4) inner_statement -> . function_declaration_statement
    (5) inner_statement -> .
    (8) function_declaration_statement -> . FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY

    RKEY            reduce using rule 5 (inner_statement -> .)
    FUNCTION        shift and go to state 6

    inner_statement                shift and go to state 31
    function_declaration_statement shift and go to state 5

state 29

    (12) parameter_list_COLON_PARAMETER -> COLON parameter . parameter_list_COLON_PARAMETER
    (12) parameter_list_COLON_PARAMETER -> . COLON parameter parameter_list_COLON_PARAMETER
    (13) parameter_list_COLON_PARAMETER -> .

    COLON           shift and go to state 26
    RPAREN          reduce using rule 13 (parameter_list_COLON_PARAMETER -> .)

    parameter_list_COLON_PARAMETER shift and go to state 32

state 30

    (14) parameter -> parameter_type AMPERSAND_OPT VARIABLE . parameter_ASSIGN_STATIC_OPT
    (24) parameter_ASSIGN_STATIC_OPT -> . ASSIGN static_scalar
    (25) parameter_ASSIGN_STATIC_OPT -> .

    ASSIGN          shift and go to state 34
    COLON           reduce using rule 25 (parameter_ASSIGN_STATIC_OPT -> .)
    RPAREN          reduce using rule 25 (parameter_ASSIGN_STATIC_OPT -> .)

    parameter_ASSIGN_STATIC_OPT    shift and go to state 33

state 31

    (8) function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement . RKEY

    RKEY            shift and go to state 35


state 32

    (12) parameter_list_COLON_PARAMETER -> COLON parameter parameter_list_COLON_PARAMETER .

    RPAREN          reduce using rule 12 (parameter_list_COLON_PARAMETER -> COLON parameter parameter_list_COLON_PARAMETER .)


state 33

    (14) parameter -> parameter_type AMPERSAND_OPT VARIABLE parameter_ASSIGN_STATIC_OPT .

    COLON           reduce using rule 14 (parameter -> parameter_type AMPERSAND_OPT VARIABLE parameter_ASSIGN_STATIC_OPT .)
    RPAREN          reduce using rule 14 (parameter -> parameter_type AMPERSAND_OPT VARIABLE parameter_ASSIGN_STATIC_OPT .)


state 34

    (24) parameter_ASSIGN_STATIC_OPT -> ASSIGN . static_scalar
    (26) static_scalar -> . common_scalar
    (27) static_scalar -> . PLUS static_scalar
    (28) static_scalar -> . MINUS static_scalar
    (29) common_scalar -> . NUMBER_REAL
    (30) common_scalar -> . NUMBER_INTEGER
    (31) common_scalar -> . CONSTANT_ENCAPSED_STRING

    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    NUMBER_REAL     shift and go to state 40
    NUMBER_INTEGER  shift and go to state 41
    CONSTANT_ENCAPSED_STRING shift and go to state 42

    static_scalar                  shift and go to state 36
    common_scalar                  shift and go to state 37

state 35

    (8) function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY .

    FUNCTION        reduce using rule 8 (function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY .)
    END_PROGRAM     reduce using rule 8 (function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY .)
    RKEY            reduce using rule 8 (function_declaration_statement -> FUNCTION AMPERSAND_OPT ID LPAREN parameter_list RPAREN LKEY inner_statement RKEY .)


state 36

    (24) parameter_ASSIGN_STATIC_OPT -> ASSIGN static_scalar .

    COLON           reduce using rule 24 (parameter_ASSIGN_STATIC_OPT -> ASSIGN static_scalar .)
    RPAREN          reduce using rule 24 (parameter_ASSIGN_STATIC_OPT -> ASSIGN static_scalar .)


state 37

    (26) static_scalar -> common_scalar .

    COLON           reduce using rule 26 (static_scalar -> common_scalar .)
    RPAREN          reduce using rule 26 (static_scalar -> common_scalar .)


state 38

    (27) static_scalar -> PLUS . static_scalar
    (26) static_scalar -> . common_scalar
    (27) static_scalar -> . PLUS static_scalar
    (28) static_scalar -> . MINUS static_scalar
    (29) common_scalar -> . NUMBER_REAL
    (30) common_scalar -> . NUMBER_INTEGER
    (31) common_scalar -> . CONSTANT_ENCAPSED_STRING

    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    NUMBER_REAL     shift and go to state 40
    NUMBER_INTEGER  shift and go to state 41
    CONSTANT_ENCAPSED_STRING shift and go to state 42

    static_scalar                  shift and go to state 43
    common_scalar                  shift and go to state 37

state 39

    (28) static_scalar -> MINUS . static_scalar
    (26) static_scalar -> . common_scalar
    (27) static_scalar -> . PLUS static_scalar
    (28) static_scalar -> . MINUS static_scalar
    (29) common_scalar -> . NUMBER_REAL
    (30) common_scalar -> . NUMBER_INTEGER
    (31) common_scalar -> . CONSTANT_ENCAPSED_STRING

    PLUS            shift and go to state 38
    MINUS           shift and go to state 39
    NUMBER_REAL     shift and go to state 40
    NUMBER_INTEGER  shift and go to state 41
    CONSTANT_ENCAPSED_STRING shift and go to state 42

    static_scalar                  shift and go to state 44
    common_scalar                  shift and go to state 37

state 40

    (29) common_scalar -> NUMBER_REAL .

    COLON           reduce using rule 29 (common_scalar -> NUMBER_REAL .)
    RPAREN          reduce using rule 29 (common_scalar -> NUMBER_REAL .)


state 41

    (30) common_scalar -> NUMBER_INTEGER .

    COLON           reduce using rule 30 (common_scalar -> NUMBER_INTEGER .)
    RPAREN          reduce using rule 30 (common_scalar -> NUMBER_INTEGER .)


state 42

    (31) common_scalar -> CONSTANT_ENCAPSED_STRING .

    COLON           reduce using rule 31 (common_scalar -> CONSTANT_ENCAPSED_STRING .)
    RPAREN          reduce using rule 31 (common_scalar -> CONSTANT_ENCAPSED_STRING .)


state 43

    (27) static_scalar -> PLUS static_scalar .

    COLON           reduce using rule 27 (static_scalar -> PLUS static_scalar .)
    RPAREN          reduce using rule 27 (static_scalar -> PLUS static_scalar .)


state 44

    (28) static_scalar -> MINUS static_scalar .

    COLON           reduce using rule 28 (static_scalar -> MINUS static_scalar .)
    RPAREN          reduce using rule 28 (static_scalar -> MINUS static_scalar .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 2 resolved as shift
WARNING: shift/reduce conflict for FUNCTION in state 4 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (main_INNER -> <empty>)
WARNING: rejected rule (inner_statement -> <empty>) in state 2
WARNING: reduce/reduce conflict in state 4 resolved using rule (main_INNER -> <empty>)
WARNING: rejected rule (inner_statement -> <empty>) in state 4
