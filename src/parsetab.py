
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightADD_ASSIGNSUB_ASSIGNMOD_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNASSIGNleftINTE_DOTDDOTleftANDORleftEQUALSNOT_EQUALLESS_THANLESS_EQUALGREAT_THANGREAT_EQUALleftPLUSMINUSleftTIMESDIVIDEPERCENTrightEXC_DOTrightINCREMENTDECREMENTRPARENrightUMINUSADD_ASSIGN AMPERSAND AND ARRAY_TYPE AS ASSIGN ATTR_ASSOC BEGIN_PROGRAM BOOL_TYPE BREAK COLON COMMENT_MULTI COMMENT_SINGLE CONSTANT_ENCAPSED_STRING CONTINUE DDOT DECREMENT DIE DIVIDE DIVIDE_ASSIGN DO DOLAR ELSE ELSEIF END_PROGRAM EQUALS EXC_DOT EXIT FALSE FLOAT_TYPE FOR FOREACH FUNCTION GLOBAL GREAT_EQUAL GREAT_THAN ID IDENTATION IF INCREMENT INTE_DOT INT_TYPE LBRACKET LEFT_LOGICAL LESS_EQUAL LESS_THAN LKEY LPAREN MINUS MOD_ASSIGN NOT_EQUAL NUMBER_INTEGER NUMBER_REAL OR PERCENT PLUS RBRACKET RETURN RIGHT_LOGICAL RKEY RPAREN SEMICOLON STRING_TYPE SUB_ASSIGN TIMES TIMES_ASSIGN TRUE VARIABLE WHILE\n  main : BEGIN_PROGRAM main_program END_PROGRAM \n  | BEGIN_PROGRAM END_PROGRAM \n  \n  main_program : inner_statement main_program\n    | inner_statement\n  \n  inner_statement : function_declaration_statement\n    | statement\n  \n  inner_statement_MUL : inner_statement inner_statement_MUL\n    | inner_statement\n  \n  expr : expr PLUS expr\n    | expr MINUS expr \n    | MINUS expr %prec UMINUS\n    | expr DIVIDE expr\n    | expr PERCENT expr\n    | expr TIMES expr   \n    | expr EQUALS expr\n    | expr NOT_EQUAL expr\n    | expr GREAT_THAN expr \n    | expr GREAT_EQUAL expr\n    | expr LESS_THAN expr\n    | expr LESS_EQUAL expr\n    | expr AND expr\n    | expr OR expr\n    | EXC_DOT expr\n    | INCREMENT variable\n    | variable INCREMENT\n    | DECREMENT variable\n    | variable DECREMENT\n    | variable\n    | LPAREN expr RPAREN\n    | ARRAY_TYPE array_declaration\n    | LPAREN typecast_operator RPAREN expr \n    | function_call\n    | expr INTE_DOT expr DDOT expr\n    | variable ADD_ASSIGN expr\n    | variable SUB_ASSIGN expr\n    | variable MOD_ASSIGN expr\n    | variable TIMES_ASSIGN expr\n    | variable DIVIDE_ASSIGN expr\n    | variable ASSIGN expr\n    | NUMBER_INTEGER\n    | NUMBER_REAL\n    | CONSTANT_ENCAPSED_STRING\n    | TRUE\n    | FALSE\n  \n  typecast_operator : INT_TYPE\n    | FLOAT_TYPE\n    | ARRAY_TYPE\n    | STRING_TYPE\n    | BOOL_TYPE\n  \n  exit_statement : EXIT exit_expr\n    | EXIT\n  \n  die_statement : DIE exit_expr\n    | DIE\n  \n  exit_expr : LPAREN expr RPAREN\n    | LPAREN RPAREN\n  \n  array_declaration : LPAREN array_pair_list RPAREN\n    | LPAREN RPAREN\n  \n  statement : expr SEMICOLON \n    | while_statement\n    | if_statement\n    | do_statement\n    | for_statement\n    | foreach_statement\n    | break_statement\n    | continue_statement \n    | return_statement\n    | exit_statement SEMICOLON\n    | die_statement SEMICOLON\n    | global_statement SEMICOLON\n  \n  if_statement : IF expr_parentheses statement_block_optional\n  \n  \n  global_statement : GLOBAL global_var statement_COLON_GLOBAL \n    | GLOBAL global_var \n  \n  while_statement : WHILE expr_parentheses statement_block_optional\n  \n  do_statement : DO statement_block_optional WHILE expr_parentheses SEMICOLON\n  \n  break_statement : BREAK expr SEMICOLON\n    | BREAK SEMICOLON\n  \n  continue_statement : CONTINUE expr SEMICOLON\n    | CONTINUE SEMICOLON\n  \n  return_statement : RETURN expr SEMICOLON \n    | RETURN SEMICOLON \n  \n  for_statement : FOR LPAREN for_parameters RPAREN statement_block_optional\n  \n  for_parameters : SEMICOLON SEMICOLON \n  | for_expr_OPT SEMICOLON SEMICOLON\n  | for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON \n  | for_expr_OPT SEMICOLON SEMICOLON for_expr_OPT\n  | SEMICOLON for_expr_OPT SEMICOLON\n  | SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT\n  | SEMICOLON SEMICOLON for_expr_OPT\n  | for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT\n  \n  global_var : VARIABLE\n  \n  statement_COLON_GLOBAL : COLON global_var statement_COLON_GLOBAL\n    | COLON global_var\n  \n  ampersand_variable : AMPERSAND VARIABLE\n    | VARIABLE\n  \n  expr_parentheses : LPAREN expr RPAREN\n  \n  foreach_statement : FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional\n  | FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional\n  \n  for_expr_OPT : expr for_expr_COLON_EXPR\n  | expr\n  \n  for_expr_COLON_EXPR : COLON expr for_expr_COLON_EXPR\n    | COLON expr\n  \n  function_call : ID LPAREN function_call_parameter_list RPAREN\n    | ID LPAREN RPAREN\n  \n  function_call_parameter_list : function_call_parameter fc_parameter_list_COLON_PARAMETER\n    |  function_call_parameter\n  \n  fc_parameter_list_COLON_PARAMETER : COLON function_call_parameter fc_parameter_list_COLON_PARAMETER\n    | COLON function_call_parameter\n  \n  function_call_parameter : expr\n    | AMPERSAND VARIABLE\n  \n  variable : VARIABLE variable_array_selector\n    | VARIABLE\n  \n  selector : LBRACKET expr RBRACKET \n    | LBRACKET RBRACKET\n  \n  function_declaration_statement : FUNCTION fds_id fds_parameter fds_statements\n  \n  fds_statements : LKEY inner_statement_MUL RKEY\n    | LKEY RKEY\n  \n  fds_id : AMPERSAND ID\n    | ID\n  \n  fds_parameter : LPAREN parameter_list RPAREN\n    | LPAREN RPAREN\n  \n  parameter_list : parameter parameter_list_colon_parameter \n    | parameter\n   \n  parameter : VARIABLE \n    | parameter_prefix VARIABLE\n    | VARIABLE ASSIGN static_scalar\n    | parameter_prefix VARIABLE ASSIGN static_scalar\n  \n  parameter_prefix : parameter_type AMPERSAND\n    | AMPERSAND\n    | parameter_type\n  \n  parameter_type : INT_TYPE\n    | STRING_TYPE\n    | FLOAT_TYPE\n    | ARRAY_TYPE\n    | BOOL_TYPE\n  \n  static_scalar : common_scalar \n    | PLUS static_scalar\n    | MINUS static_scalar\n  \n  common_scalar : NUMBER_REAL\n    | NUMBER_INTEGER\n    | CONSTANT_ENCAPSED_STRING\n  \n  array_pair_list : array_pair array_pair_list_ARR_PAIR \n    | array_pair\n   \n  array_pair : expr\n    | AMPERSAND variable\n    | expr ATTR_ASSOC expr\n    | expr ATTR_ASSOC AMPERSAND variable\n  \n  statement_MUL : statement statement_MUL\n    | statement\n  \n  statement_block_optional : statement \n    | LKEY statement_MUL RKEY \n    | LKEY RKEY\n  \n  parameter_list_colon_parameter : COLON parameter parameter_list_colon_parameter\n    | COLON parameter\n  \n    variable_array_selector : selector variable_array_selector\n    | selector\n  \n  array_pair_list_ARR_PAIR : COLON array_pair array_pair_list_ARR_PAIR\n    | COLON array_pair\n  '
    
_lr_action_items = {'BEGIN_PROGRAM':([0,],[2,]),'$end':([1,4,47,],[0,-2,-1,]),'END_PROGRAM':([2,3,5,6,7,10,11,12,13,14,15,16,17,48,52,67,68,69,95,100,102,104,144,146,149,156,157,158,171,194,211,223,224,235,261,264,],[4,47,-4,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,-3,-58,-67,-68,-69,-149,-76,-78,-80,-73,-70,-151,-75,-77,-79,-114,-150,-116,-74,-81,-115,-96,-97,]),'FUNCTION':([2,5,6,7,10,11,12,13,14,15,16,17,52,67,68,69,95,100,102,104,144,146,149,156,157,158,171,172,194,211,212,223,224,235,261,264,],[8,8,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,-58,-67,-68,-69,-149,-76,-78,-80,-73,-70,-151,-75,-77,-79,-114,8,-150,-116,8,-74,-81,-115,-96,-97,]),'MINUS':([2,5,6,7,9,10,11,12,13,14,15,16,17,21,22,24,26,28,29,30,31,32,33,36,39,40,41,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,110,111,112,113,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,142,144,145,146,149,150,152,154,155,156,157,158,159,163,164,165,167,169,171,172,185,186,187,189,190,192,194,196,197,199,201,205,206,208,211,212,216,219,221,223,224,226,228,229,235,240,241,245,249,252,261,263,264,],[21,21,-5,-6,54,-59,-60,-61,-62,-63,-64,-65,-66,21,21,-28,21,-32,-40,-41,-42,-43,-44,21,21,21,21,-111,-58,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-67,-68,-69,-11,-23,-24,-25,-27,21,21,21,21,21,21,-26,54,-30,21,21,21,21,-149,21,21,21,54,-76,54,-78,54,-80,21,-110,-155,21,21,-9,-10,-12,-13,-14,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-29,21,-57,54,-73,54,-70,-151,21,21,54,54,-75,-77,-79,54,-154,54,-113,-103,54,-114,21,21,-31,-56,21,21,-95,-150,21,21,21,21,-112,-102,21,-116,21,241,54,54,-74,-81,21,21,54,-115,241,241,241,21,21,-96,21,-97,]),'EXC_DOT':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,138,144,146,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,223,224,226,228,235,249,252,261,263,264,],[22,22,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,22,22,22,22,22,22,22,-58,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-67,-68,-69,22,22,22,22,22,22,22,22,22,22,-149,22,22,22,-76,-78,-80,22,22,22,22,-73,-70,-151,22,22,-75,-77,-79,-114,22,22,22,22,-95,-150,22,22,22,22,22,-116,22,-74,-81,22,22,-115,22,22,-96,22,-97,]),'INCREMENT':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,24,26,36,39,40,41,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,110,111,112,113,138,144,146,149,150,152,156,157,158,163,165,171,172,185,189,190,192,194,196,197,199,201,205,208,211,212,223,224,226,228,235,249,252,261,263,264,],[23,23,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,23,23,73,23,23,23,23,23,-111,-58,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-67,-68,-69,23,23,23,23,23,23,23,23,23,23,-149,23,23,23,-76,-78,-80,23,-110,-155,23,23,23,-73,-70,-151,23,23,-75,-77,-79,-154,-113,-114,23,23,23,23,-95,-150,23,23,23,23,-112,23,-116,23,-74,-81,23,23,-115,23,23,-96,23,-97,]),'DECREMENT':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,24,26,36,39,40,41,45,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,110,111,112,113,138,144,146,149,150,152,156,157,158,163,165,171,172,185,189,190,192,194,196,197,199,201,205,208,211,212,223,224,226,228,235,249,252,261,263,264,],[25,25,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,25,25,74,25,25,25,25,25,-111,-58,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-67,-68,-69,25,25,25,25,25,25,25,25,25,25,-149,25,25,25,-76,-78,-80,25,-110,-155,25,25,25,-73,-70,-151,25,25,-75,-77,-79,-154,-113,-114,25,25,25,25,-95,-150,25,25,25,25,-112,25,-116,25,-74,-81,25,25,-115,25,25,-96,25,-97,]),'LPAREN':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,27,34,35,36,37,38,39,40,41,42,43,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,84,90,91,92,93,95,96,97,98,100,102,104,106,112,113,116,138,144,146,147,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,223,224,226,228,235,249,252,261,263,264,],[26,26,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,26,26,26,90,92,92,26,97,98,26,26,26,106,106,113,115,-118,-58,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-67,-68,-69,26,26,26,26,26,26,90,26,26,26,26,-149,26,26,26,-76,-78,-80,26,26,26,-117,26,-73,-70,92,-151,26,26,-75,-77,-79,-114,26,26,26,26,-95,-150,26,26,26,26,26,-116,26,-74,-81,26,26,-115,26,26,-96,26,-97,]),'ARRAY_TYPE':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,115,138,144,146,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,215,223,224,226,228,235,249,252,261,263,264,],[27,27,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,27,27,84,27,27,27,27,-58,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-67,-68,-69,27,27,27,27,27,27,27,27,27,27,-149,27,27,27,-76,-78,-80,27,27,27,183,27,-73,-70,-151,27,27,-75,-77,-79,-114,27,27,27,27,-95,-150,27,27,27,27,27,-116,27,183,-74,-81,27,27,-115,27,27,-96,27,-97,]),'NUMBER_INTEGER':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,138,144,146,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,216,223,224,226,228,235,240,241,245,249,252,261,263,264,],[29,29,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,29,29,29,29,29,29,29,-58,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-67,-68,-69,29,29,29,29,29,29,29,29,29,29,-149,29,29,29,-76,-78,-80,29,29,29,29,-73,-70,-151,29,29,-75,-77,-79,-114,29,29,29,29,-95,-150,29,29,29,29,29,-116,29,243,-74,-81,29,29,-115,243,243,243,29,29,-96,29,-97,]),'NUMBER_REAL':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,138,144,146,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,216,223,224,226,228,235,240,241,245,249,252,261,263,264,],[30,30,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,30,30,30,30,30,30,30,-58,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-67,-68,-69,30,30,30,30,30,30,30,30,30,30,-149,30,30,30,-76,-78,-80,30,30,30,30,-73,-70,-151,30,30,-75,-77,-79,-114,30,30,30,30,-95,-150,30,30,30,30,30,-116,30,242,-74,-81,30,30,-115,242,242,242,30,30,-96,30,-97,]),'CONSTANT_ENCAPSED_STRING':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,138,144,146,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,216,223,224,226,228,235,240,241,245,249,252,261,263,264,],[31,31,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,31,31,31,31,31,31,31,-58,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-67,-68,-69,31,31,31,31,31,31,31,31,31,31,-149,31,31,31,-76,-78,-80,31,31,31,31,-73,-70,-151,31,31,-75,-77,-79,-114,31,31,31,31,-95,-150,31,31,31,31,31,-116,31,244,-74,-81,31,31,-115,244,244,244,31,31,-96,31,-97,]),'TRUE':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,138,144,146,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,223,224,226,228,235,249,252,261,263,264,],[32,32,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,32,32,32,32,32,32,32,-58,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-67,-68,-69,32,32,32,32,32,32,32,32,32,32,-149,32,32,32,-76,-78,-80,32,32,32,32,-73,-70,-151,32,32,-75,-77,-79,-114,32,32,32,32,-95,-150,32,32,32,32,32,-116,32,-74,-81,32,32,-115,32,32,-96,32,-97,]),'FALSE':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,138,144,146,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,223,224,226,228,235,249,252,261,263,264,],[33,33,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,33,33,33,33,33,33,33,-58,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-67,-68,-69,33,33,33,33,33,33,33,33,33,33,-149,33,33,33,-76,-78,-80,33,33,33,33,-73,-70,-151,33,33,-75,-77,-79,-114,33,33,33,33,-95,-150,33,33,33,33,33,-116,33,-74,-81,33,33,-115,33,33,-96,33,-97,]),'WHILE':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,94,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[34,34,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,34,-58,-67,-68,-69,34,34,147,-149,34,-76,-78,-80,-73,-70,-151,34,-75,-77,-79,-114,34,-95,-150,34,-116,34,-74,-81,-115,34,-96,34,-97,]),'IF':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[35,35,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,35,-58,-67,-68,-69,35,35,-149,35,-76,-78,-80,-73,-70,-151,35,-75,-77,-79,-114,35,-95,-150,35,-116,35,-74,-81,-115,35,-96,35,-97,]),'DO':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[36,36,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,36,-58,-67,-68,-69,36,36,-149,36,-76,-78,-80,-73,-70,-151,36,-75,-77,-79,-114,36,-95,-150,36,-116,36,-74,-81,-115,36,-96,36,-97,]),'FOR':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[37,37,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,37,-58,-67,-68,-69,37,37,-149,37,-76,-78,-80,-73,-70,-151,37,-75,-77,-79,-114,37,-95,-150,37,-116,37,-74,-81,-115,37,-96,37,-97,]),'FOREACH':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[38,38,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,38,-58,-67,-68,-69,38,38,-149,38,-76,-78,-80,-73,-70,-151,38,-75,-77,-79,-114,38,-95,-150,38,-116,38,-74,-81,-115,38,-96,38,-97,]),'BREAK':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[39,39,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,39,-58,-67,-68,-69,39,39,-149,39,-76,-78,-80,-73,-70,-151,39,-75,-77,-79,-114,39,-95,-150,39,-116,39,-74,-81,-115,39,-96,39,-97,]),'CONTINUE':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[40,40,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,40,-58,-67,-68,-69,40,40,-149,40,-76,-78,-80,-73,-70,-151,40,-75,-77,-79,-114,40,-95,-150,40,-116,40,-74,-81,-115,40,-96,40,-97,]),'RETURN':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[41,41,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,41,-58,-67,-68,-69,41,41,-149,41,-76,-78,-80,-73,-70,-151,41,-75,-77,-79,-114,41,-95,-150,41,-116,41,-74,-81,-115,41,-96,41,-97,]),'EXIT':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[42,42,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,42,-58,-67,-68,-69,42,42,-149,42,-76,-78,-80,-73,-70,-151,42,-75,-77,-79,-114,42,-95,-150,42,-116,42,-74,-81,-115,42,-96,42,-97,]),'DIE':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[43,43,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,43,-58,-67,-68,-69,43,43,-149,43,-76,-78,-80,-73,-70,-151,43,-75,-77,-79,-114,43,-95,-150,43,-116,43,-74,-81,-115,43,-96,43,-97,]),'GLOBAL':([2,5,6,7,10,11,12,13,14,15,16,17,36,52,67,68,69,91,93,95,96,100,102,104,144,146,149,150,156,157,158,171,172,192,194,196,211,212,223,224,235,252,261,263,264,],[44,44,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,44,-58,-67,-68,-69,44,44,-149,44,-76,-78,-80,-73,-70,-151,44,-75,-77,-79,-114,44,-95,-150,44,-116,44,-74,-81,-115,44,-96,44,-97,]),'VARIABLE':([2,5,6,7,10,11,12,13,14,15,16,17,21,22,23,25,26,36,39,40,41,44,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,115,138,143,144,146,149,150,152,156,157,158,162,170,171,172,177,178,179,180,181,182,183,184,185,189,190,192,194,196,197,199,201,202,208,211,212,215,218,222,223,224,226,228,231,235,249,252,253,261,263,264,],[45,45,-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,45,45,45,45,45,45,45,45,45,109,-58,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-67,-68,-69,45,45,45,45,45,45,45,45,45,45,-149,45,45,45,-76,-78,-80,45,45,45,176,45,45,-73,-70,-151,45,45,-75,-77,-79,109,209,-114,45,217,-129,-128,-130,-131,-132,-133,-134,45,45,45,-95,-150,45,45,45,45,232,45,-116,45,176,-127,45,-74,-81,45,45,254,-115,45,45,232,-96,45,-97,]),'ID':([2,5,6,7,8,10,11,12,13,14,15,16,17,21,22,26,36,39,40,41,50,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,75,76,77,78,79,80,90,91,92,93,95,96,97,98,100,102,104,106,112,113,138,144,146,149,150,152,156,157,158,171,172,185,189,190,192,194,196,197,199,201,208,211,212,223,224,226,228,235,249,252,261,263,264,],[46,46,-5,-6,51,-59,-60,-61,-62,-63,-64,-65,-66,46,46,46,46,46,46,46,116,-58,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-67,-68,-69,46,46,46,46,46,46,46,46,46,46,-149,46,46,46,-76,-78,-80,46,46,46,46,-73,-70,-151,46,46,-75,-77,-79,-114,46,46,46,46,-95,-150,46,46,46,46,46,-116,46,-74,-81,46,46,-115,46,46,-96,46,-97,]),'RKEY':([6,7,10,11,12,13,14,15,16,17,52,67,68,69,95,96,100,102,104,144,146,148,149,150,156,157,158,171,172,194,195,210,211,212,223,224,235,236,261,264,],[-5,-6,-59,-60,-61,-62,-63,-64,-65,-66,-58,-67,-68,-69,-149,149,-76,-78,-80,-73,-70,194,-151,-148,-75,-77,-79,-114,211,-150,-147,235,-116,-8,-74,-81,-115,-7,-96,-97,]),'AMPERSAND':([8,90,113,115,178,180,181,182,183,184,189,190,202,208,215,253,],[50,143,170,179,218,-130,-131,-132,-133,-134,143,222,231,170,179,231,]),'SEMICOLON':([9,18,19,20,24,28,29,30,31,32,33,39,40,41,42,43,45,70,71,72,73,74,81,89,97,99,101,103,105,107,108,109,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,140,152,153,154,160,161,163,165,167,186,187,192,193,198,199,200,203,204,205,206,219,227,229,233,251,],[52,67,68,69,-28,-32,-40,-41,-42,-43,-44,100,102,104,-51,-53,-111,-11,-23,-24,-25,-27,-26,-30,152,156,157,158,-50,-52,-72,-90,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,197,199,-99,-55,-71,-154,-113,-103,-31,-56,-95,223,226,228,-98,-54,-92,-112,-102,-33,249,-101,-91,-100,]),'PLUS':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,216,219,221,229,240,241,245,],[53,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,53,-30,53,53,53,-110,-155,-9,-10,-12,-13,-14,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-29,-57,53,53,53,53,53,-154,53,-113,-103,53,-31,-56,-112,-102,240,53,53,53,240,240,240,]),'DIVIDE':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[55,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,55,-30,55,55,55,-110,-155,55,55,-12,-13,-14,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-29,-57,55,55,55,55,55,-154,55,-113,-103,55,-31,-56,-112,-102,55,55,55,]),'PERCENT':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[56,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,56,-30,56,56,56,-110,-155,56,56,-12,-13,-14,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-29,-57,56,56,56,56,56,-154,56,-113,-103,56,-31,-56,-112,-102,56,56,56,]),'TIMES':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[57,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,57,-30,57,57,57,-110,-155,57,57,-12,-13,-14,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-29,-57,57,57,57,57,57,-154,57,-113,-103,57,-31,-56,-112,-102,57,57,57,]),'EQUALS':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[58,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,58,-30,58,58,58,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,58,58,58,58,58,58,58,58,58,-29,-57,58,58,58,58,58,-154,58,-113,-103,58,-31,-56,-112,-102,58,58,58,]),'NOT_EQUAL':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[59,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,59,-30,59,59,59,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,59,59,59,59,59,59,59,59,59,-29,-57,59,59,59,59,59,-154,59,-113,-103,59,-31,-56,-112,-102,59,59,59,]),'GREAT_THAN':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[60,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,60,-30,60,60,60,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,60,60,60,60,60,60,60,60,60,-29,-57,60,60,60,60,60,-154,60,-113,-103,60,-31,-56,-112,-102,60,60,60,]),'GREAT_EQUAL':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[61,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,61,-30,61,61,61,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,61,61,61,61,61,61,61,61,61,-29,-57,61,61,61,61,61,-154,61,-113,-103,61,-31,-56,-112,-102,61,61,61,]),'LESS_THAN':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[62,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,62,-30,62,62,62,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,62,62,62,62,62,62,62,62,62,-29,-57,62,62,62,62,62,-154,62,-113,-103,62,-31,-56,-112,-102,62,62,62,]),'LESS_EQUAL':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[63,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,63,-30,63,63,63,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,63,63,63,63,63,63,63,63,63,-29,-57,63,63,63,63,63,-154,63,-113,-103,63,-31,-56,-112,-102,63,63,63,]),'AND':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[64,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,64,-30,64,64,64,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,64,64,64,64,64,64,64,-29,-57,64,64,64,64,64,-154,64,-113,-103,64,-31,-56,-112,-102,64,64,64,]),'OR':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[65,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,65,-30,65,65,65,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,65,65,65,65,65,65,65,-29,-57,65,65,65,65,65,-154,65,-113,-103,65,-31,-56,-112,-102,65,65,65,]),'INTE_DOT':([9,24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,89,99,101,103,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,142,145,154,155,159,163,164,165,167,169,186,187,205,206,219,221,229,],[66,-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,66,-30,66,66,66,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,66,66,66,66,66,66,66,-29,-57,66,66,66,66,66,-154,66,-113,-103,66,-31,-56,-112,-102,-33,66,66,]),'RPAREN':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,82,83,84,85,86,87,88,89,90,106,110,111,113,115,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,139,140,141,142,145,151,154,159,163,165,166,167,168,169,173,175,176,186,187,188,191,197,200,205,206,207,209,214,217,219,220,221,225,226,228,229,230,232,234,237,238,239,242,243,244,246,247,248,249,250,251,254,255,256,257,258,259,260,262,],[-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,137,138,-47,-45,-46,-48,-49,-30,140,160,-110,-155,167,174,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,187,-57,-142,-143,192,196,-99,203,-154,-113,206,-103,-105,-108,213,-122,-123,-31,-56,-141,-144,-82,-98,-112,-102,-104,-109,-121,-124,-33,-157,-145,-88,-86,-83,-101,252,-94,-107,-153,-125,-135,-138,-139,-140,-156,-146,-87,-84,-85,-100,-93,-106,-152,-136,-137,-126,-89,263,]),'DDOT':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,140,163,165,167,186,187,205,206,219,],[-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,-30,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,185,-34,-35,-36,-37,-38,-39,-29,-57,-154,-113,-103,-31,-56,-112,-102,-33,]),'ATTR_ASSOC':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,140,142,163,165,167,186,187,205,206,219,230,232,254,],[-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,-30,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,190,-154,-113,-103,-31,-56,-112,-102,-33,253,-94,-93,]),'COLON':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,108,109,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,140,141,142,154,163,165,167,168,169,175,176,186,187,191,204,205,206,209,217,219,220,221,229,234,237,238,239,242,243,244,247,257,258,259,],[-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,-30,162,-90,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,189,-143,201,-154,-113,-103,208,-108,215,-123,-31,-56,-144,162,-112,-102,-109,-124,-33,189,-145,201,208,215,-125,-135,-138,-139,-140,-146,-136,-137,-126,]),'AS':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,110,111,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,140,155,163,165,167,186,187,205,206,219,],[-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,-30,-110,-155,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,202,-154,-113,-103,-31,-56,-112,-102,-33,]),'RBRACKET':([24,28,29,30,31,32,33,45,70,71,72,73,74,81,89,110,111,112,117,118,119,120,121,122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,140,163,164,165,167,186,187,205,206,219,],[-28,-32,-40,-41,-42,-43,-44,-111,-11,-23,-24,-25,-27,-26,-30,-110,-155,165,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-34,-35,-36,-37,-38,-39,-29,-57,-154,205,-113,-103,-31,-56,-112,-102,-33,]),'ADD_ASSIGN':([24,45,110,111,163,165,205,],[75,-111,-110,-155,-154,-113,-112,]),'SUB_ASSIGN':([24,45,110,111,163,165,205,],[76,-111,-110,-155,-154,-113,-112,]),'MOD_ASSIGN':([24,45,110,111,163,165,205,],[77,-111,-110,-155,-154,-113,-112,]),'TIMES_ASSIGN':([24,45,110,111,163,165,205,],[78,-111,-110,-155,-154,-113,-112,]),'DIVIDE_ASSIGN':([24,45,110,111,163,165,205,],[79,-111,-110,-155,-154,-113,-112,]),'ASSIGN':([24,45,110,111,163,165,176,205,217,],[80,-111,-110,-155,-154,-113,216,-112,245,]),'INT_TYPE':([26,115,215,],[85,180,180,]),'FLOAT_TYPE':([26,115,215,],[86,182,182,]),'STRING_TYPE':([26,115,215,],[87,181,181,]),'BOOL_TYPE':([26,115,215,],[88,184,184,]),'LKEY':([36,91,93,114,174,192,196,213,252,263,],[96,96,96,172,-120,-95,96,-119,96,96,]),'LBRACKET':([45,111,165,205,],[112,112,-113,-112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'main_program':([2,5,],[3,48,]),'inner_statement':([2,5,172,212,],[5,5,212,212,]),'function_declaration_statement':([2,5,172,212,],[6,6,6,6,]),'statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[7,7,95,95,95,150,150,7,95,7,95,95,]),'expr':([2,5,21,22,26,36,39,40,41,53,54,55,56,57,58,59,60,61,62,63,64,65,66,75,76,77,78,79,80,90,91,92,93,96,97,98,106,112,113,138,150,152,172,185,189,190,196,197,199,201,208,212,226,228,249,252,263,],[9,9,70,71,82,9,99,101,103,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,142,9,145,9,9,154,155,159,164,169,186,9,154,9,219,142,221,9,154,154,229,169,9,154,154,154,9,9,]),'while_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[10,10,10,10,10,10,10,10,10,10,10,10,]),'if_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[11,11,11,11,11,11,11,11,11,11,11,11,]),'do_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[12,12,12,12,12,12,12,12,12,12,12,12,]),'for_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[13,13,13,13,13,13,13,13,13,13,13,13,]),'foreach_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[14,14,14,14,14,14,14,14,14,14,14,14,]),'break_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'continue_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'return_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[17,17,17,17,17,17,17,17,17,17,17,17,]),'exit_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[18,18,18,18,18,18,18,18,18,18,18,18,]),'die_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[19,19,19,19,19,19,19,19,19,19,19,19,]),'global_statement':([2,5,36,91,93,96,150,172,196,212,252,263,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'variable':([2,5,21,22,23,25,26,36,39,40,41,53,54,55,56,57,58,59,60,61,62,63,64,65,66,75,76,77,78,79,80,90,91,92,93,96,97,98,106,112,113,138,143,150,152,172,185,189,190,196,197,199,201,208,212,222,226,228,249,252,263,],[24,24,24,24,72,81,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,191,24,24,24,24,24,24,24,24,24,24,24,24,247,24,24,24,24,24,]),'function_call':([2,5,21,22,26,36,39,40,41,53,54,55,56,57,58,59,60,61,62,63,64,65,66,75,76,77,78,79,80,90,91,92,93,96,97,98,106,112,113,138,150,152,172,185,189,190,196,197,199,201,208,212,226,228,249,252,263,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'fds_id':([8,],[49,]),'typecast_operator':([26,],[83,]),'array_declaration':([27,84,],[89,89,]),'expr_parentheses':([34,35,147,],[91,93,193,]),'statement_block_optional':([36,91,93,196,252,263,],[94,144,146,224,261,264,]),'exit_expr':([42,43,],[105,107,]),'global_var':([44,162,],[108,204,]),'variable_array_selector':([45,111,],[110,163,]),'selector':([45,111,],[111,111,]),'fds_parameter':([49,],[114,]),'array_pair_list':([90,],[139,]),'array_pair':([90,189,],[141,220,]),'statement_MUL':([96,150,],[148,195,]),'for_parameters':([97,],[151,]),'for_expr_OPT':([97,152,197,199,226,228,249,],[153,198,225,227,248,250,260,]),'statement_COLON_GLOBAL':([108,204,],[161,233,]),'function_call_parameter_list':([113,],[166,]),'function_call_parameter':([113,208,],[168,234,]),'fds_statements':([114,],[171,]),'parameter_list':([115,],[173,]),'parameter':([115,215,],[175,237,]),'parameter_prefix':([115,215,],[177,177,]),'parameter_type':([115,215,],[178,178,]),'array_pair_list_ARR_PAIR':([141,220,],[188,246,]),'for_expr_COLON_EXPR':([154,229,],[200,251,]),'fc_parameter_list_COLON_PARAMETER':([168,234,],[207,255,]),'inner_statement_MUL':([172,212,],[210,236,]),'parameter_list_colon_parameter':([175,237,],[214,256,]),'ampersand_variable':([202,253,],[230,262,]),'static_scalar':([216,240,241,245,],[238,257,258,259,]),'common_scalar':([216,240,241,245,],[239,239,239,239,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> BEGIN_PROGRAM main_program END_PROGRAM','main',3,'p_main','Parser.py',25),
  ('main -> BEGIN_PROGRAM END_PROGRAM','main',2,'p_main','Parser.py',26),
  ('main_program -> inner_statement main_program','main_program',2,'p_main_program','Parser.py',35),
  ('main_program -> inner_statement','main_program',1,'p_main_program','Parser.py',36),
  ('inner_statement -> function_declaration_statement','inner_statement',1,'p_inner_statement','Parser.py',45),
  ('inner_statement -> statement','inner_statement',1,'p_inner_statement','Parser.py',46),
  ('inner_statement_MUL -> inner_statement inner_statement_MUL','inner_statement_MUL',2,'p_inner_statement_MUL','Parser.py',55),
  ('inner_statement_MUL -> inner_statement','inner_statement_MUL',1,'p_inner_statement_MUL','Parser.py',56),
  ('expr -> expr PLUS expr','expr',3,'p_expr','Parser.py',65),
  ('expr -> expr MINUS expr','expr',3,'p_expr','Parser.py',66),
  ('expr -> MINUS expr','expr',2,'p_expr','Parser.py',67),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','Parser.py',68),
  ('expr -> expr PERCENT expr','expr',3,'p_expr','Parser.py',69),
  ('expr -> expr TIMES expr','expr',3,'p_expr','Parser.py',70),
  ('expr -> expr EQUALS expr','expr',3,'p_expr','Parser.py',71),
  ('expr -> expr NOT_EQUAL expr','expr',3,'p_expr','Parser.py',72),
  ('expr -> expr GREAT_THAN expr','expr',3,'p_expr','Parser.py',73),
  ('expr -> expr GREAT_EQUAL expr','expr',3,'p_expr','Parser.py',74),
  ('expr -> expr LESS_THAN expr','expr',3,'p_expr','Parser.py',75),
  ('expr -> expr LESS_EQUAL expr','expr',3,'p_expr','Parser.py',76),
  ('expr -> expr AND expr','expr',3,'p_expr','Parser.py',77),
  ('expr -> expr OR expr','expr',3,'p_expr','Parser.py',78),
  ('expr -> EXC_DOT expr','expr',2,'p_expr','Parser.py',79),
  ('expr -> INCREMENT variable','expr',2,'p_expr','Parser.py',80),
  ('expr -> variable INCREMENT','expr',2,'p_expr','Parser.py',81),
  ('expr -> DECREMENT variable','expr',2,'p_expr','Parser.py',82),
  ('expr -> variable DECREMENT','expr',2,'p_expr','Parser.py',83),
  ('expr -> variable','expr',1,'p_expr','Parser.py',84),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr','Parser.py',85),
  ('expr -> ARRAY_TYPE array_declaration','expr',2,'p_expr','Parser.py',86),
  ('expr -> LPAREN typecast_operator RPAREN expr','expr',4,'p_expr','Parser.py',87),
  ('expr -> function_call','expr',1,'p_expr','Parser.py',88),
  ('expr -> expr INTE_DOT expr DDOT expr','expr',5,'p_expr','Parser.py',89),
  ('expr -> variable ADD_ASSIGN expr','expr',3,'p_expr','Parser.py',90),
  ('expr -> variable SUB_ASSIGN expr','expr',3,'p_expr','Parser.py',91),
  ('expr -> variable MOD_ASSIGN expr','expr',3,'p_expr','Parser.py',92),
  ('expr -> variable TIMES_ASSIGN expr','expr',3,'p_expr','Parser.py',93),
  ('expr -> variable DIVIDE_ASSIGN expr','expr',3,'p_expr','Parser.py',94),
  ('expr -> variable ASSIGN expr','expr',3,'p_expr','Parser.py',95),
  ('expr -> NUMBER_INTEGER','expr',1,'p_expr','Parser.py',96),
  ('expr -> NUMBER_REAL','expr',1,'p_expr','Parser.py',97),
  ('expr -> CONSTANT_ENCAPSED_STRING','expr',1,'p_expr','Parser.py',98),
  ('expr -> TRUE','expr',1,'p_expr','Parser.py',99),
  ('expr -> FALSE','expr',1,'p_expr','Parser.py',100),
  ('typecast_operator -> INT_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',175),
  ('typecast_operator -> FLOAT_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',176),
  ('typecast_operator -> ARRAY_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',177),
  ('typecast_operator -> STRING_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',178),
  ('typecast_operator -> BOOL_TYPE','typecast_operator',1,'p_typecast_operator','Parser.py',179),
  ('exit_statement -> EXIT exit_expr','exit_statement',2,'p_exit_statement','Parser.py',185),
  ('exit_statement -> EXIT','exit_statement',1,'p_exit_statement','Parser.py',186),
  ('die_statement -> DIE exit_expr','die_statement',2,'p_die_statement','Parser.py',195),
  ('die_statement -> DIE','die_statement',1,'p_die_statement','Parser.py',196),
  ('exit_expr -> LPAREN expr RPAREN','exit_expr',3,'p_exit_expr','Parser.py',205),
  ('exit_expr -> LPAREN RPAREN','exit_expr',2,'p_exit_expr','Parser.py',206),
  ('array_declaration -> LPAREN array_pair_list RPAREN','array_declaration',3,'p_array_declaration','Parser.py',215),
  ('array_declaration -> LPAREN RPAREN','array_declaration',2,'p_array_declaration','Parser.py',216),
  ('statement -> expr SEMICOLON','statement',2,'p_statement','Parser.py',225),
  ('statement -> while_statement','statement',1,'p_statement','Parser.py',226),
  ('statement -> if_statement','statement',1,'p_statement','Parser.py',227),
  ('statement -> do_statement','statement',1,'p_statement','Parser.py',228),
  ('statement -> for_statement','statement',1,'p_statement','Parser.py',229),
  ('statement -> foreach_statement','statement',1,'p_statement','Parser.py',230),
  ('statement -> break_statement','statement',1,'p_statement','Parser.py',231),
  ('statement -> continue_statement','statement',1,'p_statement','Parser.py',232),
  ('statement -> return_statement','statement',1,'p_statement','Parser.py',233),
  ('statement -> exit_statement SEMICOLON','statement',2,'p_statement','Parser.py',234),
  ('statement -> die_statement SEMICOLON','statement',2,'p_statement','Parser.py',235),
  ('statement -> global_statement SEMICOLON','statement',2,'p_statement','Parser.py',236),
  ('if_statement -> IF expr_parentheses statement_block_optional','if_statement',3,'p_if_statement','Parser.py',265),
  ('global_statement -> GLOBAL global_var statement_COLON_GLOBAL','global_statement',3,'p_global_statement','Parser.py',276),
  ('global_statement -> GLOBAL global_var','global_statement',2,'p_global_statement','Parser.py',277),
  ('while_statement -> WHILE expr_parentheses statement_block_optional','while_statement',3,'p_while_statement','Parser.py',287),
  ('do_statement -> DO statement_block_optional WHILE expr_parentheses SEMICOLON','do_statement',5,'p_do_statement','Parser.py',294),
  ('break_statement -> BREAK expr SEMICOLON','break_statement',3,'p_break_statement','Parser.py',300),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','Parser.py',301),
  ('continue_statement -> CONTINUE expr SEMICOLON','continue_statement',3,'p_continue_statement','Parser.py',310),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','Parser.py',311),
  ('return_statement -> RETURN expr SEMICOLON','return_statement',3,'p_return_statement','Parser.py',320),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','Parser.py',321),
  ('for_statement -> FOR LPAREN for_parameters RPAREN statement_block_optional','for_statement',5,'p_for_statement','Parser.py',330),
  ('for_parameters -> SEMICOLON SEMICOLON','for_parameters',2,'p_for_parameters','Parser.py',336),
  ('for_parameters -> for_expr_OPT SEMICOLON SEMICOLON','for_parameters',3,'p_for_parameters','Parser.py',337),
  ('for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON','for_parameters',4,'p_for_parameters','Parser.py',338),
  ('for_parameters -> for_expr_OPT SEMICOLON SEMICOLON for_expr_OPT','for_parameters',4,'p_for_parameters','Parser.py',339),
  ('for_parameters -> SEMICOLON for_expr_OPT SEMICOLON','for_parameters',3,'p_for_parameters','Parser.py',340),
  ('for_parameters -> SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT','for_parameters',4,'p_for_parameters','Parser.py',341),
  ('for_parameters -> SEMICOLON SEMICOLON for_expr_OPT','for_parameters',3,'p_for_parameters','Parser.py',342),
  ('for_parameters -> for_expr_OPT SEMICOLON for_expr_OPT SEMICOLON for_expr_OPT','for_parameters',5,'p_for_parameters','Parser.py',343),
  ('global_var -> VARIABLE','global_var',1,'p_global_var','Parser.py',365),
  ('statement_COLON_GLOBAL -> COLON global_var statement_COLON_GLOBAL','statement_COLON_GLOBAL',3,'p_statement_COLON_GLOBAL','Parser.py',372),
  ('statement_COLON_GLOBAL -> COLON global_var','statement_COLON_GLOBAL',2,'p_statement_COLON_GLOBAL','Parser.py',373),
  ('ampersand_variable -> AMPERSAND VARIABLE','ampersand_variable',2,'p_ampersand_variable','Parser.py',382),
  ('ampersand_variable -> VARIABLE','ampersand_variable',1,'p_ampersand_variable','Parser.py',383),
  ('expr_parentheses -> LPAREN expr RPAREN','expr_parentheses',3,'p_expr_parentheses','Parser.py',392),
  ('foreach_statement -> FOREACH LPAREN expr AS ampersand_variable RPAREN statement_block_optional','foreach_statement',7,'p_foreach_statement','Parser.py',399),
  ('foreach_statement -> FOREACH LPAREN expr AS ampersand_variable ATTR_ASSOC ampersand_variable RPAREN statement_block_optional','foreach_statement',9,'p_foreach_statement','Parser.py',400),
  ('for_expr_OPT -> expr for_expr_COLON_EXPR','for_expr_OPT',2,'p_for_expr_OPT','Parser.py',409),
  ('for_expr_OPT -> expr','for_expr_OPT',1,'p_for_expr_OPT','Parser.py',410),
  ('for_expr_COLON_EXPR -> COLON expr for_expr_COLON_EXPR','for_expr_COLON_EXPR',3,'p_for_expr_COLON_EXPR','Parser.py',419),
  ('for_expr_COLON_EXPR -> COLON expr','for_expr_COLON_EXPR',2,'p_for_expr_COLON_EXPR','Parser.py',420),
  ('function_call -> ID LPAREN function_call_parameter_list RPAREN','function_call',4,'p_function_call','Parser.py',429),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','Parser.py',430),
  ('function_call_parameter_list -> function_call_parameter fc_parameter_list_COLON_PARAMETER','function_call_parameter_list',2,'p_function_call_parameter_list','Parser.py',439),
  ('function_call_parameter_list -> function_call_parameter','function_call_parameter_list',1,'p_function_call_parameter_list','Parser.py',440),
  ('fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter fc_parameter_list_COLON_PARAMETER','fc_parameter_list_COLON_PARAMETER',3,'p_fc_parameter_list_COLON_PARAMETER','Parser.py',449),
  ('fc_parameter_list_COLON_PARAMETER -> COLON function_call_parameter','fc_parameter_list_COLON_PARAMETER',2,'p_fc_parameter_list_COLON_PARAMETER','Parser.py',450),
  ('function_call_parameter -> expr','function_call_parameter',1,'p_function_call_parameter','Parser.py',459),
  ('function_call_parameter -> AMPERSAND VARIABLE','function_call_parameter',2,'p_function_call_parameter','Parser.py',460),
  ('variable -> VARIABLE variable_array_selector','variable',2,'p_variable','Parser.py',469),
  ('variable -> VARIABLE','variable',1,'p_variable','Parser.py',470),
  ('selector -> LBRACKET expr RBRACKET','selector',3,'p_selector','Parser.py',479),
  ('selector -> LBRACKET RBRACKET','selector',2,'p_selector','Parser.py',480),
  ('function_declaration_statement -> FUNCTION fds_id fds_parameter fds_statements','function_declaration_statement',4,'p_function_declaration_statement','Parser.py',489),
  ('fds_statements -> LKEY inner_statement_MUL RKEY','fds_statements',3,'p_fds_statements','Parser.py',495),
  ('fds_statements -> LKEY RKEY','fds_statements',2,'p_fds_statements','Parser.py',496),
  ('fds_id -> AMPERSAND ID','fds_id',2,'p_fds_id','Parser.py',505),
  ('fds_id -> ID','fds_id',1,'p_fds_id','Parser.py',506),
  ('fds_parameter -> LPAREN parameter_list RPAREN','fds_parameter',3,'p_fds_parameter','Parser.py',515),
  ('fds_parameter -> LPAREN RPAREN','fds_parameter',2,'p_fds_parameter','Parser.py',516),
  ('parameter_list -> parameter parameter_list_colon_parameter','parameter_list',2,'p_parameter_list','Parser.py',525),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','Parser.py',526),
  ('parameter -> VARIABLE','parameter',1,'p_parameter','Parser.py',535),
  ('parameter -> parameter_prefix VARIABLE','parameter',2,'p_parameter','Parser.py',536),
  ('parameter -> VARIABLE ASSIGN static_scalar','parameter',3,'p_parameter','Parser.py',537),
  ('parameter -> parameter_prefix VARIABLE ASSIGN static_scalar','parameter',4,'p_parameter','Parser.py',538),
  ('parameter_prefix -> parameter_type AMPERSAND','parameter_prefix',2,'p_parameter_prefix','Parser.py',551),
  ('parameter_prefix -> AMPERSAND','parameter_prefix',1,'p_parameter_prefix','Parser.py',552),
  ('parameter_prefix -> parameter_type','parameter_prefix',1,'p_parameter_prefix','Parser.py',553),
  ('parameter_type -> INT_TYPE','parameter_type',1,'p_parameter_type','Parser.py',564),
  ('parameter_type -> STRING_TYPE','parameter_type',1,'p_parameter_type','Parser.py',565),
  ('parameter_type -> FLOAT_TYPE','parameter_type',1,'p_parameter_type','Parser.py',566),
  ('parameter_type -> ARRAY_TYPE','parameter_type',1,'p_parameter_type','Parser.py',567),
  ('parameter_type -> BOOL_TYPE','parameter_type',1,'p_parameter_type','Parser.py',568),
  ('static_scalar -> common_scalar','static_scalar',1,'p_static_scalar','Parser.py',574),
  ('static_scalar -> PLUS static_scalar','static_scalar',2,'p_static_scalar','Parser.py',575),
  ('static_scalar -> MINUS static_scalar','static_scalar',2,'p_static_scalar','Parser.py',576),
  ('common_scalar -> NUMBER_REAL','common_scalar',1,'p_common_scalar','Parser.py',587),
  ('common_scalar -> NUMBER_INTEGER','common_scalar',1,'p_common_scalar','Parser.py',588),
  ('common_scalar -> CONSTANT_ENCAPSED_STRING','common_scalar',1,'p_common_scalar','Parser.py',589),
  ('array_pair_list -> array_pair array_pair_list_ARR_PAIR','array_pair_list',2,'p_array_pair_list','Parser.py',595),
  ('array_pair_list -> array_pair','array_pair_list',1,'p_array_pair_list','Parser.py',596),
  ('array_pair -> expr','array_pair',1,'p_array_pair','Parser.py',605),
  ('array_pair -> AMPERSAND variable','array_pair',2,'p_array_pair','Parser.py',606),
  ('array_pair -> expr ATTR_ASSOC expr','array_pair',3,'p_array_pair','Parser.py',607),
  ('array_pair -> expr ATTR_ASSOC AMPERSAND variable','array_pair',4,'p_array_pair','Parser.py',608),
  ('statement_MUL -> statement statement_MUL','statement_MUL',2,'p_statement_MUL','Parser.py',624),
  ('statement_MUL -> statement','statement_MUL',1,'p_statement_MUL','Parser.py',625),
  ('statement_block_optional -> statement','statement_block_optional',1,'p_statement_block_optional','Parser.py',634),
  ('statement_block_optional -> LKEY statement_MUL RKEY','statement_block_optional',3,'p_statement_block_optional','Parser.py',635),
  ('statement_block_optional -> LKEY RKEY','statement_block_optional',2,'p_statement_block_optional','Parser.py',636),
  ('parameter_list_colon_parameter -> COLON parameter parameter_list_colon_parameter','parameter_list_colon_parameter',3,'p_parameter_list_colon_parameter','Parser.py',647),
  ('parameter_list_colon_parameter -> COLON parameter','parameter_list_colon_parameter',2,'p_parameter_list_colon_parameter','Parser.py',648),
  ('variable_array_selector -> selector variable_array_selector','variable_array_selector',2,'p_variable_array_selector','Parser.py',657),
  ('variable_array_selector -> selector','variable_array_selector',1,'p_variable_array_selector','Parser.py',658),
  ('array_pair_list_ARR_PAIR -> COLON array_pair array_pair_list_ARR_PAIR','array_pair_list_ARR_PAIR',3,'p_array_pair_list_ARR_PAIR','Parser.py',667),
  ('array_pair_list_ARR_PAIR -> COLON array_pair','array_pair_list_ARR_PAIR',2,'p_array_pair_list_ARR_PAIR','Parser.py',668),
]
